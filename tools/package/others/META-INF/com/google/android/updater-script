
package_extract_dir("META-INF/io/tensevntysevn", "/tmp/scripts");
set_metadata_recursive("/tmp/scripts", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
package_extract_file("addon.prop", "/tmp/addon.prop");
package_extract_file("system.prop", "/tmp/system.prop");
package_extract_file("files-list.txt", "/tmp/files-list.txt");

ui_print("=========================================");
ui_print("         _____              _            ");
ui_print("        |  ___| __ ___  ___| |__         ");
ui_print("        | |_ | '__/ _ \/ __| '_ \        ");
ui_print("        |  _|| | |  __/\__ \ | | |       ");
ui_print("        |_|  |_|  \___||___/_| |_|       ");
ui_print("                                         ");
ui_print("=========================================");
ui_print("                Fresh Core               ");
ui_print(file_getprop("/tmp/addon.prop", "fresh.addon.build"));
ui_print("=========================================");

# Determine where are our partitions.
ui_print("- Checking device compatibility");
package_extract_dir("META-INF/io/tensevntysevn", "/tmp/scripts");
set_metadata_recursive("/tmp/scripts", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
run_program("/tmp/scripts/frsh_toolkit", "mounts_checker");
sleep(5);
ifelse(
	file_getprop("/tmp/frsh_install.prop", "boot.part.by-name") == "fail",
	 (
		ui_print("   - Failed founding partitions!");
		ui_print("     Contact developer for support!");
		sleep(5);
		abort(" ");
	 )
);
ui_print("   - Partitions found!");
sleep(3);

# Prepare partitions for addon install
ifelse(is_mounted(file_getprop("/tmp/frsh_install.prop", "block.system.mount")), sleep(1), mount("ext4", "EMMC", file_getprop("/tmp/frsh_install.prop", "block.system"), file_getprop("/tmp/frsh_install.prop", "block.system.mount")));
ifelse(is_mounted("/product"), sleep(1), mount("ext4", "EMMC", file_getprop("/tmp/frsh_install.prop", "block.product"), "/product"));
ifelse(is_mounted("/vendor"), sleep(1), mount("ext4", "EMMC", file_getprop("/tmp/frsh_install.prop", "block.vendor"), "/vendor"));
ifelse(is_mounted("/data"), sleep(1), run_program("/tmp/scripts/busybox", "mount", "/data"));

# Check if there is an existing Fresh install.
run_program("/tmp/scripts/frsh_toolkit", "frsh_check");
ifelse(
	file_getprop("/tmp/frsh_install.prop", "rom.exist.system") == "false",
	 (
		package_extract_file("boot.img", file_getprop("/tmp/frsh_install.prop", "block.boot"));
	 ),
	 (
		package_extract_file("fresh_core.prop", "/system_root/system/etc/fresh/fresh_core.prop");
		package_extract_file("boot.img", "/system_root/system/etc/fresh/boot.img");
		package_extract_file("fresh_core.prop", "/system/etc/fresh/fresh_core.prop");
		package_extract_file("boot.img", "/system/etc/fresh/boot.img");
	 )
);

ui_print("   - Unmounting partitions.");
ifelse(is_mounted(file_getprop("/tmp/frsh_install.prop", "block.system.mount")), unmount(file_getprop("/tmp/frsh_install.prop", "block.system.mount")));
ifelse(is_mounted("/product"), unmount("/product"));
ifelse(is_mounted("/vendor"), unmount("/vendor"));

run_program("/tmp/scripts/frsh_toolkit", "install_cleanup");

# Finish installation
ui_print(" ");
