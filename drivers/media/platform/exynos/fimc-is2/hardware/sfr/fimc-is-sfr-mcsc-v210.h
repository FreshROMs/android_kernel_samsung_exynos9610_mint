/*
 * amsung EXYNOS FIMC-IS2 (Imaging Subsystem) driver
 *
 *  Copyright (C) 2015 Samsung Electronics Co., Ltd.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 */

#ifndef FIMC_IS_SFR_MCSC_V210_H
#define FIMC_IS_SFR_MCSC_V210_H

#include "fimc-is-hw-api-common.h"

enum fimc_is_mcsc_reg_name {
	MCSC_R_SC_GCTRL_0,
	MCSC_R_TRIGGER_CTRL_0,
	MCSC_R_READ_SHADOW_REG_CTRL,
	MCSC_R_STOP_REQ_POST_EN_CTRL_0,
	MCSC_R_SC_RESET_CTRL_GLOBAL,
	MCSC_R_SC_RESET_CTRL_0,
	MCSC_R_CORE0_CLK_GATE_CTRL,
	MCSC_R_SC0_CLK_GATE_CTRL,
	MCSC_R_SC1_CLK_GATE_CTRL,
	MCSC_R_SC2_CLK_GATE_CTRL,
	MCSC_R_PC0_CLK_GATE_CTRL,
	MCSC_R_PC1_CLK_GATE_CTRL,
	MCSC_R_PC2_CLK_GATE_CTRL,
	MCSC_R_INPUT_SRC0_CTRL,
	MCSC_R_OTF_OUTPUT_PATH_CTRL,
	MCSC_R_DITHER_0_CTRL,
	MCSC_R_INPUT0_IMG_SIZE,
	MCSC_R_INPUT0_FIFO_STATUS,
	MCSC_R_SC0_CTRL,
	MCSC_R_SC0_SRC_POS,
	MCSC_R_SC0_SRC_SIZE,
	MCSC_R_SC0_DST_SIZE,
	MCSC_R_SC0_H_RATIO,
	MCSC_R_SC0_V_RATIO,
	MCSC_R_SC0_H_INIT_PHASE_OFFSET,
	MCSC_R_SC0_V_INIT_PHASE_OFFSET,
	MCSC_R_SC0_ROUND_MODE,
	MCSC_R_SC0_COEFF_CTRL,
	MCSC_R_SC1_CTRL,
	MCSC_R_SC1_SRC_POS,
	MCSC_R_SC1_SRC_SIZE,
	MCSC_R_SC1_DST_SIZE,
	MCSC_R_SC1_H_RATIO,
	MCSC_R_SC1_V_RATIO,
	MCSC_R_SC1_H_INIT_PHASE_OFFSET,
	MCSC_R_SC1_V_INIT_PHASE_OFFSET,
	MCSC_R_SC1_ROUND_MODE,
	MCSC_R_SC1_COEFF_CTRL,
	MCSC_R_SC2_CTRL,
	MCSC_R_SC2_SRC_POS,
	MCSC_R_SC2_SRC_SIZE,
	MCSC_R_SC2_DST_SIZE,
	MCSC_R_SC2_H_RATIO,
	MCSC_R_SC2_V_RATIO,
	MCSC_R_SC2_H_INIT_PHASE_OFFSET,
	MCSC_R_SC2_V_INIT_PHASE_OFFSET,
	MCSC_R_SC2_ROUND_MODE,
	MCSC_R_SC2_COEFF_CTRL,
	MCSC_R_PC0_POST_SC_CTRL,
	MCSC_R_PC0_POST_SC_IMG_SIZE,
	MCSC_R_PC0_POST_SC_DST_SIZE,
	MCSC_R_PC0_POST_SC_H_RATIO,
	MCSC_R_PC0_POST_SC_V_RATIO,
	MCSC_R_PC0_CONV420_CTRL,
	MCSC_R_PC0_CONV420_WEIGHT,
	MCSC_R_PC0_BCHS_CTRL,
	MCSC_R_PC0_BCHS_BC,
	MCSC_R_PC0_BCHS_HS1,
	MCSC_R_PC0_BCHS_HS2,
	MCSC_R_PC0_OTF_OUT_CTRL,
	MCSC_R_PC0_DMA_OUT_CTRL,
	MCSC_R_PC1_POST_SC_CTRL,
	MCSC_R_PC1_POST_SC_IMG_SIZE,
	MCSC_R_PC1_POST_SC_DST_SIZE,
	MCSC_R_PC1_POST_SC_H_RATIO,
	MCSC_R_PC1_POST_SC_V_RATIO,
	MCSC_R_PC1_CONV420_CTRL,
	MCSC_R_PC1_CONV420_WEIGHT,
	MCSC_R_PC1_BCHS_CTRL,
	MCSC_R_PC1_BCHS_BC,
	MCSC_R_PC1_BCHS_HS1,
	MCSC_R_PC1_BCHS_HS2,
	MCSC_R_PC1_OTF_OUT_CTRL,
	MCSC_R_PC1_DMA_OUT_CTRL,
	MCSC_R_PC2_POST_SC_CTRL,
	MCSC_R_PC2_POST_SC_IMG_SIZE,
	MCSC_R_PC2_POST_SC_DST_SIZE,
	MCSC_R_PC2_POST_SC_H_RATIO,
	MCSC_R_PC2_POST_SC_V_RATIO,
	MCSC_R_PC2_CONV420_CTRL,
	MCSC_R_PC2_CONV420_WEIGHT,
	MCSC_R_PC2_BCHS_CTRL,
	MCSC_R_PC2_BCHS_BC,
	MCSC_R_PC2_BCHS_HS1,
	MCSC_R_PC2_BCHS_HS2,
	MCSC_R_PC2_OTF_OUT_CTRL,
	MCSC_R_PC2_DMA_OUT_CTRL,
	MCSC_R_SCALER_RESET_STATUS,
	MCSC_R_SCALER_RUNNING_STATUS,
	MCSC_R_DMA_RUNNING_STATUS,
	MCSC_R_SCALER_INPUT_STATUS_0,
	MCSC_R_SCALER_INTERRUPT_MASK_0,
	MCSC_R_SCALER_INTERRUPT_0,
	MCSC_R_SCALER_VERSION,
	MCSC_R_HWFC_SWRESET,
	MCSC_R_HWFC_MODE,
	MCSC_R_HWFC_REGION_IDX_BIN,
	MCSC_R_HWFC_REGION_IDX_GRAY,
	MCSC_R_HWFC_CURR_REGION,
	MCSC_R_HWFC_CONFIG_IMAGE_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE0_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE0_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE1_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE1_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE2_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE2_A,
	MCSC_R_HWFC_FRAME_START_SELECT,
	MCSC_R_HWFC_INDEX_RESET,
	MCSC_R_HWFC_ENABLE_AUTO_CLEAR,
	MCSC_R_RDMA_DATA_FORMAT,
	MCSC_R_WDMA0_DATA_FORMAT,
	MCSC_R_WDMA1_DATA_FORMAT,
	MCSC_R_WDMA2_DATA_FORMAT,
	MCSC_R_RDMA_SWAP_TABLE,
	MCSC_R_WDMA0_SWAP_TABLE,
	MCSC_R_WDMA1_SWAP_TABLE,
	MCSC_R_WDMA2_SWAP_TABLE,
	MCSC_R_RDMA_QOS_LUT0,
	MCSC_R_RDMA_QOS_LUT1,
	MCSC_R_WDMA_QOS_LUT0,
	MCSC_R_WDMA_QOS_LUT1,
	MCSC_R_WDMA0_CRC_RESULT0,
	MCSC_R_WDMA0_CRC_RESULT1,
	MCSC_R_WDMA0_CRC_RESULT2,
	MCSC_R_WDMA1_CRC_RESULT0,
	MCSC_R_WDMA1_CRC_RESULT1,
	MCSC_R_WDMA1_CRC_RESULT2,
	MCSC_R_WDMA2_CRC_RESULT0,
	MCSC_R_WDMA2_CRC_RESULT1,
	MCSC_R_WDMA2_CRC_RESULT2,
	MCSC_R_WDMA0_FLIP_CONTROL,
	MCSC_R_WDMA1_FLIP_CONTROL,
	MCSC_R_WDMA2_FLIP_CONTROL,
	MCSC_R_RDMA_CLK_EN,
	MCSC_R_WDMA0_CLK_EN,
	MCSC_R_WDMA1_CLK_EN,
	MCSC_R_WDMA2_CLK_EN,
	MCSC_R_RDMA_CLK_GATE_DISABLE,
	MCSC_R_WDMA0_CLK_GATE_DISABLE,
	MCSC_R_WDMA1_CLK_GATE_DISABLE,
	MCSC_R_WDMA2_CLK_GATE_DISABLE,
	MCSC_R_RDMA_BASE_ADDR01,
	MCSC_R_RDMA_BASE_ADDR02,
	MCSC_R_RDMA_BASE_ADDR03,
	MCSC_R_RDMA_BASE_ADDR04,
	MCSC_R_RDMA_BASE_ADDR05,
	MCSC_R_RDMA_BASE_ADDR06,
	MCSC_R_RDMA_BASE_ADDR07,
	MCSC_R_RDMA_BASE_ADDR08,
	MCSC_R_RDMA_BASE_ADDR11,
	MCSC_R_RDMA_BASE_ADDR12,
	MCSC_R_RDMA_BASE_ADDR13,
	MCSC_R_RDMA_BASE_ADDR14,
	MCSC_R_RDMA_BASE_ADDR15,
	MCSC_R_RDMA_BASE_ADDR16,
	MCSC_R_RDMA_BASE_ADDR17,
	MCSC_R_RDMA_BASE_ADDR18,
	MCSC_R_RDMA_BASE_ADDR21,
	MCSC_R_RDMA_BASE_ADDR22,
	MCSC_R_RDMA_BASE_ADDR23,
	MCSC_R_RDMA_BASE_ADDR24,
	MCSC_R_RDMA_BASE_ADDR25,
	MCSC_R_RDMA_BASE_ADDR26,
	MCSC_R_RDMA_BASE_ADDR27,
	MCSC_R_RDMA_BASE_ADDR28,
	MCSC_R_RDMA_WIDTH,
	MCSC_R_RDMA_HEIGHT,
	MCSC_R_RDMA_STRIDE,
	MCSC_R_RDMA_BASE_ADDR_EN,
	MCSC_R_RDMA_FRAME_CNT,
	MCSC_R_WDMA0_BASE_ADDR01,
	MCSC_R_WDMA0_BASE_ADDR02,
	MCSC_R_WDMA0_BASE_ADDR03,
	MCSC_R_WDMA0_BASE_ADDR04,
	MCSC_R_WDMA0_BASE_ADDR05,
	MCSC_R_WDMA0_BASE_ADDR06,
	MCSC_R_WDMA0_BASE_ADDR07,
	MCSC_R_WDMA0_BASE_ADDR08,
	MCSC_R_WDMA0_BASE_ADDR11,
	MCSC_R_WDMA0_BASE_ADDR12,
	MCSC_R_WDMA0_BASE_ADDR13,
	MCSC_R_WDMA0_BASE_ADDR14,
	MCSC_R_WDMA0_BASE_ADDR15,
	MCSC_R_WDMA0_BASE_ADDR16,
	MCSC_R_WDMA0_BASE_ADDR17,
	MCSC_R_WDMA0_BASE_ADDR18,
	MCSC_R_WDMA0_BASE_ADDR21,
	MCSC_R_WDMA0_BASE_ADDR22,
	MCSC_R_WDMA0_BASE_ADDR23,
	MCSC_R_WDMA0_BASE_ADDR24,
	MCSC_R_WDMA0_BASE_ADDR25,
	MCSC_R_WDMA0_BASE_ADDR26,
	MCSC_R_WDMA0_BASE_ADDR27,
	MCSC_R_WDMA0_BASE_ADDR28,
	MCSC_R_WDMA0_WIDTH,
	MCSC_R_WDMA0_HEIGHT,
	MCSC_R_WDMA0_STRIDE,
	MCSC_R_WDMA0_BASE_ADDR_EN,
	MCSC_R_WDMA0_FRAME_CNT,
	MCSC_R_WDMA1_BASE_ADDR01,
	MCSC_R_WDMA1_BASE_ADDR02,
	MCSC_R_WDMA1_BASE_ADDR03,
	MCSC_R_WDMA1_BASE_ADDR04,
	MCSC_R_WDMA1_BASE_ADDR05,
	MCSC_R_WDMA1_BASE_ADDR06,
	MCSC_R_WDMA1_BASE_ADDR07,
	MCSC_R_WDMA1_BASE_ADDR08,
	MCSC_R_WDMA1_BASE_ADDR11,
	MCSC_R_WDMA1_BASE_ADDR12,
	MCSC_R_WDMA1_BASE_ADDR13,
	MCSC_R_WDMA1_BASE_ADDR14,
	MCSC_R_WDMA1_BASE_ADDR15,
	MCSC_R_WDMA1_BASE_ADDR16,
	MCSC_R_WDMA1_BASE_ADDR17,
	MCSC_R_WDMA1_BASE_ADDR18,
	MCSC_R_WDMA1_BASE_ADDR21,
	MCSC_R_WDMA1_BASE_ADDR22,
	MCSC_R_WDMA1_BASE_ADDR23,
	MCSC_R_WDMA1_BASE_ADDR24,
	MCSC_R_WDMA1_BASE_ADDR25,
	MCSC_R_WDMA1_BASE_ADDR26,
	MCSC_R_WDMA1_BASE_ADDR27,
	MCSC_R_WDMA1_BASE_ADDR28,
	MCSC_R_WDMA1_WIDTH,
	MCSC_R_WDMA1_HEIGHT,
	MCSC_R_WDMA1_STRIDE,
	MCSC_R_WDMA1_BASE_ADDR_EN,
	MCSC_R_WDMA1_FRAME_CNT,
	MCSC_R_WDMA2_BASE_ADDR01,
	MCSC_R_WDMA2_BASE_ADDR02,
	MCSC_R_WDMA2_BASE_ADDR03,
	MCSC_R_WDMA2_BASE_ADDR04,
	MCSC_R_WDMA2_BASE_ADDR05,
	MCSC_R_WDMA2_BASE_ADDR06,
	MCSC_R_WDMA2_BASE_ADDR07,
	MCSC_R_WDMA2_BASE_ADDR08,
	MCSC_R_WDMA2_BASE_ADDR11,
	MCSC_R_WDMA2_BASE_ADDR12,
	MCSC_R_WDMA2_BASE_ADDR13,
	MCSC_R_WDMA2_BASE_ADDR14,
	MCSC_R_WDMA2_BASE_ADDR15,
	MCSC_R_WDMA2_BASE_ADDR16,
	MCSC_R_WDMA2_BASE_ADDR17,
	MCSC_R_WDMA2_BASE_ADDR18,
	MCSC_R_WDMA2_BASE_ADDR21,
	MCSC_R_WDMA2_BASE_ADDR22,
	MCSC_R_WDMA2_BASE_ADDR23,
	MCSC_R_WDMA2_BASE_ADDR24,
	MCSC_R_WDMA2_BASE_ADDR25,
	MCSC_R_WDMA2_BASE_ADDR26,
	MCSC_R_WDMA2_BASE_ADDR27,
	MCSC_R_WDMA2_BASE_ADDR28,
	MCSC_R_WDMA2_WIDTH,
	MCSC_R_WDMA2_HEIGHT,
	MCSC_R_WDMA2_STRIDE,
	MCSC_R_WDMA2_BASE_ADDR_EN,
	MCSC_R_WDMA2_FRAME_CNT,
	MCSC_REG_CNT
};

static const struct fimc_is_reg mcsc_regs[MCSC_REG_CNT] = {
	{0x0000, "SC_GCTRL_0"},
	{0x0008, "TRIGGER_CTRL_0"},
	{0x0014, "READ_SHADOW_REG_CTRL"},
	{0x0018, "STOP_REQ_POST_EN_CTRL_0"},
	{0x0020, "SC_RESET_CTRL_GLOBAL"},
	{0x0024, "SC_RESET_CTRL_0"},
	{0x0030, "CORE0_CLK_GATE_CTRL"},
	{0x0038, "SC0_CLK_GATE_CTRL"},
	{0x003C, "SC1_CLK_GATE_CTRL"},
	{0x0040, "SC2_CLK_GATE_CTRL"},
	{0x004C, "PC0_CLK_GATE_CTRL"},
	{0x0050, "PC1_CLK_GATE_CTRL"},
	{0x0054, "PC2_CLK_GATE_CTRL"},
	{0x0060, "INPUT_SRC0_CTRL"},
	{0x006C, "OTF_OUT_PATH_CTRL"},
	{0x0070, "DITHER_0_CTRL"},
	{0x0090, "INPUT0_IMG_SIZE"},
	{0x0098, "INPUT0_FIFO_STATUS"},
	{0x00A0, "SC0_CTRL"},
	{0x00A4, "SC0_SRC_POS"},
	{0x00A8, "SC0_SRC_SIZE"},
	{0x00AC, "SC0_DST_SIZE"},
	{0x00B0, "SC0_H_RATIO"},
	{0x00B4, "SC0_V_RATIO"},
	{0x00B8, "SC0_H_INIT_PHASE_OFFSET"},
	{0x00BC, "SC0_V_INIT_PHASE_OFFSET"},
	{0x00C0, "SC0_ROUND_MODE"},
	{0x00C4, "SC0_COEFF_CTRL"},
	{0x01B0, "SC1_CTRL"},
	{0x01B4, "SC1_SRC_POS"},
	{0x01B8, "SC1_SRC_SIZE"},
	{0x01BC, "SC1_DST_SIZE"},
	{0x01C0, "SC1_H_RATIO"},
	{0x01C4, "SC1_V_RATIO"},
	{0x01C8, "SC1_H_INIT_PHASE_OFFSET"},
	{0x01CC, "SC1_V_INIT_PHASE_OFFSET"},
	{0x01D0, "SC1_ROUND_MODE"},
	{0x01D4, "SC1_COEFF_CTRL"},
	{0x02C0, "SC2_CTRL"},
	{0x02C4, "SC2_SRC_POS"},
	{0x02C8, "SC2_SRC_SIZE"},
	{0x02CC, "SC2_DST_SIZE"},
	{0x02D0, "SC2_H_RATIO"},
	{0x02D4, "SC2_V_RATIO"},
	{0x02D8, "SC2_H_INIT_PHASE_OFFSET"},
	{0x02DC, "SC2_V_INIT_PHASE_OFFSET"},
	{0x02E0, "SC2_ROUND_MODE"},
	{0x02E4, "SC2_COEFF_CTRL"},
	{0x0600, "PC0_POST_SC_CTRL"},
	{0x0604, "PC0_POST_SC_IMG_SIZE"},
	{0x0608, "PC0_POST_SC_DST_SIZE"},
	{0x060C, "PC0_POST_SC_H_RATIO"},
	{0x0610, "PC0_POST_SC_V_RATIO"},
	{0x0620, "PC0_CONV420_CTRL"},
	{0x0624, "PC0_CONV420_WEIGHT"},
	{0x0630, "PC0_BCHS_CTRL"},
	{0x0634, "PC0_BCHS_BC"},
	{0x0638, "PC0_BCHS_HS1"},
	{0x063C, "PC0_BCHS_HS2"},
	{0x0640, "PC0_OTF_OUT_CTRL"},
	{0x0648, "PC0_DMA_OUT_CTRL"},
	{0x0650, "PC1_POST_SC_CTRL"},
	{0x0654, "PC1_POST_SC_IMG_SIZE"},
	{0x0658, "PC1_POST_SC_DST_SIZE"},
	{0x065C, "PC1_POST_SC_H_RATIO"},
	{0x0660, "PC1_POST_SC_V_RATIO"},
	{0x0670, "PC1_CONV420_CTRL"},
	{0x0674, "PC1_CONV420_WEIGHT"},
	{0x0680, "PC1_BCHS_CTRL"},
	{0x0684, "PC1_BCHS_BC"},
	{0x0688, "PC1_BCHS_HS1"},
	{0x068C, "PC1_BCHS_HS2"},
	{0x0690, "PC1_OTF_OUT_CTRL"},
	{0x0698, "PC1_DMA_OUT_CTRL"},
	{0x06A0, "PC2_POST_SC_CTRL"},
	{0x06A4, "PC2_POST_SC_IMG_SIZE"},
	{0x06A8, "PC2_POST_SC_DST_SIZE"},
	{0x06AC, "PC2_POST_SC_H_RATIO"},
	{0x06B0, "PC2_POST_SC_V_RATIO"},
	{0x06C0, "PC2_CONV420_CTRL"},
	{0x06C4, "PC2_CONV420_WEIGHT"},
	{0x06D0, "PC2_BCHS_CTRL"},
	{0x06D4, "PC2_BCHS_BC"},
	{0x06D8, "PC2_BCHS_HS1"},
	{0x06DC, "PC2_BCHS_HS2"},
	{0x06E0, "PC2_OTF_OUT_CTRL"},
	{0x06E8, "PC2_DMA_OUT_CTRL"},
	{0x0790, "SCALER_RESET_STATUS"},
	{0x0794, "SCALER_RUNNING_STATUS"},
	{0x0798, "DMA_RUNNING_STATUS"},
	{0x079C, "SCALER_INPUT_STATUS_0"},
	{0x07A4, "SCALER_INTERRUPT_MASK_0"},
	{0x07AC, "SCALER_INTERRUPT_0"},
	{0x07B4, "SCALER_VERSION"},
	{0x0800, "HWFC_SWRESET"},
	{0x0804, "HWFC_MODE"},
	{0x0808, "HWFC_REGION_IDX_BIN"},
	{0x080C, "HWFC_REGION_IDX_GRAY"},
	{0x0810, "HWFC_CURR_REGION"},
	{0x0814, "HWFC_CONFIG_IMAGE_A"},
	{0x0818, "HWFC_TOTAL_IMAGE_BYTE0_A"},
	{0x081C, "HWFC_TOTAL_WIDTH_BYTE0_A"},
	{0x0820, "HWFC_TOTAL_IMAGE_BYTE1_A"},
	{0x0824, "HWFC_TOTAL_WIDTH_BYTE1_A"},
	{0x0828, "HWFC_TOTAL_IMAGE_BYTE2_A"},
	{0x082C, "HWFC_TOTAL_WIDTH_BYTE2_A"},
	{0x084C, "HWFC_FRAME_START_SELECT"},
	{0x0850, "HWFC_INDEX_RESET"},
	{0x0854, "HWFC_ENABLE_AUTO_CLEAR"},
	{0x1000, "RDMA_DATA_FORMAT"},
	{0x1004, "WDMA0_DATA_FORMAT"},
	{0x1008, "WDMA1_DATA_FORMAT"},
	{0x100C, "WDMA2_DATA_FORMAT"},
	{0x1018, "RDMA_SWAP_TABLE"},
	{0x101C, "WDMA0_SWAP_TABLE"},
	{0x1020, "WDMA1_SWAP_TABLE"},
	{0x1024, "WDMA2_SWAP_TABLE"},
	{0x1030, "RDMA_QOS_LUT0"},
	{0x1034, "RDMA_QOS_LUT1"},
	{0x1038, "WDMA_QOS_LUT0"},
	{0x103C, "WDMA_QOS_LUT1"},
	{0x1040, "WDMA0_CRC_RESULT0"},
	{0x1044, "WDMA0_CRC_RESULT1"},
	{0x1048, "WDMA0_CRC_RESULT2"},
	{0x104C, "WDMA1_CRC_RESULT0"},
	{0x1050, "WDMA1_CRC_RESULT1"},
	{0x1054, "WDMA1_CRC_RESULT2"},
	{0x1058, "WDMA2_CRC_RESULT0"},
	{0x105C, "WDMA2_CRC_RESULT1"},
	{0x1060, "WDMA2_CRC_RESULT2"},
	{0x107C, "WDMA0_FLIP_CONTROL"},
	{0x1080, "WDMA1_FLIP_CONTROL"},
	{0x1084, "WDMA2_FLIP_CONTROL"},
	{0x1090, "RDMA_CLK_EN"},
	{0x1094, "WDMA0_CLK_EN"},
	{0x1098, "WDMA1_CLK_EN"},
	{0x109C, "WDMA2_CLK_EN"},
	{0x10A8, "RDMA_CLK_GATE_DISABLE"},
	{0x10AC, "WDMA0_CLK_GATE_DISABLE"},
	{0x10B0, "WDMA1_CLK_GATE_DISABLE"},
	{0x10B4, "WDMA2_CLK_GATE_DISABLE"},
	{0x1200, "RDMA_BASE_ADDR01"},
	{0x1204, "RDMA_BASE_ADDR02"},
	{0x1208, "RDMA_BASE_ADDR03"},
	{0x120C, "RDMA_BASE_ADDR04"},
	{0x1210, "RDMA_BASE_ADDR05"},
	{0x1214, "RDMA_BASE_ADDR06"},
	{0x1218, "RDMA_BASE_ADDR07"},
	{0x121C, "RDMA_BASE_ADDR08"},
	{0x1220, "RDMA_BASE_ADDR11"},
	{0x1224, "RDMA_BASE_ADDR12"},
	{0x1228, "RDMA_BASE_ADDR13"},
	{0x122C, "RDMA_BASE_ADDR14"},
	{0x1230, "RDMA_BASE_ADDR15"},
	{0x1234, "RDMA_BASE_ADDR16"},
	{0x1238, "RDMA_BASE_ADDR17"},
	{0x123C, "RDMA_BASE_ADDR18"},
	{0x1240, "RDMA_BASE_ADDR21"},
	{0x1244, "RDMA_BASE_ADDR22"},
	{0x1248, "RDMA_BASE_ADDR23"},
	{0x124C, "RDMA_BASE_ADDR24"},
	{0x1250, "RDMA_BASE_ADDR25"},
	{0x1254, "RDMA_BASE_ADDR26"},
	{0x1258, "RDMA_BASE_ADDR27"},
	{0x125C, "RDMA_BASE_ADDR28"},
	{0x1260, "RDMA_WIDTH"},
	{0x1264, "RDMA_HEIGHT"},
	{0x1268, "RDMA_STRIDE"},
	{0x126C, "RDMA_BASE_ADDR_EN"},
	{0x1270, "RDMA_FRAME_CNT"},
	{0x1300, "WDMA0_BASE_ADDR01"},
	{0x1304, "WDMA0_BASE_ADDR02"},
	{0x1308, "WDMA0_BASE_ADDR03"},
	{0x130C, "WDMA0_BASE_ADDR04"},
	{0x1310, "WDMA0_BASE_ADDR05"},
	{0x1314, "WDMA0_BASE_ADDR06"},
	{0x1318, "WDMA0_BASE_ADDR07"},
	{0x131C, "WDMA0_BASE_ADDR08"},
	{0x1320, "WDMA0_BASE_ADDR11"},
	{0x1324, "WDMA0_BASE_ADDR12"},
	{0x1328, "WDMA0_BASE_ADDR13"},
	{0x132C, "WDMA0_BASE_ADDR14"},
	{0x1330, "WDMA0_BASE_ADDR15"},
	{0x1334, "WDMA0_BASE_ADDR16"},
	{0x1338, "WDMA0_BASE_ADDR17"},
	{0x133C, "WDMA0_BASE_ADDR18"},
	{0x1340, "WDMA0_BASE_ADDR21"},
	{0x1344, "WDMA0_BASE_ADDR22"},
	{0x1348, "WDMA0_BASE_ADDR23"},
	{0x134C, "WDMA0_BASE_ADDR24"},
	{0x1350, "WDMA0_BASE_ADDR25"},
	{0x1354, "WDMA0_BASE_ADDR26"},
	{0x1358, "WDMA0_BASE_ADDR27"},
	{0x135C, "WDMA0_BASE_ADDR28"},
	{0x1360, "WDMA0_WIDTH"},
	{0x1364, "WDMA0_HEIGHT"},
	{0x1368, "WDMA0_STRIDE"},
	{0x136C, "WDMA0_BASE_ADDR_EN"},
	{0x1370, "WDMA0_FRAME_CNT"},
	{0x1400, "WDMA1_BASE_ADDR01"},
	{0x1404, "WDMA1_BASE_ADDR02"},
	{0x1408, "WDMA1_BASE_ADDR03"},
	{0x140C, "WDMA1_BASE_ADDR04"},
	{0x1410, "WDMA1_BASE_ADDR05"},
	{0x1414, "WDMA1_BASE_ADDR06"},
	{0x1418, "WDMA1_BASE_ADDR07"},
	{0x141C, "WDMA1_BASE_ADDR08"},
	{0x1420, "WDMA1_BASE_ADDR11"},
	{0x1424, "WDMA1_BASE_ADDR12"},
	{0x1428, "WDMA1_BASE_ADDR13"},
	{0x142C, "WDMA1_BASE_ADDR14"},
	{0x1430, "WDMA1_BASE_ADDR15"},
	{0x1434, "WDMA1_BASE_ADDR16"},
	{0x1438, "WDMA1_BASE_ADDR17"},
	{0x143C, "WDMA1_BASE_ADDR18"},
	{0x1440, "WDMA1_BASE_ADDR21"},
	{0x1444, "WDMA1_BASE_ADDR22"},
	{0x1448, "WDMA1_BASE_ADDR23"},
	{0x144C, "WDMA1_BASE_ADDR24"},
	{0x1450, "WDMA1_BASE_ADDR25"},
	{0x1454, "WDMA1_BASE_ADDR26"},
	{0x1458, "WDMA1_BASE_ADDR27"},
	{0x145C, "WDMA1_BASE_ADDR28"},
	{0x1460, "WDMA1_WIDTH"},
	{0x1464, "WDMA1_HEIGHT"},
	{0x1468, "WDMA1_STRIDE"},
	{0x146C, "WDMA1_BASE_ADDR_EN"},
	{0x1470, "WDMA1_FRAME_CNT"},
	{0x1500, "WDMA2_BASE_ADDR01"},
	{0x1504, "WDMA2_BASE_ADDR02"},
	{0x1508, "WDMA2_BASE_ADDR03"},
	{0x150C, "WDMA2_BASE_ADDR04"},
	{0x1510, "WDMA2_BASE_ADDR05"},
	{0x1514, "WDMA2_BASE_ADDR06"},
	{0x1518, "WDMA2_BASE_ADDR07"},
	{0x151C, "WDMA2_BASE_ADDR08"},
	{0x1520, "WDMA2_BASE_ADDR11"},
	{0x1524, "WDMA2_BASE_ADDR12"},
	{0x1528, "WDMA2_BASE_ADDR13"},
	{0x152C, "WDMA2_BASE_ADDR14"},
	{0x1530, "WDMA2_BASE_ADDR15"},
	{0x1534, "WDMA2_BASE_ADDR16"},
	{0x1538, "WDMA2_BASE_ADDR17"},
	{0x153C, "WDMA2_BASE_ADDR18"},
	{0x1540, "WDMA2_BASE_ADDR21"},
	{0x1544, "WDMA2_BASE_ADDR22"},
	{0x1548, "WDMA2_BASE_ADDR23"},
	{0x154C, "WDMA2_BASE_ADDR24"},
	{0x1550, "WDMA2_BASE_ADDR25"},
	{0x1554, "WDMA2_BASE_ADDR26"},
	{0x1558, "WDMA2_BASE_ADDR27"},
	{0x155C, "WDMA2_BASE_ADDR28"},
	{0x1560, "WDMA2_WIDTH"},
	{0x1564, "WDMA2_HEIGHT"},
	{0x1568, "WDMA2_STRIDE"},
	{0x156C, "WDMA2_BASE_ADDR_EN"},
	{0x1570, "WDMA2_FRAME_CNT"}
};

enum fimc_is_mcsc_reg_field {
	MCSC_F_SCALER_ENABLE_0,
	MCSC_F_SHADOWING_DISABLE_0,
	MCSC_F_SW_TRIGGER_0,
	MCSC_F_READ_SHADOW_REG,
	MCSC_F_STOP_REQ_POST_EN_CTRL_TYPE_0,
	MCSC_F_SW_RESET_GLOBAL,
	MCSC_F_PARTIAL_RESET_ENABLE_0,
	MCSC_F_SW_RESET_0,
	MCSC_F_LB_CTRL_0_CLK_GATE_DISABLE,
	MCSC_F_DITHER_0_CLK_GATE_DISABLE,
	MCSC_F_CORE0_GLOBAL_CLK_GATE_DISABLE,
	MCSC_F_SC0_CLK_GATE_DISABLE,
	MCSC_F_SC1_CLK_GATE_DISABLE,
	MCSC_F_SC2_CLK_GATE_DISABLE,
	MCSC_F_PC0_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC0_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC0_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC1_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC1_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC1_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC2_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC2_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC2_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_INPUT_SRC0_SEL,
	MCSC_F_OTF_OUT_SEL,
	MCSC_F_DITHER_0_ON,
	MCSC_F_INPUT0_IMG_HSIZE,
	MCSC_F_INPUT0_IMG_VSIZE,
	MCSC_F_INPUT0_PEAK_FIFO_CNT,
	MCSC_F_INPUT0_CUR_FIFO_CNT,
	MCSC_F_SC0_BYPASS,
	MCSC_F_SC0_ENABLE,
	MCSC_F_SC0_SRC_HPOS,
	MCSC_F_SC0_SRC_VPOS,
	MCSC_F_SC0_SRC_HSIZE,
	MCSC_F_SC0_SRC_VSIZE,
	MCSC_F_SC0_DST_HSIZE,
	MCSC_F_SC0_DST_VSIZE,
	MCSC_F_SC0_H_RATIO,
	MCSC_F_SC0_V_RATIO,
	MCSC_F_SC0_H_INIT_PHASE_OFFSET,
	MCSC_F_SC0_V_INIT_PHASE_OFFSET,
	MCSC_F_SC0_ROUND_MODE,
	MCSC_F_SC0_V_COEFF_SEL,
	MCSC_F_SC0_H_COEFF_SEL,
	MCSC_F_SC1_BYPASS,
	MCSC_F_SC1_ENABLE,
	MCSC_F_SC1_SRC_HPOS,
	MCSC_F_SC1_SRC_VPOS,
	MCSC_F_SC1_SRC_HSIZE,
	MCSC_F_SC1_SRC_VSIZE,
	MCSC_F_SC1_DST_HSIZE,
	MCSC_F_SC1_DST_VSIZE,
	MCSC_F_SC1_H_RATIO,
	MCSC_F_SC1_V_RATIO,
	MCSC_F_SC1_H_INIT_PHASE_OFFSET,
	MCSC_F_SC1_V_INIT_PHASE_OFFSET,
	MCSC_F_SC1_ROUND_MODE,
	MCSC_F_SC1_V_COEFF_SEL,
	MCSC_F_SC1_H_COEFF_SEL,
	MCSC_F_SC2_BYPASS,
	MCSC_F_SC2_ENABLE,
	MCSC_F_SC2_SRC_HPOS,
	MCSC_F_SC2_SRC_VPOS,
	MCSC_F_SC2_SRC_HSIZE,
	MCSC_F_SC2_SRC_VSIZE,
	MCSC_F_SC2_DST_HSIZE,
	MCSC_F_SC2_DST_VSIZE,
	MCSC_F_SC2_H_RATIO,
	MCSC_F_SC2_V_RATIO,
	MCSC_F_SC2_H_INIT_PHASE_OFFSET,
	MCSC_F_SC2_V_INIT_PHASE_OFFSET,
	MCSC_F_SC2_ROUND_MODE,
	MCSC_F_SC2_V_COEFF_SEL,
	MCSC_F_SC2_H_COEFF_SEL,
	MCSC_F_PC0_POST_SC_ENABLE,
	MCSC_F_PC0_POST_SC_IMG_HSIZE,
	MCSC_F_PC0_POST_SC_IMG_VSIZE,
	MCSC_F_PC0_POST_SC_DST_HSIZE,
	MCSC_F_PC0_POST_SC_DST_VSIZE,
	MCSC_F_PC0_POST_SC_H_RATIO,
	MCSC_F_PC0_POST_SC_V_RATIO,
	MCSC_F_PC0_CONV420_ENABLE,
	MCSC_F_PC0_CONV420_WEIGHT,
	MCSC_F_PC0_BCHS_ENABLE,
	MCSC_F_PC0_BCHS_YOFFSET,
	MCSC_F_PC0_BCHS_YGAIN,
	MCSC_F_PC0_BCHS_C_GAIN_01,
	MCSC_F_PC0_BCHS_C_GAIN_00,
	MCSC_F_PC0_BCHS_C_GAIN_11,
	MCSC_F_PC0_BCHS_C_GAIN_10,
	MCSC_F_PC0_OTF_OUT_ENABLE,
	MCSC_F_PC0_DMA_OUT_ENABLE,
	MCSC_F_PC1_POST_SC_ENABLE,
	MCSC_F_PC1_POST_SC_IMG_HSIZE,
	MCSC_F_PC1_POST_SC_IMG_VSIZE,
	MCSC_F_PC1_POST_SC_DST_HSIZE,
	MCSC_F_PC1_POST_SC_DST_VSIZE,
	MCSC_F_PC1_POST_SC_H_RATIO,
	MCSC_F_PC1_POST_SC_V_RATIO,
	MCSC_F_PC1_CONV420_ENABLE,
	MCSC_F_PC1_CONV420_WEIGHT,
	MCSC_F_PC1_BCHS_ENABLE,
	MCSC_F_PC1_BCHS_YOFFSET,
	MCSC_F_PC1_BCHS_YGAIN,
	MCSC_F_PC1_BCHS_C_GAIN_01,
	MCSC_F_PC1_BCHS_C_GAIN_00,
	MCSC_F_PC1_BCHS_C_GAIN_11,
	MCSC_F_PC1_BCHS_C_GAIN_10,
	MCSC_F_PC1_OTF_OUT_ENABLE,
	MCSC_F_PC1_DMA_OUT_ENABLE,
	MCSC_F_PC2_POST_SC_ENABLE,
	MCSC_F_PC2_POST_SC_IMG_HSIZE,
	MCSC_F_PC2_POST_SC_IMG_VSIZE,
	MCSC_F_PC2_POST_SC_DST_HSIZE,
	MCSC_F_PC2_POST_SC_DST_VSIZE,
	MCSC_F_PC2_POST_SC_H_RATIO,
	MCSC_F_PC2_POST_SC_V_RATIO,
	MCSC_F_PC2_CONV420_ENABLE,
	MCSC_F_PC2_CONV420_WEIGHT,
	MCSC_F_PC2_BCHS_ENABLE,
	MCSC_F_PC2_BCHS_YOFFSET,
	MCSC_F_PC2_BCHS_YGAIN,
	MCSC_F_PC2_BCHS_C_GAIN_01,
	MCSC_F_PC2_BCHS_C_GAIN_00,
	MCSC_F_PC2_BCHS_C_GAIN_11,
	MCSC_F_PC2_BCHS_C_GAIN_10,
	MCSC_F_PC2_OTF_OUT_ENABLE,
	MCSC_F_PC2_DMA_OUT_ENABLE,
	MCSC_F_SW_RESET_0_STATUS,
	MCSC_F_SW_RESET_GLOBAL_STATUS,
	MCSC_F_PC2_BCHS_RUNNING,
	MCSC_F_PC2_CONV420_RUNNING,
	MCSC_F_PC2_OTF_RUNNING,
	MCSC_F_PC2_POST_SC_RUNNING,
	MCSC_F_PC1_BCHS_RUNNING,
	MCSC_F_PC1_CONV420_RUNNING,
	MCSC_F_PC1_OTF_RUNNING,
	MCSC_F_PC1_POST_SC_RUNNING,
	MCSC_F_PC0_BCHS_RUNNING,
	MCSC_F_PC0_CONV420_RUNNING,
	MCSC_F_PC0_OTF_RUNNING,
	MCSC_F_PC0_POST_SC_RUNNING,
	MCSC_F_SC2_RUNNING,
	MCSC_F_SC1_RUNNING,
	MCSC_F_SC0_RUNNING,
	MCSC_F_LINE_FIFO0_RUNNING,
	MCSC_F_DITHER_0_RUNNING,
	MCSC_F_SCALER_IDLE_0,
	MCSC_F_WDMA2_BUSY,
	MCSC_F_WDMA1_BUSY,
	MCSC_F_WDMA0_BUSY,
	MCSC_F_RDMA_BUSY,
	MCSC_F_CUR_VERTICAL_CNT_0,
	MCSC_F_CUR_HORIZONTAL_CNT_0,
	MCSC_F_OUT_STALL_BLOCKING_INT_0_MASK,
	MCSC_F_SCALER_OVERFLOW_INT_0_MASK,
	MCSC_F_INPUT_VERTICAL_UNF_INT_0_MASK,
	MCSC_F_INPUT_VERTICAL_OVF_INT_0_MASK,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_0_MASK,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_0_MASK,
	MCSC_F_SHADOW_TRIGGER_INT_0_MASK,
	MCSC_F_SHADOW_HW_TRIGGER_INT_0_MASK,
	MCSC_F_CORE_FINISH_INT_0_MASK,
	MCSC_F_WDMA_FINISH_INT_0_MASK,
	MCSC_F_FRAME_START_INT_0_MASK,
	MCSC_F_FRAME_END_INT_0_MASK,
	MCSC_F_OUT_STALL_BLOCKING_INT_0,
	MCSC_F_SCALER_OVERFLOW_INT_0,
	MCSC_F_INPUT_VERTICAL_UNF_INT_0,
	MCSC_F_INPUT_VERTICAL_OVF_INT_0,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_0,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_0,
	MCSC_F_SHADOW_TRIGGER_INT_0,
	MCSC_F_SHADOW_HW_TRIGGER_INT_0,
	MCSC_F_CORE_FINISH_INT_0,
	MCSC_F_WDMA_FINISH_INT_0,
	MCSC_F_FRAME_START_INT_0,
	MCSC_F_FRAME_END_INT_0,
	MCSC_F_SCALER_VERSION,
	MCSC_F_SWRESET,
	MCSC_F_HWFC_MODE,
	MCSC_F_REGION_IDX_BIN_A,
	MCSC_F_REGION_IDX_GRAY_A,
	MCSC_F_CURR_REGION_A,
	MCSC_F_FORMAT_A,
	MCSC_F_ID2_A,
	MCSC_F_ID1_A,
	MCSC_F_ID0_A,
	MCSC_F_PLANE_A,
	MCSC_F_TOTAL_IMAGE_BYTE0_A,
	MCSC_F_TOTAL_WIDTH_BYTE0_A,
	MCSC_F_TOTAL_IMAGE_BYTE1_A,
	MCSC_F_TOTAL_WIDTH_BYTE1_A,
	MCSC_F_TOTAL_IMAGE_BYTE2_A,
	MCSC_F_TOTAL_WIDTH_BYTE2_A,
	MCSC_F_FRAME_START_SELECT,
	MCSC_F_INDEX_RESET,
	MCSC_F_HWFC_ENABLE_AUTO_CLEAR,
	MCSC_F_RDMA_DATA_FORMAT,
	MCSC_F_WDMA0_DATA_FORMAT,
	MCSC_F_WDMA1_DATA_FORMAT,
	MCSC_F_WDMA2_DATA_FORMAT,
	MCSC_F_RDMA_SWAP_TABLE,
	MCSC_F_WDMA0_SWAP_TABLE,
	MCSC_F_WDMA1_SWAP_TABLE,
	MCSC_F_WDMA2_SWAP_TABLE,
	MCSC_F_RDMA_QOS_LUT_0,
	MCSC_F_RDMA_QOS_LUT_1,
	MCSC_F_RDMA_QOS_LUT_2,
	MCSC_F_RDMA_QOS_LUT_3,
	MCSC_F_RDMA_QOS_LUT_4,
	MCSC_F_RDMA_QOS_LUT_5,
	MCSC_F_RDMA_QOS_LUT_6,
	MCSC_F_RDMA_QOS_LUT_7,
	MCSC_F_RDMA_QOS_LUT_8,
	MCSC_F_RDMA_QOS_LUT_9,
	MCSC_F_RDMA_QOS_LUT_10,
	MCSC_F_RDMA_QOS_LUT_11,
	MCSC_F_RDMA_QOS_LUT_12,
	MCSC_F_RDMA_QOS_LUT_13,
	MCSC_F_RDMA_QOS_LUT_14,
	MCSC_F_RDMA_QOS_LUT_15,
	MCSC_F_WDMA_QOS_LUT_0,
	MCSC_F_WDMA_QOS_LUT_1,
	MCSC_F_WDMA_QOS_LUT_2,
	MCSC_F_WDMA_QOS_LUT_3,
	MCSC_F_WDMA_QOS_LUT_4,
	MCSC_F_WDMA_QOS_LUT_5,
	MCSC_F_WDMA_QOS_LUT_6,
	MCSC_F_WDMA_QOS_LUT_7,
	MCSC_F_WDMA_QOS_LUT_8,
	MCSC_F_WDMA_QOS_LUT_9,
	MCSC_F_WDMA_QOS_LUT_10,
	MCSC_F_WDMA_QOS_LUT_11,
	MCSC_F_WDMA_QOS_LUT_12,
	MCSC_F_WDMA_QOS_LUT_13,
	MCSC_F_WDMA_QOS_LUT_14,
	MCSC_F_WDMA_QOS_LUT_15,
	MCSC_F_WDMA0_CRC_RESULT0,
	MCSC_F_WDMA0_CRC_RESULT1,
	MCSC_F_WDMA0_CRC_RESULT2,
	MCSC_F_WDMA1_CRC_RESULT0,
	MCSC_F_WDMA1_CRC_RESULT1,
	MCSC_F_WDMA1_CRC_RESULT2,
	MCSC_F_WDMA2_CRC_RESULT0,
	MCSC_F_WDMA2_CRC_RESULT1,
	MCSC_F_WDMA2_CRC_RESULT2,
	MCSC_F_WDMA0_FLIP_CONTROL,
	MCSC_F_WDMA1_FLIP_CONTROL,
	MCSC_F_WDMA2_FLIP_CONTROL,
	MCSC_F_RDMA_CLK_EN,
	MCSC_F_WDMA0_CLK_EN,
	MCSC_F_WDMA1_CLK_EN,
	MCSC_F_WDMA2_CLK_EN,
	MCSC_F_RDMA_CLK_GATE_DISABLE,
	MCSC_F_WDMA0_CLK_GATE_DISABLE,
	MCSC_F_WDMA1_CLK_GATE_DISABLE,
	MCSC_F_WDMA2_CLK_GATE_DISABLE,
	MCSC_F_RDMA_BASE_ADDR01,
	MCSC_F_RDMA_BASE_ADDR02,
	MCSC_F_RDMA_BASE_ADDR03,
	MCSC_F_RDMA_BASE_ADDR04,
	MCSC_F_RDMA_BASE_ADDR05,
	MCSC_F_RDMA_BASE_ADDR06,
	MCSC_F_RDMA_BASE_ADDR07,
	MCSC_F_RDMA_BASE_ADDR08,
	MCSC_F_RDMA_BASE_ADDR11,
	MCSC_F_RDMA_BASE_ADDR12,
	MCSC_F_RDMA_BASE_ADDR13,
	MCSC_F_RDMA_BASE_ADDR14,
	MCSC_F_RDMA_BASE_ADDR15,
	MCSC_F_RDMA_BASE_ADDR16,
	MCSC_F_RDMA_BASE_ADDR17,
	MCSC_F_RDMA_BASE_ADDR18,
	MCSC_F_RDMA_BASE_ADDR21,
	MCSC_F_RDMA_BASE_ADDR22,
	MCSC_F_RDMA_BASE_ADDR23,
	MCSC_F_RDMA_BASE_ADDR24,
	MCSC_F_RDMA_BASE_ADDR25,
	MCSC_F_RDMA_BASE_ADDR26,
	MCSC_F_RDMA_BASE_ADDR27,
	MCSC_F_RDMA_BASE_ADDR28,
	MCSC_F_RDMA_WIDTH,
	MCSC_F_RDMA_HEIGHT,
	MCSC_F_RDMA_C_STRIDE,
	MCSC_F_RDMA_Y_STRIDE,
	MCSC_F_RDMA_BASE_ADDR_EN1,
	MCSC_F_RDMA_BASE_ADDR_EN2,
	MCSC_F_RDMA_BASE_ADDR_EN3,
	MCSC_F_RDMA_BASE_ADDR_EN4,
	MCSC_F_RDMA_BASE_ADDR_EN5,
	MCSC_F_RDMA_BASE_ADDR_EN6,
	MCSC_F_RDMA_BASE_ADDR_EN7,
	MCSC_F_RDMA_BASE_ADDR_EN8,
	MCSC_F_RDMA_FRAME_CNT_BEFORE,
	MCSC_F_RDMA_FRAME_CNT_PRESENT,
	MCSC_F_WDMA0_BASE_ADDR01,
	MCSC_F_WDMA0_BASE_ADDR02,
	MCSC_F_WDMA0_BASE_ADDR03,
	MCSC_F_WDMA0_BASE_ADDR04,
	MCSC_F_WDMA0_BASE_ADDR05,
	MCSC_F_WDMA0_BASE_ADDR06,
	MCSC_F_WDMA0_BASE_ADDR07,
	MCSC_F_WDMA0_BASE_ADDR08,
	MCSC_F_WDMA0_BASE_ADDR11,
	MCSC_F_WDMA0_BASE_ADDR12,
	MCSC_F_WDMA0_BASE_ADDR13,
	MCSC_F_WDMA0_BASE_ADDR14,
	MCSC_F_WDMA0_BASE_ADDR15,
	MCSC_F_WDMA0_BASE_ADDR16,
	MCSC_F_WDMA0_BASE_ADDR17,
	MCSC_F_WDMA0_BASE_ADDR18,
	MCSC_F_WDMA0_BASE_ADDR21,
	MCSC_F_WDMA0_BASE_ADDR22,
	MCSC_F_WDMA0_BASE_ADDR23,
	MCSC_F_WDMA0_BASE_ADDR24,
	MCSC_F_WDMA0_BASE_ADDR25,
	MCSC_F_WDMA0_BASE_ADDR26,
	MCSC_F_WDMA0_BASE_ADDR27,
	MCSC_F_WDMA0_BASE_ADDR28,
	MCSC_F_WDMA0_WIDTH,
	MCSC_F_WDMA0_HEIGHT,
	MCSC_F_WDMA0_C_STRIDE,
	MCSC_F_WDMA0_Y_STRIDE,
	MCSC_F_WDMA0_BASE_ADDR_EN1,
	MCSC_F_WDMA0_BASE_ADDR_EN2,
	MCSC_F_WDMA0_BASE_ADDR_EN3,
	MCSC_F_WDMA0_BASE_ADDR_EN4,
	MCSC_F_WDMA0_BASE_ADDR_EN5,
	MCSC_F_WDMA0_BASE_ADDR_EN6,
	MCSC_F_WDMA0_BASE_ADDR_EN7,
	MCSC_F_WDMA0_BASE_ADDR_EN8,
	MCSC_F_WDMA0_FRAME_CNT_BEFORE,
	MCSC_F_WDMA0_FRAME_CNT_PRESENT,
	MCSC_F_WDMA1_BASE_ADDR01,
	MCSC_F_WDMA1_BASE_ADDR02,
	MCSC_F_WDMA1_BASE_ADDR03,
	MCSC_F_WDMA1_BASE_ADDR04,
	MCSC_F_WDMA1_BASE_ADDR05,
	MCSC_F_WDMA1_BASE_ADDR06,
	MCSC_F_WDMA1_BASE_ADDR07,
	MCSC_F_WDMA1_BASE_ADDR08,
	MCSC_F_WDMA1_BASE_ADDR11,
	MCSC_F_WDMA1_BASE_ADDR12,
	MCSC_F_WDMA1_BASE_ADDR13,
	MCSC_F_WDMA1_BASE_ADDR14,
	MCSC_F_WDMA1_BASE_ADDR15,
	MCSC_F_WDMA1_BASE_ADDR16,
	MCSC_F_WDMA1_BASE_ADDR17,
	MCSC_F_WDMA1_BASE_ADDR18,
	MCSC_F_WDMA1_BASE_ADDR21,
	MCSC_F_WDMA1_BASE_ADDR22,
	MCSC_F_WDMA1_BASE_ADDR23,
	MCSC_F_WDMA1_BASE_ADDR24,
	MCSC_F_WDMA1_BASE_ADDR25,
	MCSC_F_WDMA1_BASE_ADDR26,
	MCSC_F_WDMA1_BASE_ADDR27,
	MCSC_F_WDMA1_BASE_ADDR28,
	MCSC_F_WDMA1_WIDTH,
	MCSC_F_WDMA1_HEIGHT,
	MCSC_F_WDMA1_C_STRIDE,
	MCSC_F_WDMA1_Y_STRIDE,
	MCSC_F_WDMA1_BASE_ADDR_EN1,
	MCSC_F_WDMA1_BASE_ADDR_EN2,
	MCSC_F_WDMA1_BASE_ADDR_EN3,
	MCSC_F_WDMA1_BASE_ADDR_EN4,
	MCSC_F_WDMA1_BASE_ADDR_EN5,
	MCSC_F_WDMA1_BASE_ADDR_EN6,
	MCSC_F_WDMA1_BASE_ADDR_EN7,
	MCSC_F_WDMA1_BASE_ADDR_EN8,
	MCSC_F_WDMA1_FRAME_CNT_BEFORE,
	MCSC_F_WDMA1_FRAME_CNT_PRESENT,
	MCSC_F_WDMA2_BASE_ADDR01,
	MCSC_F_WDMA2_BASE_ADDR02,
	MCSC_F_WDMA2_BASE_ADDR03,
	MCSC_F_WDMA2_BASE_ADDR04,
	MCSC_F_WDMA2_BASE_ADDR05,
	MCSC_F_WDMA2_BASE_ADDR06,
	MCSC_F_WDMA2_BASE_ADDR07,
	MCSC_F_WDMA2_BASE_ADDR08,
	MCSC_F_WDMA2_BASE_ADDR11,
	MCSC_F_WDMA2_BASE_ADDR12,
	MCSC_F_WDMA2_BASE_ADDR13,
	MCSC_F_WDMA2_BASE_ADDR14,
	MCSC_F_WDMA2_BASE_ADDR15,
	MCSC_F_WDMA2_BASE_ADDR16,
	MCSC_F_WDMA2_BASE_ADDR17,
	MCSC_F_WDMA2_BASE_ADDR18,
	MCSC_F_WDMA2_BASE_ADDR21,
	MCSC_F_WDMA2_BASE_ADDR22,
	MCSC_F_WDMA2_BASE_ADDR23,
	MCSC_F_WDMA2_BASE_ADDR24,
	MCSC_F_WDMA2_BASE_ADDR25,
	MCSC_F_WDMA2_BASE_ADDR26,
	MCSC_F_WDMA2_BASE_ADDR27,
	MCSC_F_WDMA2_BASE_ADDR28,
	MCSC_F_WDMA2_WIDTH,
	MCSC_F_WDMA2_HEIGHT,
	MCSC_F_WDMA2_C_STRIDE,
	MCSC_F_WDMA2_Y_STRIDE,
	MCSC_F_WDMA2_BASE_ADDR_EN1,
	MCSC_F_WDMA2_BASE_ADDR_EN2,
	MCSC_F_WDMA2_BASE_ADDR_EN3,
	MCSC_F_WDMA2_BASE_ADDR_EN4,
	MCSC_F_WDMA2_BASE_ADDR_EN5,
	MCSC_F_WDMA2_BASE_ADDR_EN6,
	MCSC_F_WDMA2_BASE_ADDR_EN7,
	MCSC_F_WDMA2_BASE_ADDR_EN8,
	MCSC_F_WDMA2_FRAME_CNT_BEFORE,
	MCSC_F_WDMA2_FRAME_CNT_PRESENT,
	MCSC_REG_FIELD_CNT
};

static const struct fimc_is_field mcsc_fields[MCSC_REG_FIELD_CNT] = {
	/* 1. sfr addr 2. register name 3. bit start 4. bit width 5. access type 6. reset */
	{"SCALER_ENABLE_0",		0,	1,	RW,	0},	/* SC_GCTRL_0 */
	{"SHADOWING_DISABLE_0",		1,	1,	RW,	0},	/* TRIGGER_CTRL_0 */
	{"SW_TRIGGER_0",		0,	1,	WO,	0},	/* TRIGGER_CTRL_0 */
	{"READ_SHADOW_REG",		0,	1,	RW,	0},	/* READ_SHADOW_REG_CTRL */
	{"STOP_REQ_POST_EN_CTRL_0",	0,	2,	RWI,	0},	/* STOP_REQ_POST_EN_CTRL_0 */
	{"SW_RESET_GLOBAL",		0,	1,	WO,	0},	/* SC_RESET_CTRL_GLOBAL */
	{"PARTIAL_RESET_ENABLE_0",		1,	1,	RWI,	1},	/* SC_RESET_CTRL_0 */
	{"SW_RESET_0",		0,	1,	WO,	0},		/* SC_RESET_CTRL_0 */
	{"LB_CTRL_0_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* CORE0_CLK_GATE_CTRL */
	{"DITHER_0_CLK_GATE_DISABLE",		1,	1,	RWI,	0},	/* CORE0_CLK_GATE_CTRL */
	{"CORE0_GLOBAL_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* CORE0_CLK_GATE_CTRL */
	{"SC0_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC0_CLK_GATE_CTRL */
	{"SC1_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC1_CLK_GATE_CTRL */
	{"SC2_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC2_CLK_GATE_CTRL */
	{"PC0_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC0_CONV420_CLK_GATE_DISABLE",		1,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC0_POST_SC_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC1_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC1_CONV420_CLK_GATE_DISABLE",		1,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC1_POST_SC_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC2_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"PC2_CONV420_CLK_GATE_DISABLE",		1,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"PC2_POST_SC_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"INPUT_SRC0_SEL",		0,	1,	RWI,	0},	/* INPUT_SRC0_CTRL */
	{"OTF_OUT_SEL",		0,	3,	RWI,	0},	/* OTF_OUT_PATH_CTRL */
	{"DITHER_0_ON",		0,	1,	RWI,	0},	/* DITHER_0_CTRL */
	{"INPUT0_IMAGE_HSIZE",		16,	14,	RWI,	0x10},	/* INPUT0_IMG_SIZE */
	{"INPUT0_IMAGE_VSIZE",		0,	14,	RWI,	0x10},	/* INPUT0_IMG_SIZE */
	{"INPUT0_PEAK_FIFO_CNT",		16,	14,	RO,	0x0},	/* INPUT0_FIFO_STATUS */
	{"INPUT0_CUR_FIFO_CNT",		0,	14,	RO,	0x0},	/* INPUT0_FIFO_STATUS */
	{"SC0_BYPASS",		1,	1,	RWI,	0},	/* SC0_CTRL */
	{"SC0_ENABLE",		0,	1,	RWI,	0},	/* SC0_CTRL */
	{"SC0_SRC_HPOS",		16,	14,	RWI,	0},	/* SC0_SRC_POS */
	{"SC0_SRC_VPOS",		0,	14,	RWI,	0},	/* SC0_SRC_POS */
	{"SC0_SRC_HSIZE",		16,	14,	RWI,	0x10},	/* SC0_SRC_SIZE */
	{"SC0_SRC_VSIZE",		0,	14,	RWI,	0x10},	/* SC0_SRC_SIZE */
	{"SC0_DST_HSIZE",		16,	14,	RWI,	0x10},	/* SC0_DST_SIZE */
	{"SC0_DST_VSIZE",		0,	14,	RWI,	0x10},	/* SC0_DST_SIZE */
	{"SC0_H_RATIO",		0,	24,	RWI,	0x100000},	/* SC0_H_RATIO */
	{"SC0_V_RATIO",		0,	24,	RWI,	0x100000},	/* SC0_V_RATIO */
	{"SC0_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC0_H_INIT_PHASE_OFFSET */
	{"SC0_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC0_V_INIT_PHASE_OFFSET */
	{"SC0_ROUND_MODE",		0,	1,	RWI,	0x1},	/* SC0_ROUND_MODE */
	{"SC0_V_COEFF_SEL",		16,	3,	RWI,	0x0},	/* SC0_COEFF_CTRL */
	{"SC0_H_COEFF_SEL",		0,	3,	RWI,	0x0},	/* SC0_COEFF_CTRL */
	{"SC1_BYPASS",		1,	1,	RWI,	0},	/* SC1_CTRL */
	{"SC1_ENABLE",		0,	1,	RWI,	0},	/* SC1_CTRL */
	{"SC1_SRC_HPOS",		16,	14,	RWI,	0},	/* SC1_SRC_POS */
	{"SC1_SRC_VPOS",		0,	14,	RWI,	0},	/* SC1_SRC_POS */
	{"SC1_SRC_HSIZE",		16,	14,	RWI,	0x10},	/* SC1_SRC_SIZE */
	{"SC1_SRC_VSIZE",		0,	14,	RWI,	0x10},	/* SC1_SRC_SIZE */
	{"SC1_DST_HSIZE",		16,	14,	RWI,	0x10},	/* SC1_DST_SIZE */
	{"SC1_DST_VSIZE",		0,	14,	RWI,	0x10},	/* SC1_DST_SIZE */
	{"SC1_H_RATIO",		0,	24,	RWI,	0x100000},	/* SC1_H_RATIO */
	{"SC1_V_RATIO",		0,	24,	RWI,	0x100000},	/* SC1_V_RATIO */
	{"SC1_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC1_H_INIT_PHASE_OFFSET */
	{"SC1_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC1_V_INIT_PHASE_OFFSET */
	{"SC1_ROUND_MODE",		0,	1,	RWI,	0x1},	/* SC1_ROUND_MODE */
	{"SC1_V_COEFF_SEL",		16,	3,	RWI,	0x0},	/* SC1_COEFF_CTRL */
	{"SC1_H_COEFF_SEL",		0,	3,	RWI,	0x0},	/* SC1_COEFF_CTRL */
	{"SC2_BYPASS",		1,	1,	RWI,	0},	/* SC2_CTRL */
	{"SC2_ENABLE",		0,	1,	RWI,	0},	/* SC2_CTRL */
	{"SC2_SRC_HPOS",		16,	14,	RWI,	0},	/* SC2_SRC_POS */
	{"SC2_SRC_VPOS",		0,	14,	RWI,	0},	/* SC2_SRC_POS */
	{"SC2_SRC_HSIZE",		16,	14,	RWI,	0x10},	/* SC2_SRC_SIZE */
	{"SC2_SRC_VSIZE",		0,	14,	RWI,	0x10},	/* SC2_SRC_SIZE */
	{"SC2_DST_HSIZE",		16,	14,	RWI,	0x10},	/* SC2_DST_SIZE */
	{"SC2_DST_VSIZE",		0,	14,	RWI,	0x10},	/* SC2_DST_SIZE */
	{"SC2_H_RATIO",		0,	24,	RWI,	0x100000},	/* SC2_H_RATIO */
	{"SC2_V_RATIO",		0,	24,	RWI,	0x100000},	/* SC2_V_RATIO */
	{"SC2_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC2_H_INIT_PHASE_OFFSET */
	{"SC2_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC2_V_INIT_PHASE_OFFSET */
	{"SC2_ROUND_MODE",		0,	1,	RWI,	0x1},	/* SC2_ROUND_MODE */
	{"SC2_V_COEFF_SEL",		16,	3,	RWI,	0x0},	/* SC2_COEFF_CTRL */
	{"SC2_H_COEFF_SEL",		0,	3,	RWI,	0x0},	/* SC2_COEFF_CTRL */
	{"PC0_POST_SC_ENABLE",		0,	1,	RWI,	0x0},	/* PC0_POST_SC_CTRL */
	{"PC0_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC0_POST_SC_IMG_SIZE */
	{"PC0_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC0_POST_SC_IMG_SIZE */
	{"PC0_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC0_POST_SC_DST_SIZE */
	{"PC0_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC0_POST_SC_DST_SIZE */
	{"PC0_POST_SC_H_RATIO",		0,	24,	RWI,	0x100000},	/* PC0_POST_SC_H_RATIO */
	{"PC0_POST_SC_V_RATIO",		0,	24,	RWI,	0x100000},	/* PC0_POST_SC_V_RATIO */
	{"PC0_CONV420_ENABLE",		0,	1,	RWI,	0x1},	/* PC0_CONV420_CTRL */
	{"PC0_CONV420_WEIGHT",		0,	5,	RWI,	0},	/* PC0_CONV420_WEIGHT */
	{"PC0_BCHS_ENABLE",		0,	1,	RWI,	0x0},	/* PC0_BCHS_CTRL */
	{"PC0_BCHS_YOffset",		16,	8,	RWI,	0},	/* PC0_BCHS_BC */
	{"PC0_BCHS_YGain",		0,	12,	RWI,	0x100},	/* PC0_BCHS_BC */
	{"PC0_BCHS_C_GAIN_01",		16,	13,	RWI,	0},	/* PC0_BCHS_HS1 */
	{"PC0_BCHS_C_GAIN_00",		0,	13,	RWI,	0x100},	/* PC0_BCHS_HS1 */
	{"PC0_BCHS_C_GAIN_11",		16,	13,	RWI,	0x100},	/* PC0_BCHS_HS2 */
	{"PC0_BCHS_C_GAIN_10",		0,	13,	RWI,	0},	/* PC0_BCHS_HS2 */
	{"PC0_OTF_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC0_OTF_CTRL */
	{"PC0_DMA_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC0_DMA_OUT_CTRL */
	{"PC1_POST_SC_ENABLE",		0,	1,	RWI,	0x0},	/* PC1_POST_SC_CTRL */
	{"PC1_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC1_POST_SC_IMG_SIZE */
	{"PC1_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC1_POST_SC_IMG_SIZE */
	{"PC1_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC1_POST_SC_DST_SIZE */
	{"PC1_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC1_POST_SC_DST_SIZE */
	{"PC1_POST_SC_H_RATIO",		0,	24,	RWI,	0x100000},	/* PC1_POST_SC_H_RATIO */
	{"PC1_POST_SC_V_RATIO",		0,	24,	RWI,	0x100000},	/* PC1_POST_SC_V_RATIO */
	{"PC1_CONV420_ENABLE",		0,	1,	RWI,	0x1},	/* PC1_CONV420_CTRL */
	{"PC1_CONV420_WEIGHT",		0,	5,	RWI,	0},	/* PC1_CONV420_WEIGHT */
	{"PC1_BCHS_ENABLE",		0,	1,	RWI,	0x0},	/* PC1_BCHS_CTRL */
	{"PC1_BCHS_YOffset",		16,	8,	RWI,	0},	/* PC1_BCHS_BC */
	{"PC1_BCHS_YGain",		0,	12,	RWI,	0x100},	/* PC1_BCHS_BC */
	{"PC1_BCHS_C_GAIN_01",		16,	13,	RWI,	0},	/* PC1_BCHS_HS1 */
	{"PC1_BCHS_C_GAIN_00",		0,	13,	RWI,	0x100},	/* PC1_BCHS_HS1 */
	{"PC1_BCHS_C_GAIN_11",		16,	13,	RWI,	0x100},	/* PC1_BCHS_HS2 */
	{"PC1_BCHS_C_GAIN_10",		0,	13,	RWI,	0},	/* PC1_BCHS_HS2 */
	{"PC1_OTF_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC1_OTF_CTRL */
	{"PC1_DMA_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC1_DMA_OUT_CTRL */
	{"PC2_POST_SC_ENABLE",		0,	1,	RWI,	0x0},	/* PC2_POST_SC_CTRL */
	{"PC2_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC2_POST_SC_IMG_SIZE */
	{"PC2_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC2_POST_SC_IMG_SIZE */
	{"PC2_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC2_POST_SC_DST_SIZE */
	{"PC2_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC2_POST_SC_DST_SIZE */
	{"PC2_POST_SC_H_RATIO",		0,	24,	RWI,	0x100000},	/* PC2_POST_SC_H_RATIO */
	{"PC2_POST_SC_V_RATIO",		0,	24,	RWI,	0x100000},	/* PC2_POST_SC_V_RATIO */
	{"PC2_CONV420_ENABLE",		0,	1,	RWI,	0x1},	/* PC2_CONV420_CTRL */
	{"PC2_CONV420_WEIGHT",		0,	5,	RWI,	0},	/* PC2_CONV420_WEIGHT */
	{"PC2_BCHS_ENABLE",		0,	1,	RWI,	0x0},	/* PC2_BCHS_CTRL */
	{"PC2_BCHS_YOffset",		16,	8,	RWI,	0},	/* PC2_BCHS_BC */
	{"PC2_BCHS_YGain",		0,	12,	RWI,	0x100},	/* PC2_BCHS_BC */
	{"PC2_BCHS_C_GAIN_01",		16,	13,	RWI,	0},	/* PC2_BCHS_HS1 */
	{"PC2_BCHS_C_GAIN_00",		0,	13,	RWI,	0x100},	/* PC2_BCHS_HS1 */
	{"PC2_BCHS_C_GAIN_11",		16,	13,	RWI,	0x100},	/* PC2_BCHS_HS2 */
	{"PC2_BCHS_C_GAIN_10",		0,	13,	RWI,	0},	/* PC2_BCHS_HS2 */
	{"PC2_OTF_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC2_OTF_CTRL */
	{"PC2_DMA_OUT_ENABLE",		0,	1,	RWI,	0x0},	/* PC2_DMA_OUT_CTRL */
	{"SW_RESET_0_STATUS",		2,	1,	RO,	0},	/* SCALER_RESET_STATUS */
	{"SW_RESET_GLOBAL_STATUS",		0,	1,	RO,	0},	/* SCALER_RESET_STATUS */
	{"PC2_BCHS_RUNNING",		22,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_CONV420_RUNNING",		21,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_OTF_RUNNING",		20,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_POST_SC_RUNNING",		19,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_BCHS_RUNNING",		18,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_CONV420_RUNNING",		17,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_OTF_RUNNING",		16,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_POST_SC_RUNNING",		15,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_BCHS_RUNNING",		14,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_CONV420_RUNNING",		13,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_OTF_RUNNING",		12,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_POST_SC_RUNNING",		11,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC2_RUNNING",		8,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC1_RUNNING",		7,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC0_RUNNING",		6,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"LINE_FIFO0_RUNNING",		4,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"DITHER_0_RUNNING",		2,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SCALER_IDLE_0",		0,	1,	RO,	0x1},	/* SCALER_RUNNING_STATUS */
	{"WDMA2_BUSY",		3,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA1_BUSY",		2,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA0_BUSY",		1,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"RDMA_BUSY",		0,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"CUR_VERTICAL_CNT_0",		16,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_0 */
	{"CUR_HORIZONTAL_CNT_0",		0,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_0 */
	{"OUT_STALL_BLOCKING_INT_0_MASK",		12,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SCALER_OVERFLOW_INT_0_MASK",		11,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_VERTICAL_UNF_INT_0_MASK",		10,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_VERTICAL_OVF_INT_0_MASK",		9,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_HORIZONTAL_UNF_INT_0_MASK",		8,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_HORIZONTAL_OVF_INT_0_MASK",		7,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SHADOW_TRIGGER_INT_0_MASK",		5,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SHADOW_HW_TRIGGER_INT_0_MASK",		4,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"CORE_FINISH_INT_0_MASK",		3,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"WDMA_FINISH_INT_0_MASK",		2,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"FRAME_START_INT_0_MASK",		1,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"FRAME_END_INT_0_MASK",		0,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"OUT_STALL_BLOCKING_INT_0",		12,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SCALER_OVERFLOW_INT_0",		11,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_VERTICAL_UNF_INT_0",		10,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_VERTICAL_OVF_INT_0",		9,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_HORIZONTAL_UNF_INT_0",		8,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_HORIZONTAL_OVF_INT_0",		7,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SHADOW_TRIGGER_INT_0",		5,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SHADOW_HW_TRIGGER_INT_0",		4,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"CORE_FINISH_INT_0",		3,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"WDMA_FINISH_INT_0",		2,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"FRAME_START_INT_0",		1,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"FRAME_END_INT_0",		0,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SCALER_VERSION",		0,	32,	RO,	0x02100000},	/* SCALER_VERSION */
	{"SWRESET",		0,	1,	WO,	0},	/* HWFC_SWRESET */
	{"HWFC_MODE",		0,	3,	RW,	0},	/* HWFC_MODE */
	{"REGION_IDX_BIN_A",		0,	12,	RO,	0},	/* HWFC_REGION_IDX_BIN */
	{"REGION_IDX_GRAY_A",		0,	12,	RO,	0},	/* HWFC_REGION_IDX_GRAY */
	{"CURR_REGION_A",		0,	12,	RO,	0},	/* HWFC_CURR_REGION */
	{"FORMAT_A",		16,	1,	RW,	1},	/* HWFC_CONFIG_IMAGE_A */
	{"ID2_A",		12,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"ID1_A",		8,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"ID0_A",		4,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"PLANE_A",		0,	2,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"TOTAL_IMAGE_BYTE0_A",		0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE0_A */
	{"TOTAL_WIDTH_BYTE0_A",		0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE0_A */
	{"TOTAL_IMAGE_BYTE1_A",		0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE1_A */
	{"TOTAL_WIDTH_BYTE1_A",		0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE1_A */
	{"TOTAL_IMAGE_BYTE2_A",		0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE2_A */
	{"TOTAL_WIDTH_BYTE2_A",		0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE2_A */
	{"FRAME_START_SELECT",		0,	1,	RW,	1},	/* HWFC_FRAME_START_SELECT */
	{"INDEX_RESET",		0,	1,	WO,	0},	/* HWFC_INDEX_RESET */
	{"HWFC_ENABLE_AUTO_CLEAR",		0,	1,	RW,	0},	/* HWFC_ENABLE_AUTO_CLEAR */
	{"RDMA_DATA_FORMAT",		0,	3,	WRI,	0x00000000},	/* RDMA_DATA_FORMAT */
	{"WDMA0_DATA_FORMAT",		0,	4,	WRI,	0x00000000},	/* WDMA0_DATA_FORMAT */
	{"WDMA1_DATA_FORMAT",		0,	4,	WRI,	0x00000000},	/* WDMA1_DATA_FORMAT */
	{"WDMA2_DATA_FORMAT",		0,	4,	WRI,	0x00000000},	/* WDMA2_DATA_FORMAT */
	{"RDMA_SWAP_TABLE",		0,	1,	WRI,	0x00000000},	/* RDMA_SWAP_TABLE */
	{"WDMA0_SWAP_TABLE",		0,	1,	WRI,	0x00000000},	/* WDMA0_SWAP_TABLE */
	{"WDMA1_SWAP_TABLE",		0,	1,	WRI,	0x00000000},	/* WDMA1_SWAP_TABLE */
	{"WDMA2_SWAP_TABLE",		0,	1,	WRI,	0x00000000},	/* WDMA2_SWAP_TABLE */
	{"RDMA_QOS_LUT_0",		0,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_1",		4,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_2",		8,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_3",		12,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_4",		16,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_5",		20,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_6",		24,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_7",		28,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT0 */
	{"RDMA_QOS_LUT_8",		0,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_9",		4,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_10",		8,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_11",		12,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_12",		16,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_13",		20,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_14",		24,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"RDMA_QOS_LUT_15",		28,	4,	WRI,	0x00000000},	/* RDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_0",		0,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_1",		4,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_2",		8,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_3",		12,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_4",		16,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_5",		20,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_6",		24,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_7",		28,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT0 */
	{"WDMA_QOS_LUT_8",		0,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_9",		4,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_10",		8,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_11",		12,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_12",		16,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_13",		20,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_14",		24,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA_QOS_LUT_15",		28,	4,	WRI,	0x00000000},	/* WDMA_QOS_LUT1 */
	{"WDMA0_CRC_RESULT0",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT0 */
	{"WDMA0_CRC_RESULT1",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT1 */
	{"WDMA0_CRC_RESULT2",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT2 */
	{"WDMA1_CRC_RESULT0",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT0 */
	{"WDMA1_CRC_RESULT1",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT1 */
	{"WDMA1_CRC_RESULT2",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT2 */
	{"WDMA2_CRC_RESULT0",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT0 */
	{"WDMA2_CRC_RESULT1",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT1 */
	{"WDMA2_CRC_RESULT2",		0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT2 */
	{"WDMA0_FLIP_CONTROL",		0,	2,	WRI,	0x00000000},	/* WDMA0_FLIP_CONTROL */
	{"WDMA1_FLIP_CONTROL",		0,	2,	WRI,	0x00000000},	/* WDMA1_FLIP_CONTROL */
	{"WDMA2_FLIP_CONTROL",		0,	2,	WRI,	0x00000000},	/* WDMA2_FLIP_CONTROL */
	{"RDMA_CLK_EN",		0,	1,	WRI,	0x00000001},	/* RDMA_CLK_EN */
	{"WDMA0_CLK_EN",		0,	1,	WRI,	0x00000001},	/* WDMA0_CLK_EN */
	{"WDMA1_CLK_EN",		0,	1,	WRI,	0x00000001},	/* WDMA1_CLK_EN */
	{"WDMA2_CLK_EN",		0,	1,	WRI,	0x00000001},	/* WDMA2_CLK_EN */
	{"RDMA_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* RDMA_CLK_GATE_DISABLE */
	{"WDMA0_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA0_CLK_GATE_DISABLE */
	{"WDMA1_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA1_CLK_GATE_DISABLE */
	{"WDMA2_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA2_CLK_GATE_DISABLE */
	{"RDMA_BASE_ADDR01",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR01 */
	{"RDMA_BASE_ADDR02",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR02 */
	{"RDMA_BASE_ADDR03",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR03 */
	{"RDMA_BASE_ADDR04",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR04 */
	{"RDMA_BASE_ADDR05",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR05 */
	{"RDMA_BASE_ADDR06",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR06 */
	{"RDMA_BASE_ADDR07",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR07 */
	{"RDMA_BASE_ADDR08",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR08 */
	{"RDMA_BASE_ADDR11",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR11 */
	{"RDMA_BASE_ADDR12",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR12 */
	{"RDMA_BASE_ADDR13",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR13 */
	{"RDMA_BASE_ADDR14",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR14 */
	{"RDMA_BASE_ADDR15",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR15 */
	{"RDMA_BASE_ADDR16",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR16 */
	{"RDMA_BASE_ADDR17",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR17 */
	{"RDMA_BASE_ADDR18",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR18 */
	{"RDMA_BASE_ADDR21",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR21 */
	{"RDMA_BASE_ADDR22",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR22 */
	{"RDMA_BASE_ADDR23",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR23 */
	{"RDMA_BASE_ADDR24",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR24 */
	{"RDMA_BASE_ADDR25",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR25 */
	{"RDMA_BASE_ADDR26",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR26 */
	{"RDMA_BASE_ADDR27",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR27 */
	{"RDMA_BASE_ADDR28",		0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR28 */
	{"RDMA_WIDTH",		0,	14,	WRI,	0x00000010},	/* RDMA_WIDTH */
	{"RDMA_HEIGHT",		0,	14,	WRI,	0x00000010},	/* RDMA_HEIGHT */
	{"RDMA_C_STRIDE",		16,	14,	WRI,	0x00000020},	/* RDMA_STRIDE */
	{"RDMA_Y_STRIDE",		0,	14,	WRI,	0x00000020},	/* RDMA_STRIDE */
	{"RDMA_BASE_ADDR_EN1",		0,	1,	WRI,	0x00000001},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN2",		1,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN3",		2,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN4",		3,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN5",		4,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN6",		5,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN7",		6,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN8",		7,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* RDMA_FRAME_CNT */
	{"RDMA_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* RDMA_FRAME_CNT */
	{"WDMA0_BASE_ADDR01",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR01 */
	{"WDMA0_BASE_ADDR02",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR02 */
	{"WDMA0_BASE_ADDR03",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR03 */
	{"WDMA0_BASE_ADDR04",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR04 */
	{"WDMA0_BASE_ADDR05",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR05 */
	{"WDMA0_BASE_ADDR06",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR06 */
	{"WDMA0_BASE_ADDR07",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR07 */
	{"WDMA0_BASE_ADDR08",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR08 */
	{"WDMA0_BASE_ADDR11",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR11 */
	{"WDMA0_BASE_ADDR12",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR12 */
	{"WDMA0_BASE_ADDR13",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR13 */
	{"WDMA0_BASE_ADDR14",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR14 */
	{"WDMA0_BASE_ADDR15",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR15 */
	{"WDMA0_BASE_ADDR16",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR16 */
	{"WDMA0_BASE_ADDR17",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR17 */
	{"WDMA0_BASE_ADDR18",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR18 */
	{"WDMA0_BASE_ADDR21",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR21 */
	{"WDMA0_BASE_ADDR22",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR22 */
	{"WDMA0_BASE_ADDR23",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR23 */
	{"WDMA0_BASE_ADDR24",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR24 */
	{"WDMA0_BASE_ADDR25",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR25 */
	{"WDMA0_BASE_ADDR26",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR26 */
	{"WDMA0_BASE_ADDR27",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR27 */
	{"WDMA0_BASE_ADDR28",		0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR28 */
	{"WDMA0_WIDTH",		0,	14,	WRI,	0x00000010},	/* WDMA0_WIDTH */
	{"WDMA0_HEIGHT",		0,	14,	WRI,	0x00000010},	/* WDMA0_HEIGHT */
	{"WDMA0_C_STRIDE",		16,	14,	WRI,	0x00000020},	/* WDMA0_STRIDE */
	{"WDMA0_Y_STRIDE",		0,	14,	WRI,	0x00000020},	/* WDMA0_STRIDE */
	{"WDMA0_BASE_ADDR_EN1",		0,	1,	WRI,	0x00000001},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN2",		1,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN3",		2,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN4",		3,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN5",		4,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN6",		5,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN7",		6,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN8",		7,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA0_FRAME_CNT */
	{"WDMA0_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA0_FRAME_CNT */
	{"WDMA1_BASE_ADDR01",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR01 */
	{"WDMA1_BASE_ADDR02",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR02 */
	{"WDMA1_BASE_ADDR03",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR03 */
	{"WDMA1_BASE_ADDR04",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR04 */
	{"WDMA1_BASE_ADDR05",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR05 */
	{"WDMA1_BASE_ADDR06",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR06 */
	{"WDMA1_BASE_ADDR07",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR07 */
	{"WDMA1_BASE_ADDR08",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR08 */
	{"WDMA1_BASE_ADDR11",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR11 */
	{"WDMA1_BASE_ADDR12",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR12 */
	{"WDMA1_BASE_ADDR13",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR13 */
	{"WDMA1_BASE_ADDR14",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR14 */
	{"WDMA1_BASE_ADDR15",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR15 */
	{"WDMA1_BASE_ADDR16",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR16 */
	{"WDMA1_BASE_ADDR17",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR17 */
	{"WDMA1_BASE_ADDR18",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR18 */
	{"WDMA1_BASE_ADDR21",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR21 */
	{"WDMA1_BASE_ADDR22",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR22 */
	{"WDMA1_BASE_ADDR23",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR23 */
	{"WDMA1_BASE_ADDR24",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR24 */
	{"WDMA1_BASE_ADDR25",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR25 */
	{"WDMA1_BASE_ADDR26",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR26 */
	{"WDMA1_BASE_ADDR27",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR27 */
	{"WDMA1_BASE_ADDR28",		0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR28 */
	{"WDMA1_WIDTH",		0,	14,	WRI,	0x00000010},	/* WDMA1_WIDTH */
	{"WDMA1_HEIGHT",		0,	14,	WRI,	0x00000020},	/* WDMA1_HEIGHT */
	{"WDMA1_C_STRIDE",		16,	14,	WRI,	0x00000020},	/* WDMA1_STRIDE */
	{"WDMA1_Y_STRIDE",		0,	14,	WRI,	0x00000010},	/* WDMA1_STRIDE */
	{"WDMA1_BASE_ADDR_EN1",		0,	1,	WRI,	0x00000001},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN2",		1,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN3",		2,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN4",		3,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN5",		4,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN6",		5,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN7",		6,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN8",		7,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA1_FRAME_CNT */
	{"WDMA1_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA1_FRAME_CNT */
	{"WDMA2_BASE_ADDR01",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR01 */
	{"WDMA2_BASE_ADDR02",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR02 */
	{"WDMA2_BASE_ADDR03",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR03 */
	{"WDMA2_BASE_ADDR04",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR04 */
	{"WDMA2_BASE_ADDR05",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR05 */
	{"WDMA2_BASE_ADDR06",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR06 */
	{"WDMA2_BASE_ADDR07",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR07 */
	{"WDMA2_BASE_ADDR08",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR08 */
	{"WDMA2_BASE_ADDR11",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR11 */
	{"WDMA2_BASE_ADDR12",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR12 */
	{"WDMA2_BASE_ADDR13",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR13 */
	{"WDMA2_BASE_ADDR14",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR14 */
	{"WDMA2_BASE_ADDR15",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR15 */
	{"WDMA2_BASE_ADDR16",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR16 */
	{"WDMA2_BASE_ADDR17",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR17 */
	{"WDMA2_BASE_ADDR18",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR18 */
	{"WDMA2_BASE_ADDR21",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR21 */
	{"WDMA2_BASE_ADDR22",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR22 */
	{"WDMA2_BASE_ADDR23",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR23 */
	{"WDMA2_BASE_ADDR24",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR24 */
	{"WDMA2_BASE_ADDR25",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR25 */
	{"WDMA2_BASE_ADDR26",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR26 */
	{"WDMA2_BASE_ADDR27",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR27 */
	{"WDMA2_BASE_ADDR28",		0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR28 */
	{"WDMA2_WIDTH",		0,	14,	WRI,	0x00000010},	/* WDMA2_WIDTH */
	{"WDMA2_HEIGHT",		0,	14,	WRI,	0x00000010},	/* WDMA2_HEIGHT */
	{"WDMA2_C_STRIDE",		16,	14,	WRI,	0x00000020},	/* WDMA2_STRIDE */
	{"WDMA2_Y_STRIDE",		0,	14,	WRI,	0x00000020},	/* WDMA2_STRIDE */
	{"WDMA2_BASE_ADDR_EN1",		0,	1,	WRI,	0x00000001},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN2",		1,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN3",		2,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN4",		3,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN5",		4,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN6",		5,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN7",		6,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN8",		7,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA2_FRAME_CNT */
	{"WDMA2_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA2_FRAME_CNT */
};

#endif
