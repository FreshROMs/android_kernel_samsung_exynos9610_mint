/*
 * amsung EXYNOS FIMC-IS2 (Imaging Subsystem) driver
 *
 *  Copyright (C) 2016 Samsung Electronics Co., Ltd.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License version 2 as
 *  published by the Free Software Foundation.
 */

#ifndef FIMC_IS_SFR_MCSC_V3_0_H
#define FIMC_IS_SFR_MCSC_V3_0_H

#include "fimc-is-hw-api-common.h"

enum fimc_is_mcsc_hwfc_mode {
	MCSC_HWFC_MODE_OFF = 0,		/* Both RegionIdx are turned off */
	MCSC_HWFC_MODE_REGION_A_B_PORT,	/* Trun on both RegionIdx */
	MCSC_HWFC_MODE_REGION_A_PORT	/* Turn on only RegionIdx A port */
};

enum fimc_is_mcsc_hwfc_format {
	/* Count up region idx at every 8 line for all plane */
	MCSC_HWFC_FMT_YUV444_YUV422 = 0,
	/* Count up region idx at every 16 line for plane0, others are 8 line */
	MCSC_HWFC_FMT_YUV420
};

enum fimc_is_mcsc_reg_name {
	MCSC_R_SC_GCTRL_0,
	MCSC_R_SC_GCTRL_1,
	MCSC_R_TRIGGER_CTRL_0,
	MCSC_R_TRIGGER_CTRL_1,
	MCSC_R_APB_CLK_GATE_CTRL,
	MCSC_R_READ_SHADOW_REG_CTRL,
	MCSC_R_STOP_REQ_POST_EN_CTRL_0,
	MCSC_R_STOP_REQ_POST_EN_CTRL_1,
	MCSC_R_SC_RESET_CTRL_GLOBAL,
	MCSC_R_SC_RESET_CTRL_0,
	MCSC_R_SC_RESET_CTRL_1,
	MCSC_R_CORE0_CLK_GATE_CTRL,
	MCSC_R_CORE1_CLK_GATE_CTRL,
	MCSC_R_SC0_CLK_GATE_CTRL,
	MCSC_R_SC1_CLK_GATE_CTRL,
	MCSC_R_SC2_CLK_GATE_CTRL,
	MCSC_R_SC3_CLK_GATE_CTRL,
	MCSC_R_SC4_CLK_GATE_CTRL,
	MCSC_R_PC0_CLK_GATE_CTRL,
	MCSC_R_PC1_CLK_GATE_CTRL,
	MCSC_R_PC2_CLK_GATE_CTRL,
	MCSC_R_PC3_CLK_GATE_CTRL,
	MCSC_R_PC4_CLK_GATE_CTRL,
	MCSC_R_INPUT_SRC0_CTRL,
	MCSC_R_INPUT_SRC1_CTRL,
	MCSC_R_SCALER_PATH_CTRL,
	MCSC_R_OTF_OUTPUT_PATH_CTRL,
	/* MCSC_R_DITHER_0_CTRL,
	MCSC_R_DITHER_1_CTRL, */
	MCSC_R_INPUT0_IMG_SIZE,
	MCSC_R_INPUT1_IMG_SIZE,
	/* MCSC_R_INPUT0_FIFO_STATUS, */
	MCSC_R_SC0_CTRL,
	MCSC_R_SC0_SRC_POS,
	MCSC_R_SC0_SRC_SIZE,
	MCSC_R_SC0_DST_SIZE,
	MCSC_R_SC0_H_RATIO,
	MCSC_R_SC0_V_RATIO,
	MCSC_R_SC0_H_INIT_PHASE_OFFSET,
	MCSC_R_SC0_V_INIT_PHASE_OFFSET,
	MCSC_R_SC0_ROUND_MODE,
	/* MCSC_R_SC0_COEFF_CTRL, */
	MCSC_R_SC0_V_COEFF_0AB,
	MCSC_R_SC0_V_COEFF_0CD,
	MCSC_R_SC0_V_COEFF_1AB,
	MCSC_R_SC0_V_COEFF_1CD,
	MCSC_R_SC0_V_COEFF_2AB,
	MCSC_R_SC0_V_COEFF_2CD,
	MCSC_R_SC0_V_COEFF_3AB,
	MCSC_R_SC0_V_COEFF_3CD,
	MCSC_R_SC0_V_COEFF_4AB,
	MCSC_R_SC0_V_COEFF_4CD,
	MCSC_R_SC0_V_COEFF_5AB,
	MCSC_R_SC0_V_COEFF_5CD,
	MCSC_R_SC0_V_COEFF_6AB,
	MCSC_R_SC0_V_COEFF_6CD,
	MCSC_R_SC0_V_COEFF_7AB,
	MCSC_R_SC0_V_COEFF_7CD,
	MCSC_R_SC0_V_COEFF_8AB,
	MCSC_R_SC0_V_COEFF_8CD,
	MCSC_R_SC0_H_COEFF_0AB,
	MCSC_R_SC0_H_COEFF_0CD,
	MCSC_R_SC0_H_COEFF_0EF,
	MCSC_R_SC0_H_COEFF_0GH,
	MCSC_R_SC0_H_COEFF_1AB,
	MCSC_R_SC0_H_COEFF_1CD,
	MCSC_R_SC0_H_COEFF_1EF,
	MCSC_R_SC0_H_COEFF_1GH,
	MCSC_R_SC0_H_COEFF_2AB,
	MCSC_R_SC0_H_COEFF_2CD,
	MCSC_R_SC0_H_COEFF_2EF,
	MCSC_R_SC0_H_COEFF_2GH,
	MCSC_R_SC0_H_COEFF_3AB,
	MCSC_R_SC0_H_COEFF_3CD,
	MCSC_R_SC0_H_COEFF_3EF,
	MCSC_R_SC0_H_COEFF_3GH,
	MCSC_R_SC0_H_COEFF_4AB,
	MCSC_R_SC0_H_COEFF_4CD,
	MCSC_R_SC0_H_COEFF_4EF,
	MCSC_R_SC0_H_COEFF_4GH,
	MCSC_R_SC0_H_COEFF_5AB,
	MCSC_R_SC0_H_COEFF_5CD,
	MCSC_R_SC0_H_COEFF_5EF,
	MCSC_R_SC0_H_COEFF_5GH,
	MCSC_R_SC0_H_COEFF_6AB,
	MCSC_R_SC0_H_COEFF_6CD,
	MCSC_R_SC0_H_COEFF_6EF,
	MCSC_R_SC0_H_COEFF_6GH,
	MCSC_R_SC0_H_COEFF_7AB,
	MCSC_R_SC0_H_COEFF_7CD,
	MCSC_R_SC0_H_COEFF_7EF,
	MCSC_R_SC0_H_COEFF_7GH,
	MCSC_R_SC0_H_COEFF_8AB,
	MCSC_R_SC0_H_COEFF_8CD,
	MCSC_R_SC0_H_COEFF_8EF,
	MCSC_R_SC0_H_COEFF_8GH,
	MCSC_R_SC1_CTRL,
	MCSC_R_SC1_SRC_POS,
	MCSC_R_SC1_SRC_SIZE,
	MCSC_R_SC1_DST_SIZE,
	MCSC_R_SC1_H_RATIO,
	MCSC_R_SC1_V_RATIO,
	MCSC_R_SC1_H_INIT_PHASE_OFFSET,
	MCSC_R_SC1_V_INIT_PHASE_OFFSET,
	MCSC_R_SC1_ROUND_MODE,
	/* MCSC_R_SC1_COEFF_CTRL, */
	MCSC_R_SC1_V_COEFF_0AB,
	MCSC_R_SC1_V_COEFF_0CD,
	MCSC_R_SC1_V_COEFF_1AB,
	MCSC_R_SC1_V_COEFF_1CD,
	MCSC_R_SC1_V_COEFF_2AB,
	MCSC_R_SC1_V_COEFF_2CD,
	MCSC_R_SC1_V_COEFF_3AB,
	MCSC_R_SC1_V_COEFF_3CD,
	MCSC_R_SC1_V_COEFF_4AB,
	MCSC_R_SC1_V_COEFF_4CD,
	MCSC_R_SC1_V_COEFF_5AB,
	MCSC_R_SC1_V_COEFF_5CD,
	MCSC_R_SC1_V_COEFF_6AB,
	MCSC_R_SC1_V_COEFF_6CD,
	MCSC_R_SC1_V_COEFF_7AB,
	MCSC_R_SC1_V_COEFF_7CD,
	MCSC_R_SC1_V_COEFF_8AB,
	MCSC_R_SC1_V_COEFF_8CD,
	MCSC_R_SC1_H_COEFF_0AB,
	MCSC_R_SC1_H_COEFF_0CD,
	MCSC_R_SC1_H_COEFF_0EF,
	MCSC_R_SC1_H_COEFF_0GH,
	MCSC_R_SC1_H_COEFF_1AB,
	MCSC_R_SC1_H_COEFF_1CD,
	MCSC_R_SC1_H_COEFF_1EF,
	MCSC_R_SC1_H_COEFF_1GH,
	MCSC_R_SC1_H_COEFF_2AB,
	MCSC_R_SC1_H_COEFF_2CD,
	MCSC_R_SC1_H_COEFF_2EF,
	MCSC_R_SC1_H_COEFF_2GH,
	MCSC_R_SC1_H_COEFF_3AB,
	MCSC_R_SC1_H_COEFF_3CD,
	MCSC_R_SC1_H_COEFF_3EF,
	MCSC_R_SC1_H_COEFF_3GH,
	MCSC_R_SC1_H_COEFF_4AB,
	MCSC_R_SC1_H_COEFF_4CD,
	MCSC_R_SC1_H_COEFF_4EF,
	MCSC_R_SC1_H_COEFF_4GH,
	MCSC_R_SC1_H_COEFF_5AB,
	MCSC_R_SC1_H_COEFF_5CD,
	MCSC_R_SC1_H_COEFF_5EF,
	MCSC_R_SC1_H_COEFF_5GH,
	MCSC_R_SC1_H_COEFF_6AB,
	MCSC_R_SC1_H_COEFF_6CD,
	MCSC_R_SC1_H_COEFF_6EF,
	MCSC_R_SC1_H_COEFF_6GH,
	MCSC_R_SC1_H_COEFF_7AB,
	MCSC_R_SC1_H_COEFF_7CD,
	MCSC_R_SC1_H_COEFF_7EF,
	MCSC_R_SC1_H_COEFF_7GH,
	MCSC_R_SC1_H_COEFF_8AB,
	MCSC_R_SC1_H_COEFF_8CD,
	MCSC_R_SC1_H_COEFF_8EF,
	MCSC_R_SC1_H_COEFF_8GH,
	MCSC_R_SC2_CTRL,
	MCSC_R_SC2_SRC_POS,
	MCSC_R_SC2_SRC_SIZE,
	MCSC_R_SC2_DST_SIZE,
	MCSC_R_SC2_H_RATIO,
	MCSC_R_SC2_V_RATIO,
	MCSC_R_SC2_H_INIT_PHASE_OFFSET,
	MCSC_R_SC2_V_INIT_PHASE_OFFSET,
	MCSC_R_SC2_ROUND_MODE,
	/* MCSC_R_SC2_COEFF_CTRL, */
	MCSC_R_SC2_V_COEFF_0AB,
	MCSC_R_SC2_V_COEFF_0CD,
	MCSC_R_SC2_V_COEFF_1AB,
	MCSC_R_SC2_V_COEFF_1CD,
	MCSC_R_SC2_V_COEFF_2AB,
	MCSC_R_SC2_V_COEFF_2CD,
	MCSC_R_SC2_V_COEFF_3AB,
	MCSC_R_SC2_V_COEFF_3CD,
	MCSC_R_SC2_V_COEFF_4AB,
	MCSC_R_SC2_V_COEFF_4CD,
	MCSC_R_SC2_V_COEFF_5AB,
	MCSC_R_SC2_V_COEFF_5CD,
	MCSC_R_SC2_V_COEFF_6AB,
	MCSC_R_SC2_V_COEFF_6CD,
	MCSC_R_SC2_V_COEFF_7AB,
	MCSC_R_SC2_V_COEFF_7CD,
	MCSC_R_SC2_V_COEFF_8AB,
	MCSC_R_SC2_V_COEFF_8CD,
	MCSC_R_SC2_H_COEFF_0AB,
	MCSC_R_SC2_H_COEFF_0CD,
	MCSC_R_SC2_H_COEFF_0EF,
	MCSC_R_SC2_H_COEFF_0GH,
	MCSC_R_SC2_H_COEFF_1AB,
	MCSC_R_SC2_H_COEFF_1CD,
	MCSC_R_SC2_H_COEFF_1EF,
	MCSC_R_SC2_H_COEFF_1GH,
	MCSC_R_SC2_H_COEFF_2AB,
	MCSC_R_SC2_H_COEFF_2CD,
	MCSC_R_SC2_H_COEFF_2EF,
	MCSC_R_SC2_H_COEFF_2GH,
	MCSC_R_SC2_H_COEFF_3AB,
	MCSC_R_SC2_H_COEFF_3CD,
	MCSC_R_SC2_H_COEFF_3EF,
	MCSC_R_SC2_H_COEFF_3GH,
	MCSC_R_SC2_H_COEFF_4AB,
	MCSC_R_SC2_H_COEFF_4CD,
	MCSC_R_SC2_H_COEFF_4EF,
	MCSC_R_SC2_H_COEFF_4GH,
	MCSC_R_SC2_H_COEFF_5AB,
	MCSC_R_SC2_H_COEFF_5CD,
	MCSC_R_SC2_H_COEFF_5EF,
	MCSC_R_SC2_H_COEFF_5GH,
	MCSC_R_SC2_H_COEFF_6AB,
	MCSC_R_SC2_H_COEFF_6CD,
	MCSC_R_SC2_H_COEFF_6EF,
	MCSC_R_SC2_H_COEFF_6GH,
	MCSC_R_SC2_H_COEFF_7AB,
	MCSC_R_SC2_H_COEFF_7CD,
	MCSC_R_SC2_H_COEFF_7EF,
	MCSC_R_SC2_H_COEFF_7GH,
	MCSC_R_SC2_H_COEFF_8AB,
	MCSC_R_SC2_H_COEFF_8CD,
	MCSC_R_SC2_H_COEFF_8EF,
	MCSC_R_SC2_H_COEFF_8GH,
	MCSC_R_SC3_CTRL,
	MCSC_R_SC3_SRC_POS,
	MCSC_R_SC3_SRC_SIZE,
	MCSC_R_SC3_DST_SIZE,
	MCSC_R_SC3_H_RATIO,
	MCSC_R_SC3_V_RATIO,
	MCSC_R_SC3_H_INIT_PHASE_OFFSET,
	MCSC_R_SC3_V_INIT_PHASE_OFFSET,
	MCSC_R_SC3_ROUND_MODE,
	MCSC_R_SC3_V_COEFF_0AB,
	MCSC_R_SC3_V_COEFF_0CD,
	MCSC_R_SC3_V_COEFF_1AB,
	MCSC_R_SC3_V_COEFF_1CD,
	MCSC_R_SC3_V_COEFF_2AB,
	MCSC_R_SC3_V_COEFF_2CD,
	MCSC_R_SC3_V_COEFF_3AB,
	MCSC_R_SC3_V_COEFF_3CD,
	MCSC_R_SC3_V_COEFF_4AB,
	MCSC_R_SC3_V_COEFF_4CD,
	MCSC_R_SC3_V_COEFF_5AB,
	MCSC_R_SC3_V_COEFF_5CD,
	MCSC_R_SC3_V_COEFF_6AB,
	MCSC_R_SC3_V_COEFF_6CD,
	MCSC_R_SC3_V_COEFF_7AB,
	MCSC_R_SC3_V_COEFF_7CD,
	MCSC_R_SC3_V_COEFF_8AB,
	MCSC_R_SC3_V_COEFF_8CD,
	MCSC_R_SC3_H_COEFF_0AB,
	MCSC_R_SC3_H_COEFF_0CD,
	MCSC_R_SC3_H_COEFF_0EF,
	MCSC_R_SC3_H_COEFF_0GH,
	MCSC_R_SC3_H_COEFF_1AB,
	MCSC_R_SC3_H_COEFF_1CD,
	MCSC_R_SC3_H_COEFF_1EF,
	MCSC_R_SC3_H_COEFF_1GH,
	MCSC_R_SC3_H_COEFF_2AB,
	MCSC_R_SC3_H_COEFF_2CD,
	MCSC_R_SC3_H_COEFF_2EF,
	MCSC_R_SC3_H_COEFF_2GH,
	MCSC_R_SC3_H_COEFF_3AB,
	MCSC_R_SC3_H_COEFF_3CD,
	MCSC_R_SC3_H_COEFF_3EF,
	MCSC_R_SC3_H_COEFF_3GH,
	MCSC_R_SC3_H_COEFF_4AB,
	MCSC_R_SC3_H_COEFF_4CD,
	MCSC_R_SC3_H_COEFF_4EF,
	MCSC_R_SC3_H_COEFF_4GH,
	MCSC_R_SC3_H_COEFF_5AB,
	MCSC_R_SC3_H_COEFF_5CD,
	MCSC_R_SC3_H_COEFF_5EF,
	MCSC_R_SC3_H_COEFF_5GH,
	MCSC_R_SC3_H_COEFF_6AB,
	MCSC_R_SC3_H_COEFF_6CD,
	MCSC_R_SC3_H_COEFF_6EF,
	MCSC_R_SC3_H_COEFF_6GH,
	MCSC_R_SC3_H_COEFF_7AB,
	MCSC_R_SC3_H_COEFF_7CD,
	MCSC_R_SC3_H_COEFF_7EF,
	MCSC_R_SC3_H_COEFF_7GH,
	MCSC_R_SC3_H_COEFF_8AB,
	MCSC_R_SC3_H_COEFF_8CD,
	MCSC_R_SC3_H_COEFF_8EF,
	MCSC_R_SC3_H_COEFF_8GH,
	MCSC_R_SC4_CTRL,
	MCSC_R_SC4_SRC_POS,
	MCSC_R_SC4_SRC_SIZE,
	MCSC_R_SC4_DST_SIZE,
	MCSC_R_SC4_H_RATIO,
	MCSC_R_SC4_V_RATIO,
	MCSC_R_SC4_H_INIT_PHASE_OFFSET,
	MCSC_R_SC4_V_INIT_PHASE_OFFSET,
	MCSC_R_SC4_ROUND_MODE,
	MCSC_R_SC4_V_COEFF_0AB,
	MCSC_R_SC4_V_COEFF_0CD,
	MCSC_R_SC4_V_COEFF_1AB,
	MCSC_R_SC4_V_COEFF_1CD,
	MCSC_R_SC4_V_COEFF_2AB,
	MCSC_R_SC4_V_COEFF_2CD,
	MCSC_R_SC4_V_COEFF_3AB,
	MCSC_R_SC4_V_COEFF_3CD,
	MCSC_R_SC4_V_COEFF_4AB,
	MCSC_R_SC4_V_COEFF_4CD,
	MCSC_R_SC4_V_COEFF_5AB,
	MCSC_R_SC4_V_COEFF_5CD,
	MCSC_R_SC4_V_COEFF_6AB,
	MCSC_R_SC4_V_COEFF_6CD,
	MCSC_R_SC4_V_COEFF_7AB,
	MCSC_R_SC4_V_COEFF_7CD,
	MCSC_R_SC4_V_COEFF_8AB,
	MCSC_R_SC4_V_COEFF_8CD,
	MCSC_R_SC4_H_COEFF_0AB,
	MCSC_R_SC4_H_COEFF_0CD,
	MCSC_R_SC4_H_COEFF_0EF,
	MCSC_R_SC4_H_COEFF_0GH,
	MCSC_R_SC4_H_COEFF_1AB,
	MCSC_R_SC4_H_COEFF_1CD,
	MCSC_R_SC4_H_COEFF_1EF,
	MCSC_R_SC4_H_COEFF_1GH,
	MCSC_R_SC4_H_COEFF_2AB,
	MCSC_R_SC4_H_COEFF_2CD,
	MCSC_R_SC4_H_COEFF_2EF,
	MCSC_R_SC4_H_COEFF_2GH,
	MCSC_R_SC4_H_COEFF_3AB,
	MCSC_R_SC4_H_COEFF_3CD,
	MCSC_R_SC4_H_COEFF_3EF,
	MCSC_R_SC4_H_COEFF_3GH,
	MCSC_R_SC4_H_COEFF_4AB,
	MCSC_R_SC4_H_COEFF_4CD,
	MCSC_R_SC4_H_COEFF_4EF,
	MCSC_R_SC4_H_COEFF_4GH,
	MCSC_R_SC4_H_COEFF_5AB,
	MCSC_R_SC4_H_COEFF_5CD,
	MCSC_R_SC4_H_COEFF_5EF,
	MCSC_R_SC4_H_COEFF_5GH,
	MCSC_R_SC4_H_COEFF_6AB,
	MCSC_R_SC4_H_COEFF_6CD,
	MCSC_R_SC4_H_COEFF_6EF,
	MCSC_R_SC4_H_COEFF_6GH,
	MCSC_R_SC4_H_COEFF_7AB,
	MCSC_R_SC4_H_COEFF_7CD,
	MCSC_R_SC4_H_COEFF_7EF,
	MCSC_R_SC4_H_COEFF_7GH,
	MCSC_R_SC4_H_COEFF_8AB,
	MCSC_R_SC4_H_COEFF_8CD,
	MCSC_R_SC4_H_COEFF_8EF,
	MCSC_R_SC4_H_COEFF_8GH,
	MCSC_R_PC0_POST_SC_CTRL,
	MCSC_R_PC0_POST_SC_IMG_SIZE,
	MCSC_R_PC0_POST_SC_DST_SIZE,
	MCSC_R_PC0_POST_SC_H_RATIO,
	MCSC_R_PC0_POST_SC_V_RATIO,
	MCSC_R_PC0_CONV420_CTRL,
	MCSC_R_PC0_CONV420_WEIGHT,
	MCSC_R_PC0_BCHS_CTRL,
	MCSC_R_PC0_BCHS_BC,
	MCSC_R_PC0_BCHS_HS1,
	MCSC_R_PC0_BCHS_HS2,
	/* MCSC_R_PC0_OTF_CTRL, */
	MCSC_R_PC0_BCHS_CLAMP,
	MCSC_R_PC0_OTF_OUT_CTRL,
	MCSC_R_PC0_DMA_OUT_CTRL,
	MCSC_R_PC1_POST_SC_CTRL,
	MCSC_R_PC1_POST_SC_IMG_SIZE,
	MCSC_R_PC1_POST_SC_DST_SIZE,
	MCSC_R_PC1_POST_SC_H_RATIO,
	MCSC_R_PC1_POST_SC_V_RATIO,
	MCSC_R_PC1_CONV420_CTRL,
	MCSC_R_PC1_CONV420_WEIGHT,
	MCSC_R_PC1_BCHS_CTRL,
	MCSC_R_PC1_BCHS_BC,
	MCSC_R_PC1_BCHS_HS1,
	MCSC_R_PC1_BCHS_HS2,
	MCSC_R_PC1_BCHS_CLAMP,
	MCSC_R_PC1_OTF_OUT_CTRL,
	MCSC_R_PC1_DMA_OUT_CTRL,
	MCSC_R_PC2_POST_SC_CTRL,
	MCSC_R_PC2_POST_SC_IMG_SIZE,
	MCSC_R_PC2_POST_SC_DST_SIZE,
	MCSC_R_PC2_POST_SC_H_RATIO,
	MCSC_R_PC2_POST_SC_V_RATIO,
	MCSC_R_PC2_CONV420_CTRL,
	MCSC_R_PC2_CONV420_WEIGHT,
	MCSC_R_PC2_BCHS_CTRL,
	MCSC_R_PC2_BCHS_BC,
	MCSC_R_PC2_BCHS_HS1,
	MCSC_R_PC2_BCHS_HS2,
	MCSC_R_PC2_BCHS_CLAMP,
	MCSC_R_PC2_OTF_OUT_CTRL,
	MCSC_R_PC2_DMA_OUT_CTRL,
	MCSC_R_PC3_POST_SC_CTRL,
	MCSC_R_PC3_POST_SC_IMG_SIZE,
	MCSC_R_PC3_POST_SC_DST_SIZE,
	MCSC_R_PC3_POST_SC_H_RATIO,
	MCSC_R_PC3_POST_SC_V_RATIO,
	MCSC_R_PC3_CONV420_CTRL,
	MCSC_R_PC3_CONV420_WEIGHT,
	MCSC_R_PC3_BCHS_CTRL,
	MCSC_R_PC3_BCHS_BC,
	MCSC_R_PC3_BCHS_HS1,
	MCSC_R_PC3_BCHS_HS2,
	MCSC_R_PC3_BCHS_CLAMP,
	MCSC_R_PC3_OTF_OUT_CTRL,
	MCSC_R_PC3_DMA_OUT_CTRL,
	MCSC_R_PC4_POST_SC_CTRL,
	MCSC_R_PC4_POST_SC_IMG_SIZE,
	MCSC_R_PC4_POST_SC_DST_SIZE,
	MCSC_R_PC4_POST_SC_H_RATIO,
	MCSC_R_PC4_POST_SC_V_RATIO,
	MCSC_R_PC4_CONV420_CTRL,
	MCSC_R_PC4_CONV420_WEIGHT,
	MCSC_R_PC4_BCHS_CTRL,
	MCSC_R_PC4_BCHS_BC,
	MCSC_R_PC4_BCHS_HS1,
	MCSC_R_PC4_BCHS_HS2,
	MCSC_R_PC4_BCHS_CLAMP,
	MCSC_R_PC4_OTF_OUT_CTRL,
	MCSC_R_PC4_DMA_OUT_CTRL,
	MCSC_R_SCALER_RESET_STATUS,
	MCSC_R_SCALER_RUNNING_STATUS,
	MCSC_R_DMA_RUNNING_STATUS,
	MCSC_R_SCALER_INPUT_STATUS_0,
	MCSC_R_SCALER_INPUT_STATUS_1,
	MCSC_R_SCALER_INTERRUPT_MASK_0,
	MCSC_R_SCALER_INTERRUPT_MASK_1,
	MCSC_R_SCALER_INTERRUPT_0,
	MCSC_R_SCALER_INTERRUPT_1,
	MCSC_R_SCALER_VERSION,
	MCSC_R_HWFC_SWRESET,
	MCSC_R_HWFC_MODE,
	MCSC_R_HWFC_REGION_IDX_BIN,
	MCSC_R_HWFC_REGION_IDX_GRAY,
	MCSC_R_HWFC_CURR_REGION,
	MCSC_R_HWFC_CONFIG_IMAGE_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE0_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE0_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE1_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE1_A,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE2_A,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE2_A,
	MCSC_R_HWFC_CONFIG_IMAGE_B,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE0_B,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE0_B,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE1_B,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE1_B,
	MCSC_R_HWFC_TOTAL_IMAGE_BYTE2_B,
	MCSC_R_HWFC_TOTAL_WIDTH_BYTE2_B,
	MCSC_R_HWFC_FRAME_START_SELECT,
	MCSC_R_HWFC_INDEX_RESET,
	MCSC_R_HWFC_ENABLE_AUTO_CLEAR,
	MCSC_R_UVSP_BINNING,
	MCSC_R_UVSP_RADIALCTR,
	MCSC_R_UVSP_RADIALRNDPOWER,
	MCSC_R_UVSP_RADIALALPHA,
	MCSC_R_UVSP_RADIALBIA,
	MCSC_R_UVSP_RADIALBIB,
	MCSC_R_UVSP_BIQUADCTR,
	MCSC_R_UVSP_RADIALREFINE,
	MCSC_R_UVSP_PEDESTRAL,
	MCSC_R_UVSP_OFFSET,
	MCSC_R_UVSP_DESATU,
	MCSC_R_UVSP_DESATV,
	MCSC_R_UVSP_DESATY,
	MCSC_R_UVSP_DESATCTR,
	MCSC_R_SSB_RUNNING_STATUS,
	MCSC_R_SSB_INTERRUPT,
	MCSC_R_SSB_INTERRUPT_EN,
	MCSC_R_SSB_READ_SHADOW_REG_CTRL,
	MCSC_R_SSB_RESET_CTRL,
	MCSC_R_SSB_RESET_STATUS,
	MCSC_R_SSB_IMG_WIDTH,
	MCSC_R_SSB_IMG_HEIGHT,
	MCSC_R_SSB_CROP_EN,
	MCSC_R_SSB_CROP_START_X,
	MCSC_R_SSB_CROP_START_Y,
	MCSC_R_SSB_CROP_SIZE_X,
	MCSC_R_SSB_CROP_SIZE_Y,
	MCSC_R_RDMA_DATA_FORMAT,
	MCSC_R_WDMA0_DATA_FORMAT,
	MCSC_R_WDMA1_DATA_FORMAT,
	MCSC_R_WDMA2_DATA_FORMAT,
	MCSC_R_WDMA3_DATA_FORMAT,
	MCSC_R_WDMA4_DATA_FORMAT,
	MCSC_R_RDMA_SWAP_TABLE,
	MCSC_R_WDMA0_SWAP_TABLE,
	MCSC_R_WDMA1_SWAP_TABLE,
	MCSC_R_WDMA2_SWAP_TABLE,
	MCSC_R_WDMA3_SWAP_TABLE,
	MCSC_R_WDMA4_SWAP_TABLE,
	/* MCSC_R_RDMA_QOS_LUT0,
	MCSC_R_RDMA_QOS_LUT1,
	MCSC_R_WDMA_QOS_LUT0,
	MCSC_R_WDMA_QOS_LUT1, */
	MCSC_R_WDMA0_CRC_RESULT0,
	MCSC_R_WDMA0_CRC_RESULT1,
	MCSC_R_WDMA0_CRC_RESULT2,
	MCSC_R_WDMA1_CRC_RESULT0,
	MCSC_R_WDMA1_CRC_RESULT1,
	MCSC_R_WDMA1_CRC_RESULT2,
	MCSC_R_WDMA2_CRC_RESULT0,
	MCSC_R_WDMA2_CRC_RESULT1,
	MCSC_R_WDMA2_CRC_RESULT2,
	MCSC_R_WDMA3_CRC_RESULT0,
	MCSC_R_WDMA3_CRC_RESULT1,
	MCSC_R_WDMA3_CRC_RESULT2,
	MCSC_R_WDMA4_CRC_RESULT0,
	MCSC_R_WDMA4_CRC_RESULT1,
	MCSC_R_WDMA4_CRC_RESULT2,
	MCSC_R_WDMA0_FLIP_CONTROL,
	MCSC_R_WDMA1_FLIP_CONTROL,
	MCSC_R_WDMA2_FLIP_CONTROL,
	MCSC_R_WDMA3_FLIP_CONTROL,
	MCSC_R_WDMA4_FLIP_CONTROL,
	MCSC_R_DMA_CLK_GATE_DISABLE,
	/* MCSC_R_WDMA0_CLK_EN,
	MCSC_R_WDMA1_CLK_EN,
	MCSC_R_WDMA2_CLK_EN,
	MCSC_R_WDMA3_CLK_EN,
	MCSC_R_WDMA4_CLK_EN,
	MCSC_R_RDMA_CLK_GATE_DISABLE,
	MCSC_R_WDMA0_CLK_GATE_DISABLE,
	MCSC_R_WDMA1_CLK_GATE_DISABLE,
	MCSC_R_WDMA2_CLK_GATE_DISABLE,
	MCSC_R_WDMA3_CLK_GATE_DISABLE,
	MCSC_R_WDMA4_CLK_GATE_DISABLE, */
	MCSC_R_RDMA_BASE_ADDR01,
	MCSC_R_RDMA_BASE_ADDR02,
	MCSC_R_RDMA_BASE_ADDR03,
	MCSC_R_RDMA_BASE_ADDR04,
	MCSC_R_RDMA_BASE_ADDR05,
	MCSC_R_RDMA_BASE_ADDR06,
	MCSC_R_RDMA_BASE_ADDR07,
	MCSC_R_RDMA_BASE_ADDR08,
	MCSC_R_RDMA_BASE_ADDR11,
	MCSC_R_RDMA_BASE_ADDR12,
	MCSC_R_RDMA_BASE_ADDR13,
	MCSC_R_RDMA_BASE_ADDR14,
	MCSC_R_RDMA_BASE_ADDR15,
	MCSC_R_RDMA_BASE_ADDR16,
	MCSC_R_RDMA_BASE_ADDR17,
	MCSC_R_RDMA_BASE_ADDR18,
	MCSC_R_RDMA_BASE_ADDR21,
	MCSC_R_RDMA_BASE_ADDR22,
	MCSC_R_RDMA_BASE_ADDR23,
	MCSC_R_RDMA_BASE_ADDR24,
	MCSC_R_RDMA_BASE_ADDR25,
	MCSC_R_RDMA_BASE_ADDR26,
	MCSC_R_RDMA_BASE_ADDR27,
	MCSC_R_RDMA_BASE_ADDR28,
	MCSC_R_RDMA_WIDTH,
	MCSC_R_RDMA_HEIGHT,
	MCSC_R_RDMA_STRIDE,
	MCSC_R_RDMA_BASE_ADDR_EN,
	MCSC_R_RDMA_FRAME_CNT,
	MCSC_R_WDMA0_BASE_ADDR01,
	MCSC_R_WDMA0_BASE_ADDR02,
	MCSC_R_WDMA0_BASE_ADDR03,
	MCSC_R_WDMA0_BASE_ADDR04,
	MCSC_R_WDMA0_BASE_ADDR05,
	MCSC_R_WDMA0_BASE_ADDR06,
	MCSC_R_WDMA0_BASE_ADDR07,
	MCSC_R_WDMA0_BASE_ADDR08,
	MCSC_R_WDMA0_BASE_ADDR11,
	MCSC_R_WDMA0_BASE_ADDR12,
	MCSC_R_WDMA0_BASE_ADDR13,
	MCSC_R_WDMA0_BASE_ADDR14,
	MCSC_R_WDMA0_BASE_ADDR15,
	MCSC_R_WDMA0_BASE_ADDR16,
	MCSC_R_WDMA0_BASE_ADDR17,
	MCSC_R_WDMA0_BASE_ADDR18,
	MCSC_R_WDMA0_BASE_ADDR21,
	MCSC_R_WDMA0_BASE_ADDR22,
	MCSC_R_WDMA0_BASE_ADDR23,
	MCSC_R_WDMA0_BASE_ADDR24,
	MCSC_R_WDMA0_BASE_ADDR25,
	MCSC_R_WDMA0_BASE_ADDR26,
	MCSC_R_WDMA0_BASE_ADDR27,
	MCSC_R_WDMA0_BASE_ADDR28,
	MCSC_R_WDMA0_WIDTH,
	MCSC_R_WDMA0_HEIGHT,
	MCSC_R_WDMA0_STRIDE,
	MCSC_R_WDMA0_BASE_ADDR_EN,
	MCSC_R_WDMA0_FRAME_CNT,
	MCSC_R_WDMA1_BASE_ADDR01,
	MCSC_R_WDMA1_BASE_ADDR02,
	MCSC_R_WDMA1_BASE_ADDR03,
	MCSC_R_WDMA1_BASE_ADDR04,
	MCSC_R_WDMA1_BASE_ADDR05,
	MCSC_R_WDMA1_BASE_ADDR06,
	MCSC_R_WDMA1_BASE_ADDR07,
	MCSC_R_WDMA1_BASE_ADDR08,
	MCSC_R_WDMA1_BASE_ADDR11,
	MCSC_R_WDMA1_BASE_ADDR12,
	MCSC_R_WDMA1_BASE_ADDR13,
	MCSC_R_WDMA1_BASE_ADDR14,
	MCSC_R_WDMA1_BASE_ADDR15,
	MCSC_R_WDMA1_BASE_ADDR16,
	MCSC_R_WDMA1_BASE_ADDR17,
	MCSC_R_WDMA1_BASE_ADDR18,
	MCSC_R_WDMA1_BASE_ADDR21,
	MCSC_R_WDMA1_BASE_ADDR22,
	MCSC_R_WDMA1_BASE_ADDR23,
	MCSC_R_WDMA1_BASE_ADDR24,
	MCSC_R_WDMA1_BASE_ADDR25,
	MCSC_R_WDMA1_BASE_ADDR26,
	MCSC_R_WDMA1_BASE_ADDR27,
	MCSC_R_WDMA1_BASE_ADDR28,
	MCSC_R_WDMA1_WIDTH,
	MCSC_R_WDMA1_HEIGHT,
	MCSC_R_WDMA1_STRIDE,
	MCSC_R_WDMA1_BASE_ADDR_EN,
	MCSC_R_WDMA1_FRAME_CNT,
	MCSC_R_WDMA2_BASE_ADDR01,
	MCSC_R_WDMA2_BASE_ADDR02,
	MCSC_R_WDMA2_BASE_ADDR03,
	MCSC_R_WDMA2_BASE_ADDR04,
	MCSC_R_WDMA2_BASE_ADDR05,
	MCSC_R_WDMA2_BASE_ADDR06,
	MCSC_R_WDMA2_BASE_ADDR07,
	MCSC_R_WDMA2_BASE_ADDR08,
	MCSC_R_WDMA2_BASE_ADDR11,
	MCSC_R_WDMA2_BASE_ADDR12,
	MCSC_R_WDMA2_BASE_ADDR13,
	MCSC_R_WDMA2_BASE_ADDR14,
	MCSC_R_WDMA2_BASE_ADDR15,
	MCSC_R_WDMA2_BASE_ADDR16,
	MCSC_R_WDMA2_BASE_ADDR17,
	MCSC_R_WDMA2_BASE_ADDR18,
	MCSC_R_WDMA2_BASE_ADDR21,
	MCSC_R_WDMA2_BASE_ADDR22,
	MCSC_R_WDMA2_BASE_ADDR23,
	MCSC_R_WDMA2_BASE_ADDR24,
	MCSC_R_WDMA2_BASE_ADDR25,
	MCSC_R_WDMA2_BASE_ADDR26,
	MCSC_R_WDMA2_BASE_ADDR27,
	MCSC_R_WDMA2_BASE_ADDR28,
	MCSC_R_WDMA2_WIDTH,
	MCSC_R_WDMA2_HEIGHT,
	MCSC_R_WDMA2_STRIDE,
	MCSC_R_WDMA2_BASE_ADDR_EN,
	MCSC_R_WDMA2_FRAME_CNT,
	MCSC_R_WDMA3_BASE_ADDR01,
	MCSC_R_WDMA3_BASE_ADDR02,
	MCSC_R_WDMA3_BASE_ADDR03,
	MCSC_R_WDMA3_BASE_ADDR04,
	MCSC_R_WDMA3_BASE_ADDR05,
	MCSC_R_WDMA3_BASE_ADDR06,
	MCSC_R_WDMA3_BASE_ADDR07,
	MCSC_R_WDMA3_BASE_ADDR08,
	MCSC_R_WDMA3_BASE_ADDR11,
	MCSC_R_WDMA3_BASE_ADDR12,
	MCSC_R_WDMA3_BASE_ADDR13,
	MCSC_R_WDMA3_BASE_ADDR14,
	MCSC_R_WDMA3_BASE_ADDR15,
	MCSC_R_WDMA3_BASE_ADDR16,
	MCSC_R_WDMA3_BASE_ADDR17,
	MCSC_R_WDMA3_BASE_ADDR18,
	MCSC_R_WDMA3_BASE_ADDR21,
	MCSC_R_WDMA3_BASE_ADDR22,
	MCSC_R_WDMA3_BASE_ADDR23,
	MCSC_R_WDMA3_BASE_ADDR24,
	MCSC_R_WDMA3_BASE_ADDR25,
	MCSC_R_WDMA3_BASE_ADDR26,
	MCSC_R_WDMA3_BASE_ADDR27,
	MCSC_R_WDMA3_BASE_ADDR28,
	MCSC_R_WDMA3_WIDTH,
	MCSC_R_WDMA3_HEIGHT,
	MCSC_R_WDMA3_STRIDE,
	MCSC_R_WDMA3_BASE_ADDR_EN,
	MCSC_R_WDMA3_FRAME_CNT,
	MCSC_R_WDMA4_BASE_ADDR01,
	MCSC_R_WDMA4_BASE_ADDR02,
	MCSC_R_WDMA4_BASE_ADDR03,
	MCSC_R_WDMA4_BASE_ADDR04,
	MCSC_R_WDMA4_BASE_ADDR05,
	MCSC_R_WDMA4_BASE_ADDR06,
	MCSC_R_WDMA4_BASE_ADDR07,
	MCSC_R_WDMA4_BASE_ADDR08,
	MCSC_R_WDMA4_BASE_ADDR11,
	MCSC_R_WDMA4_BASE_ADDR12,
	MCSC_R_WDMA4_BASE_ADDR13,
	MCSC_R_WDMA4_BASE_ADDR14,
	MCSC_R_WDMA4_BASE_ADDR15,
	MCSC_R_WDMA4_BASE_ADDR16,
	MCSC_R_WDMA4_BASE_ADDR17,
	MCSC_R_WDMA4_BASE_ADDR18,
	MCSC_R_WDMA4_BASE_ADDR21,
	MCSC_R_WDMA4_BASE_ADDR22,
	MCSC_R_WDMA4_BASE_ADDR23,
	MCSC_R_WDMA4_BASE_ADDR24,
	MCSC_R_WDMA4_BASE_ADDR25,
	MCSC_R_WDMA4_BASE_ADDR26,
	MCSC_R_WDMA4_BASE_ADDR27,
	MCSC_R_WDMA4_BASE_ADDR28,
	MCSC_R_WDMA4_WIDTH,
	MCSC_R_WDMA4_HEIGHT,
	MCSC_R_WDMA4_STRIDE,
	MCSC_R_WDMA4_BASE_ADDR_EN,
	MCSC_R_WDMA4_FRAME_CNT,
	MCSC_R_WDMA_PRI_0,
	MCSC_R_WDMA_PRI_1,
	MCSC_R_WDMA_PRI_2,
	MCSC_R_WDMA_AXI_PRI,
	MCSC_R_WDMA_SRAM_BASE_0,
	MCSC_R_WDMA_SRAM_BASE_1,
	MCSC_REG_CNT
};

static const struct fimc_is_reg mcsc_regs[MCSC_REG_CNT] = {
	{0x0000, "SC_GCTRL_0"},
	{0x0004, "SC_GCTRL_1"},
	{0x0008, "TRIGGER_CTRL_0"},
	{0x000C, "TRIGGER_CTRL_1"},
	{0x0010, "APB_CLK_GATE_CTRL"},
	{0x0014, "READ_SHADOW_REG_CTRL"},
	{0x0018, "STOP_REQ_POST_EN_CTRL_0"},
	{0x001C, "STOP_REQ_POST_EN_CTRL_1"},
	{0x0020, "SC_RESET_CTRL_GLOBAL"},
	{0x0024, "SC_RESET_CTRL_0"},
	{0x0028, "SC_RESET_CTRL_1"},
	{0x0030, "CORE0_CLK_GATE_CTRL"},
	{0x0034, "CORE1_CLK_GATE_CTRL"},
	{0x0038, "SC0_CLK_GATE_CTRL"},
	{0x003C, "SC1_CLK_GATE_CTRL"},
	{0x0040, "SC2_CLK_GATE_CTRL"},
	{0x0044, "SC3_CLK_GATE_CTRL"},
	{0x0048, "SC4_CLK_GATE_CTRL"},
	{0x004C, "PC0_CLK_GATE_CTRL"},
	{0x0050, "PC1_CLK_GATE_CTRL"},
	{0x0054, "PC2_CLK_GATE_CTRL"},
	{0x0058, "PC3_CLK_GATE_CTRL"},
	{0x005C, "PC4_CLK_GATE_CTRL"},
	{0x0060, "INPUT_SRC0_CTRL"},
	{0x0064, "INPUT_SRC1_CTRL"},
	{0x0068, "SCALER_PATH_CTRL"},
	{0x006C, "OTF_OUT_PATH_CTRL"},
	/* {0x0070, "DITHER_0_CTRL"},
	{0x0080, "DITHER_1_CTRL"}, */
	{0x0090, "INPUT0_IMG_SIZE"},
	{0x0094, "INPUT1_IMG_SIZE"},
	/*{0x0098, "INPUT0_FIFO_STATUS"}, */
	{0x00A0, "SC0_CTRL"},
	{0x00A4, "SC0_SRC_POS"},
	{0x00A8, "SC0_SRC_SIZE"},
	{0x00AC, "SC0_DST_SIZE"},
	{0x00B0, "SC0_H_RATIO"},
	{0x00B4, "SC0_V_RATIO"},
	{0x00B8, "SC0_H_INIT_PHASE_OFFSET"},
	{0x00BC, "SC0_V_INIT_PHASE_OFFSET"},
	{0x00C0, "SC0_ROUND_MODE"},
	/* {0x00C4, "SC0_COEFF_CTRL"}, */
	{0x00D0, "SC0_V_COEFF_0AB"},
	{0x00D4, "SC0_V_COEFF_0CD"},
	{0x00D8, "SC0_V_COEFF_1AB"},
	{0x00DC, "SC0_V_COEFF_1CD"},
	{0x00E0, "SC0_V_COEFF_2AB"},
	{0x00E4, "SC0_V_COEFF_2CD"},
	{0x00E8, "SC0_V_COEFF_3AB"},
	{0x00EC, "SC0_V_COEFF_3CD"},
	{0x00F0, "SC0_V_COEFF_4AB"},
	{0x00F4, "SC0_V_COEFF_4CD"},
	{0x00F8, "SC0_V_COEFF_5AB"},
	{0x00FC, "SC0_V_COEFF_5CD"},
	{0x0100, "SC0_V_COEFF_6AB"},
	{0x0104, "SC0_V_COEFF_6CD"},
	{0x0108, "SC0_V_COEFF_7AB"},
	{0x010C, "SC0_V_COEFF_7CD"},
	{0x0110, "SC0_V_COEFF_8AB"},
	{0x0114, "SC0_V_COEFF_8CD"},
	{0x0118, "SC0_H_COEFF_0AB"},
	{0x011C, "SC0_H_COEFF_0CD"},
	{0x0120, "SC0_H_COEFF_0EF"},
	{0x0124, "SC0_H_COEFF_0GH"},
	{0x0128, "SC0_H_COEFF_1AB"},
	{0x012C, "SC0_H_COEFF_1CD"},
	{0x0130, "SC0_H_COEFF_1EF"},
	{0x0134, "SC0_H_COEFF_1GH"},
	{0x0138, "SC0_H_COEFF_2AB"},
	{0x013C, "SC0_H_COEFF_2CD"},
	{0x0140, "SC0_H_COEFF_2EF"},
	{0x0144, "SC0_H_COEFF_2GH"},
	{0x0148, "SC0_H_COEFF_3AB"},
	{0x014C, "SC0_H_COEFF_3CD"},
	{0x0150, "SC0_H_COEFF_3EF"},
	{0x0154, "SC0_H_COEFF_3GH"},
	{0x0158, "SC0_H_COEFF_4AB"},
	{0x015C, "SC0_H_COEFF_4CD"},
	{0x0160, "SC0_H_COEFF_4EF"},
	{0x0164, "SC0_H_COEFF_4GH"},
	{0x0168, "SC0_H_COEFF_5AB"},
	{0x016C, "SC0_H_COEFF_5CD"},
	{0x0170, "SC0_H_COEFF_5EF"},
	{0x0174, "SC0_H_COEFF_5GH"},
	{0x0178, "SC0_H_COEFF_6AB"},
	{0x017C, "SC0_H_COEFF_6CD"},
	{0x0180, "SC0_H_COEFF_6EF"},
	{0x0184, "SC0_H_COEFF_6GH"},
	{0x0188, "SC0_H_COEFF_7AB"},
	{0x018C, "SC0_H_COEFF_7CD"},
	{0x0190, "SC0_H_COEFF_7EF"},
	{0x0194, "SC0_H_COEFF_7GH"},
	{0x0198, "SC0_H_COEFF_8AB"},
	{0x019C, "SC0_H_COEFF_8CD"},
	{0x01A0, "SC0_H_COEFF_8EF"},
	{0x01A4, "SC0_H_COEFF_8GH"},
	{0x01B0, "SC1_CTRL"},
	{0x01B4, "SC1_SRC_POS"},
	{0x01B8, "SC1_SRC_SIZE"},
	{0x01BC, "SC1_DST_SIZE"},
	{0x01C0, "SC1_H_RATIO"},
	{0x01C4, "SC1_V_RATIO"},
	{0x01C8, "SC1_H_INIT_PHASE_OFFSET"},
	{0x01CC, "SC1_V_INIT_PHASE_OFFSET"},
	{0x01D0, "SC1_ROUND_MODE"},
	/* {0x01D4, "SC1_COEFF_CTRL"}, */
	{0x01E0, "SC1_V_COEFF_0AB"},
	{0x01E4, "SC1_V_COEFF_0CD"},
	{0x01E8, "SC1_V_COEFF_1AB"},
	{0x01EC, "SC1_V_COEFF_1CD"},
	{0x01F0, "SC1_V_COEFF_2AB"},
	{0x01F4, "SC1_V_COEFF_2CD"},
	{0x01F8, "SC1_V_COEFF_3AB"},
	{0x01FC, "SC1_V_COEFF_3CD"},
	{0x0200, "SC1_V_COEFF_4AB"},
	{0x0204, "SC1_V_COEFF_4CD"},
	{0x0208, "SC1_V_COEFF_5AB"},
	{0x020C, "SC1_V_COEFF_5CD"},
	{0x0210, "SC1_V_COEFF_6AB"},
	{0x0214, "SC1_V_COEFF_6CD"},
	{0x0218, "SC1_V_COEFF_7AB"},
	{0x021C, "SC1_V_COEFF_7CD"},
	{0x0220, "SC1_V_COEFF_8AB"},
	{0x0224, "SC1_V_COEFF_8CD"},
	{0x0228, "SC1_H_COEFF_0AB"},
	{0x022C, "SC1_H_COEFF_0CD"},
	{0x0230, "SC1_H_COEFF_0EF"},
	{0x0234, "SC1_H_COEFF_0GH"},
	{0x0238, "SC1_H_COEFF_1AB"},
	{0x023C, "SC1_H_COEFF_1CD"},
	{0x0240, "SC1_H_COEFF_1EF"},
	{0x0244, "SC1_H_COEFF_1GH"},
	{0x0248, "SC1_H_COEFF_2AB"},
	{0x024C, "SC1_H_COEFF_2CD"},
	{0x0250, "SC1_H_COEFF_2EF"},
	{0x0254, "SC1_H_COEFF_2GH"},
	{0x0258, "SC1_H_COEFF_3AB"},
	{0x025C, "SC1_H_COEFF_3CD"},
	{0x0260, "SC1_H_COEFF_3EF"},
	{0x0264, "SC1_H_COEFF_3GH"},
	{0x0268, "SC1_H_COEFF_4AB"},
	{0x026C, "SC1_H_COEFF_4CD"},
	{0x0270, "SC1_H_COEFF_4EF"},
	{0x0274, "SC1_H_COEFF_4GH"},
	{0x0278, "SC1_H_COEFF_5AB"},
	{0x027C, "SC1_H_COEFF_5CD"},
	{0x0280, "SC1_H_COEFF_5EF"},
	{0x0284, "SC1_H_COEFF_5GH"},
	{0x0288, "SC1_H_COEFF_6AB"},
	{0x028C, "SC1_H_COEFF_6CD"},
	{0x0290, "SC1_H_COEFF_6EF"},
	{0x0294, "SC1_H_COEFF_6GH"},
	{0x0298, "SC1_H_COEFF_7AB"},
	{0x029C, "SC1_H_COEFF_7CD"},
	{0x02A0, "SC1_H_COEFF_7EF"},
	{0x02A4, "SC1_H_COEFF_7GH"},
	{0x02A8, "SC1_H_COEFF_8AB"},
	{0x02AC, "SC1_H_COEFF_8CD"},
	{0x02B0, "SC1_H_COEFF_8EF"},
	{0x02B4, "SC1_H_COEFF_8GH"},
	{0x02C0, "SC2_CTRL"},
	{0x02C4, "SC2_SRC_POS"},
	{0x02C8, "SC2_SRC_SIZE"},
	{0x02CC, "SC2_DST_SIZE"},
	{0x02D0, "SC2_H_RATIO"},
	{0x02D4, "SC2_V_RATIO"},
	{0x02D8, "SC2_H_INIT_PHASE_OFFSET"},
	{0x02DC, "SC2_V_INIT_PHASE_OFFSET"},
	{0x02E0, "SC2_ROUND_MODE"},
	/* {0x02E4, "SC2_COEFF_CTRL"}, */
	{0x02F0, "SC2_V_COEFF_0AB"},
	{0x02F4, "SC2_V_COEFF_0CD"},
	{0x02F8, "SC2_V_COEFF_1AB"},
	{0x02FC, "SC2_V_COEFF_1CD"},
	{0x0300, "SC2_V_COEFF_2AB"},
	{0x0304, "SC2_V_COEFF_2CD"},
	{0x0308, "SC2_V_COEFF_3AB"},
	{0x030C, "SC2_V_COEFF_3CD"},
	{0x0310, "SC2_V_COEFF_4AB"},
	{0x0314, "SC2_V_COEFF_4CD"},
	{0x0318, "SC2_V_COEFF_5AB"},
	{0x031C, "SC2_V_COEFF_5CD"},
	{0x0320, "SC2_V_COEFF_6AB"},
	{0x0324, "SC2_V_COEFF_6CD"},
	{0x0328, "SC2_V_COEFF_7AB"},
	{0x032C, "SC2_V_COEFF_7CD"},
	{0x0330, "SC2_V_COEFF_8AB"},
	{0x0334, "SC2_V_COEFF_8CD"},
	{0x0338, "SC2_H_COEFF_0AB"},
	{0x033C, "SC2_H_COEFF_0CD"},
	{0x0340, "SC2_H_COEFF_0EF"},
	{0x0344, "SC2_H_COEFF_0GH"},
	{0x0348, "SC2_H_COEFF_1AB"},
	{0x034C, "SC2_H_COEFF_1CD"},
	{0x0350, "SC2_H_COEFF_1EF"},
	{0x0354, "SC2_H_COEFF_1GH"},
	{0x0358, "SC2_H_COEFF_2AB"},
	{0x035C, "SC2_H_COEFF_2CD"},
	{0x0360, "SC2_H_COEFF_2EF"},
	{0x0364, "SC2_H_COEFF_2GH"},
	{0x0368, "SC2_H_COEFF_3AB"},
	{0x036C, "SC2_H_COEFF_3CD"},
	{0x0370, "SC2_H_COEFF_3EF"},
	{0x0374, "SC2_H_COEFF_3GH"},
	{0x0378, "SC2_H_COEFF_4AB"},
	{0x037C, "SC2_H_COEFF_4CD"},
	{0x0380, "SC2_H_COEFF_4EF"},
	{0x0384, "SC2_H_COEFF_4GH"},
	{0x0388, "SC2_H_COEFF_5AB"},
	{0x038C, "SC2_H_COEFF_5CD"},
	{0x0390, "SC2_H_COEFF_5EF"},
	{0x0394, "SC2_H_COEFF_5GH"},
	{0x0398, "SC2_H_COEFF_6AB"},
	{0x039C, "SC2_H_COEFF_6CD"},
	{0x03A0, "SC2_H_COEFF_6EF"},
	{0x03A4, "SC2_H_COEFF_6GH"},
	{0x03A8, "SC2_H_COEFF_7AB"},
	{0x03AC, "SC2_H_COEFF_7CD"},
	{0x03B0, "SC2_H_COEFF_7EF"},
	{0x03B4, "SC2_H_COEFF_7GH"},
	{0x03B8, "SC2_H_COEFF_8AB"},
	{0x03BC, "SC2_H_COEFF_8CD"},
	{0x03C0, "SC2_H_COEFF_8EF"},
	{0x03C4, "SC2_H_COEFF_8GH"},
	{0x03E0, "SC3_CTRL"},
	{0x03E4, "SC3_SRC_POS"},
	{0x03E8, "SC3_SRC_SIZE"},
	{0x03EC, "SC3_DST_SIZE"},
	{0x03F0, "SC3_H_RATIO"},
	{0x03F4, "SC3_V_RATIO"},
	{0x03F8, "SC3_H_INIT_PHASE_OFFSET"},
	{0x03FC, "SC3_V_INIT_PHASE_OFFSET"},
	{0x0400, "SC3_ROUND_MODE"},
	{0x0410, "SC3_V_COEFF_0AB"},
	{0x0414, "SC3_V_COEFF_0CD"},
	{0x0418, "SC3_V_COEFF_1AB"},
	{0x041C, "SC3_V_COEFF_1CD"},
	{0x0420, "SC3_V_COEFF_2AB"},
	{0x0424, "SC3_V_COEFF_2CD"},
	{0x0428, "SC3_V_COEFF_3AB"},
	{0x042C, "SC3_V_COEFF_3CD"},
	{0x0430, "SC3_V_COEFF_4AB"},
	{0x0434, "SC3_V_COEFF_4CD"},
	{0x0438, "SC3_V_COEFF_5AB"},
	{0x043C, "SC3_V_COEFF_5CD"},
	{0x0440, "SC3_V_COEFF_6AB"},
	{0x0444, "SC3_V_COEFF_6CD"},
	{0x0448, "SC3_V_COEFF_7AB"},
	{0x044C, "SC3_V_COEFF_7CD"},
	{0x0450, "SC3_V_COEFF_8AB"},
	{0x0454, "SC3_V_COEFF_8CD"},
	{0x0458, "SC3_H_COEFF_0AB"},
	{0x045C, "SC3_H_COEFF_0CD"},
	{0x0460, "SC3_H_COEFF_0EF"},
	{0x0464, "SC3_H_COEFF_0GH"},
	{0x0468, "SC3_H_COEFF_1AB"},
	{0x046C, "SC3_H_COEFF_1CD"},
	{0x0470, "SC3_H_COEFF_1EF"},
	{0x0474, "SC3_H_COEFF_1GH"},
	{0x0478, "SC3_H_COEFF_2AB"},
	{0x047C, "SC3_H_COEFF_2CD"},
	{0x0480, "SC3_H_COEFF_2EF"},
	{0x0484, "SC3_H_COEFF_2GH"},
	{0x0488, "SC3_H_COEFF_3AB"},
	{0x048C, "SC3_H_COEFF_3CD"},
	{0x0490, "SC3_H_COEFF_3EF"},
	{0x0494, "SC3_H_COEFF_3GH"},
	{0x0498, "SC3_H_COEFF_4AB"},
	{0x049C, "SC3_H_COEFF_4CD"},
	{0x04A0, "SC3_H_COEFF_4EF"},
	{0x04A4, "SC3_H_COEFF_4GH"},
	{0x04A8, "SC3_H_COEFF_5AB"},
	{0x04AC, "SC3_H_COEFF_5CD"},
	{0x04B0, "SC3_H_COEFF_5EF"},
	{0x04B4, "SC3_H_COEFF_5GH"},
	{0x04B8, "SC3_H_COEFF_6AB"},
	{0x04BC, "SC3_H_COEFF_6CD"},
	{0x04C0, "SC3_H_COEFF_6EF"},
	{0x04C4, "SC3_H_COEFF_6GH"},
	{0x04C8, "SC3_H_COEFF_7AB"},
	{0x04CC, "SC3_H_COEFF_7CD"},
	{0x04D0, "SC3_H_COEFF_7EF"},
	{0x04D4, "SC3_H_COEFF_7GH"},
	{0x04D8, "SC3_H_COEFF_8AB"},
	{0x04DC, "SC3_H_COEFF_8CD"},
	{0x04E0, "SC3_H_COEFF_8EF"},
	{0x04E4, "SC3_H_COEFF_8GH"},
	{0x04F0, "SC4_CTRL"},
	{0x04F4, "SC4_SRC_POS"},
	{0x04F8, "SC4_SRC_SIZE"},
	{0x04FC, "SC4_DST_SIZE"},
	{0x0500, "SC4_H_RATIO"},
	{0x0504, "SC4_V_RATIO"},
	{0x0508, "SC4_H_INIT_PHASE_OFFSET"},
	{0x050C, "SC4_V_INIT_PHASE_OFFSET"},
	{0x0510, "SC4_ROUND_MODE"},
	{0x0520, "SC4_V_COEFF_0AB"},
	{0x0524, "SC4_V_COEFF_0CD"},
	{0x0528, "SC4_V_COEFF_1AB"},
	{0x052C, "SC4_V_COEFF_1CD"},
	{0x0530, "SC4_V_COEFF_2AB"},
	{0x0534, "SC4_V_COEFF_2CD"},
	{0x0538, "SC4_V_COEFF_3AB"},
	{0x053C, "SC4_V_COEFF_3CD"},
	{0x0540, "SC4_V_COEFF_4AB"},
	{0x0544, "SC4_V_COEFF_4CD"},
	{0x0548, "SC4_V_COEFF_5AB"},
	{0x054C, "SC4_V_COEFF_5CD"},
	{0x0550, "SC4_V_COEFF_6AB"},
	{0x0554, "SC4_V_COEFF_6CD"},
	{0x0558, "SC4_V_COEFF_7AB"},
	{0x055C, "SC4_V_COEFF_7CD"},
	{0x0560, "SC4_V_COEFF_8AB"},
	{0x0564, "SC4_V_COEFF_8CD"},
	{0x0568, "SC4_H_COEFF_0AB"},
	{0x056C, "SC4_H_COEFF_0CD"},
	{0x0570, "SC4_H_COEFF_0EF"},
	{0x0574, "SC4_H_COEFF_0GH"},
	{0x0578, "SC4_H_COEFF_1AB"},
	{0x057C, "SC4_H_COEFF_1CD"},
	{0x0580, "SC4_H_COEFF_1EF"},
	{0x0584, "SC4_H_COEFF_1GH"},
	{0x0588, "SC4_H_COEFF_2AB"},
	{0x058C, "SC4_H_COEFF_2CD"},
	{0x0590, "SC4_H_COEFF_2EF"},
	{0x0594, "SC4_H_COEFF_2GH"},
	{0x0598, "SC4_H_COEFF_3AB"},
	{0x059C, "SC4_H_COEFF_3CD"},
	{0x05A0, "SC4_H_COEFF_3EF"},
	{0x05A4, "SC4_H_COEFF_3GH"},
	{0x05A8, "SC4_H_COEFF_4AB"},
	{0x05AC, "SC4_H_COEFF_4CD"},
	{0x05B0, "SC4_H_COEFF_4EF"},
	{0x05B4, "SC4_H_COEFF_4GH"},
	{0x05B8, "SC4_H_COEFF_5AB"},
	{0x05BC, "SC4_H_COEFF_5CD"},
	{0x05C0, "SC4_H_COEFF_5EF"},
	{0x05C4, "SC4_H_COEFF_5GH"},
	{0x05C8, "SC4_H_COEFF_6AB"},
	{0x05CC, "SC4_H_COEFF_6CD"},
	{0x05D0, "SC4_H_COEFF_6EF"},
	{0x05D4, "SC4_H_COEFF_6GH"},
	{0x05D8, "SC4_H_COEFF_7AB"},
	{0x05DC, "SC4_H_COEFF_7CD"},
	{0x05E0, "SC4_H_COEFF_7EF"},
	{0x05E4, "SC4_H_COEFF_7GH"},
	{0x05E8, "SC4_H_COEFF_8AB"},
	{0x05EC, "SC4_H_COEFF_8CD"},
	{0x05F0, "SC4_H_COEFF_8EF"},
	{0x05F4, "SC4_H_COEFF_8GH"},
	{0x0600, "PC0_POST_SC_CTRL"},
	{0x0604, "PC0_POST_SC_IMG_SIZE"},
	{0x0608, "PC0_POST_SC_DST_SIZE"},
	{0x060C, "PC0_POST_SC_H_RATIO"},
	{0x0610, "PC0_POST_SC_V_RATIO"},
	{0x0620, "PC0_CONV420_CTRL"},
	{0x0624, "PC0_CONV420_WEIGHT"},
	{0x0630, "PC0_BCHS_CTRL"},
	{0x0634, "PC0_BCHS_BC"},
	{0x0638, "PC0_BCHS_HS1"},
	{0x063C, "PC0_BCHS_HS2"},
	/* {0x0640, "PC0_OTF_CTRL"}, */
	{0x0640, "PC0_BCHS_CLAMP"},
	{0x0644, "PC0_OTF_OUT_CTRL"},
	{0x0648, "PC0_DMA_OUT_CTRL"},
	{0x0650, "PC1_POST_SC_CTRL"},
	{0x0654, "PC1_POST_SC_IMG_SIZE"},
	{0x0658, "PC1_POST_SC_DST_SIZE"},
	{0x065C, "PC1_POST_SC_H_RATIO"},
	{0x0660, "PC1_POST_SC_V_RATIO"},
	{0x0670, "PC1_CONV420_CTRL"},
	{0x0674, "PC1_CONV420_WEIGHT"},
	{0x0680, "PC1_BCHS_CTRL"},
	{0x0684, "PC1_BCHS_BC"},
	{0x0688, "PC1_BCHS_HS1"},
	{0x068C, "PC1_BCHS_HS2"},
	{0x0690, "PC1_BCHS_CLAMP"},
	{0x0694, "PC1_OTF_OUT_CTRL"},
	{0x0698, "PC1_DMA_OUT_CTRL"},
	{0x06A0, "PC2_POST_SC_CTRL"},
	{0x06A4, "PC2_POST_SC_IMG_SIZE"},
	{0x06A8, "PC2_POST_SC_DST_SIZE"},
	{0x06AC, "PC2_POST_SC_H_RATIO"},
	{0x06B0, "PC2_POST_SC_V_RATIO"},
	{0x06C0, "PC2_CONV420_CTRL"},
	{0x06C4, "PC2_CONV420_WEIGHT"},
	{0x06D0, "PC2_BCHS_CTRL"},
	{0x06D4, "PC2_BCHS_BC"},
	{0x06D8, "PC2_BCHS_HS1"},
	{0x06DC, "PC2_BCHS_HS2"},
	{0x06E0, "PC2_BCHS_CLAMP"},
	{0x06E4, "PC2_OTF_OUT_CTRL"},
	{0x06E8, "PC2_DMA_OUT_CTRL"},
	{0x06F0, "PC3_POST_SC_CTRL"},
	{0x06F4, "PC3_POST_SC_IMG_SIZE"},
	{0x06F8, "PC3_POST_SC_DST_SIZE"},
	{0x06FC, "PC3_POST_SC_H_RATIO"},
	{0x0700, "PC3_POST_SC_V_RATIO"},
	{0x0710, "PC3_CONV420_CTRL"},
	{0x0714, "PC3_CONV420_WEIGHT"},
	{0x0720, "PC3_BCHS_CTRL"},
	{0x0724, "PC3_BCHS_BC"},
	{0x0728, "PC3_BCHS_HS1"},
	{0x072C, "PC3_BCHS_HS2"},
	{0x0730, "PC3_BCHS_CLAMP"},
	{0x0734, "PC3_OTF_OUT_CTRL"},
	{0x0738, "PC3_DMA_OUT_CTRL"},
	{0x0740, "PC4_POST_SC_CTRL"},
	{0x0744, "PC4_POST_SC_IMG_SIZE"},
	{0x0748, "PC4_POST_SC_DST_SIZE"},
	{0x074C, "PC4_POST_SC_H_RATIO"},
	{0x0750, "PC4_POST_SC_V_RATIO"},
	{0x0760, "PC4_CONV420_CTRL"},
	{0x0764, "PC4_CONV420_WEIGHT"},
	{0x0770, "PC4_BCHS_CTRL"},
	{0x0774, "PC4_BCHS_BC"},
	{0x0778, "PC4_BCHS_HS1"},
	{0x077C, "PC4_BCHS_HS2"},
	{0x0780, "PC4_BCHS_CLAMP"},
	{0x0784, "PC4_OTF_OUT_CTRL"},
	{0x0788, "PC4_DMA_OUT_CTRL"},
	{0x0790, "SCALER_RESET_STATUS"},
	{0x0794, "SCALER_RUNNING_STATUS"},
	{0x0798, "DMA_RUNNING_STATUS"},
	{0x079C, "SCALER_INPUT_STATUS_0"},
	{0x07A0, "SCALER_INPUT_STATUS_1"},
	{0x07A4, "SCALER_INTERRUPT_MASK_0"},
	{0x07A8, "SCALER_INTERRUPT_MASK_1"},
	{0x07AC, "SCALER_INTERRUPT_0"},
	{0x07B0, "SCALER_INTERRUPT_1"},
	{0x07B4, "SCALER_VERSION"},
	{0x0800, "HWFC_SWRESET"},
	{0x0804, "HWFC_MODE"},
	{0x0808, "HWFC_REGION_IDX_BIN"},
	{0x080C, "HWFC_REGION_IDX_GRAY"},
	{0x0810, "HWFC_CURR_REGION"},
	{0x0814, "HWFC_CONFIG_IMAGE_A"},
	{0x0818, "HWFC_TOTAL_IMAGE_BYTE0_A"},
	{0x081C, "HWFC_TOTAL_WIDTH_BYTE0_A"},
	{0x0820, "HWFC_TOTAL_IMAGE_BYTE1_A"},
	{0x0824, "HWFC_TOTAL_WIDTH_BYTE1_A"},
	{0x0828, "HWFC_TOTAL_IMAGE_BYTE2_A"},
	{0x082C, "HWFC_TOTAL_WIDTH_BYTE2_A"},
	{0x0830, "HWFC_CONFIG_IMAGE_B"},
	{0x0834, "HWFC_TOTAL_IMAGE_BYTE0_B"},
	{0x0838, "HWFC_TOTAL_WIDTH_BYTE0_B"},
	{0x083C, "HWFC_TOTAL_IMAGE_BYTE1_B"},
	{0x0840, "HWFC_TOTAL_WIDTH_BYTE1_B"},
	{0x0844, "HWFC_TOTAL_IMAGE_BYTE2_B"},
	{0x0848, "HWFC_TOTAL_WIDTH_BYTE2_B"},
	{0x084C, "HWFC_FRAME_START_SELECT"},
	{0x0850, "HWFC_INDEX_RESET"},
	{0x0854, "HWFC_ENABLE_AUTO_CLEAR"},
	{0x0904, "UVSP_BINNING"},
	{0x0908, "UVSP_RADIALCTR"},
	{0x090C, "UVSP_RADIALRNDPOWER"},
	{0x0910, "UVSP_RADIALALPHA"},
	{0x0914, "UVSP_RADIALBIA"},
	{0x0918, "UVSP_RADIALBIB"},
	{0x091C, "UVSP_BIQUADCTR"},
	{0x0920, "UVSP_RADIALREFINE"},
	{0x0924, "UVSP_PEDESTAL"},
	{0x0928, "UVSP_OFFSET"},
	{0x092C, "UVSP_DESATU"},
	{0x0930, "UVSP_DESATV"},
	{0x0934, "UVSP_DESATY"},
	{0x0938, "UVSP_DESATCTR"},
	{0x0A00, "SSB_RUNNING_STATUS"},
	{0x0A04, "SSB_INTERRUPT"},
	{0x0A08, "SSB_INTERRUPT_EN"},
	{0x0A20, "SSB_READ_SHADOW_REG_CTRL"},
	{0x0A24, "SSB_RESET_CTRL"},
	{0x0A28, "SSB_RESET_STATUS"},
	{0x0A40, "SSB_IMG_WIDTH"},
	{0x0A44, "SSB_IMG_HEIGHT"},
	{0x0A60, "SSB_CROP_EN"},
	{0x0A64, "SSB_CROP_START_X"},
	{0x0A68, "SSB_CROP_START_Y"},
	{0x0A6C, "SSB_CROP_SIZE_X"},
	{0x0A70, "SSB_CROP_SIZE_Y"},
	{0x1000, "RDMA_DATA_FORMAT"},
	{0x1004, "WDMA0_DATA_FORMAT"},
	{0x1008, "WDMA1_DATA_FORMAT"},
	{0x100C, "WDMA2_DATA_FORMAT"},
	{0x1010, "WDMA3_DATA_FORMAT"},
	{0x1014, "WDMA4_DATA_FORMAT"},
	{0x1018, "RDMA_SWAP_TABLE"},
	{0x101C, "WDMA0_SWAP_TABLE"},
	{0x1020, "WDMA1_SWAP_TABLE"},
	{0x1024, "WDMA2_SWAP_TABLE"},
	{0x1028, "WDMA3_SWAP_TABLE"},
	{0x102C, "WDMA4_SWAP_TABLE"},
	/* {0x1030, "RDMA_QOS_LUT0"},
	{0x1034, "RDMA_QOS_LUT1"},
	{0x1038, "WDMA_QOS_LUT0"},
	{0x103C, "WDMA_QOS_LUT1"}, */
	{0x1040, "WDMA0_CRC_RESULT0"},
	{0x1044, "WDMA0_CRC_RESULT1"},
	{0x1048, "WDMA0_CRC_RESULT2"},
	{0x104C, "WDMA1_CRC_RESULT0"},
	{0x1050, "WDMA1_CRC_RESULT1"},
	{0x1054, "WDMA1_CRC_RESULT2"},
	{0x1058, "WDMA2_CRC_RESULT0"},
	{0x105C, "WDMA2_CRC_RESULT1"},
	{0x1060, "WDMA2_CRC_RESULT2"},
	{0x1064, "WDMA3_CRC_RESULT0"},
	{0x1068, "WDMA3_CRC_RESULT1"},
	{0x106C, "WDMA3_CRC_RESULT2"},
	{0x1070, "WDMA4_CRC_RESULT0"},
	{0x1074, "WDMA4_CRC_RESULT1"},
	{0x1078, "WDMA4_CRC_RESULT2"},
	{0x107C, "WDMA0_FLIP_CONTROL"},
	{0x1080, "WDMA1_FLIP_CONTROL"},
	{0x1084, "WDMA2_FLIP_CONTROL"},
	{0x1088, "WDMA3_FLIP_CONTROL"},
	{0x108C, "WDMA4_FLIP_CONTROL"},
	{0x1090, "DMA_CLK_GATE_DISABLE"},
	/* {0x1094, "WDMA0_CLK_EN"},
	{0x1098, "WDMA1_CLK_EN"},
	{0x109C, "WDMA2_CLK_EN"},
	{0x10A0, "WDMA3_CLK_EN"},
	{0x10A4, "WDMA4_CLK_EN"},
	{0x10A8, "RDMA_CLK_GATE_DISABLE"},
	{0x10AC, "WDMA0_CLK_GATE_DISABLE"},
	{0x10B0, "WDMA1_CLK_GATE_DISABLE"},
	{0x10B4, "WDMA2_CLK_GATE_DISABLE"},
	{0x10B8, "WDMA3_CLK_GATE_DISABLE"},
	{0x10BC, "WDMA4_CLK_GATE_DISABLE"}, */
	{0x1200, "RDMA_BASE_ADDR01"},
	{0x1204, "RDMA_BASE_ADDR02"},
	{0x1208, "RDMA_BASE_ADDR03"},
	{0x120C, "RDMA_BASE_ADDR04"},
	{0x1210, "RDMA_BASE_ADDR05"},
	{0x1214, "RDMA_BASE_ADDR06"},
	{0x1218, "RDMA_BASE_ADDR07"},
	{0x121C, "RDMA_BASE_ADDR08"},
	{0x1220, "RDMA_BASE_ADDR11"},
	{0x1224, "RDMA_BASE_ADDR12"},
	{0x1228, "RDMA_BASE_ADDR13"},
	{0x122C, "RDMA_BASE_ADDR14"},
	{0x1230, "RDMA_BASE_ADDR15"},
	{0x1234, "RDMA_BASE_ADDR16"},
	{0x1238, "RDMA_BASE_ADDR17"},
	{0x123C, "RDMA_BASE_ADDR18"},
	{0x1240, "RDMA_BASE_ADDR21"},
	{0x1244, "RDMA_BASE_ADDR22"},
	{0x1248, "RDMA_BASE_ADDR23"},
	{0x124C, "RDMA_BASE_ADDR24"},
	{0x1250, "RDMA_BASE_ADDR25"},
	{0x1254, "RDMA_BASE_ADDR26"},
	{0x1258, "RDMA_BASE_ADDR27"},
	{0x125C, "RDMA_BASE_ADDR28"},
	{0x1260, "RDMA_WIDTH"},
	{0x1264, "RDMA_HEIGHT"},
	{0x1268, "RDMA_STRIDE"},
	{0x126C, "RDMA_BASE_ADDR_EN"},
	{0x1270, "RDMA_FRAME_CNT"},
	{0x1300, "WDMA0_BASE_ADDR01"},
	{0x1304, "WDMA0_BASE_ADDR02"},
	{0x1308, "WDMA0_BASE_ADDR03"},
	{0x130C, "WDMA0_BASE_ADDR04"},
	{0x1310, "WDMA0_BASE_ADDR05"},
	{0x1314, "WDMA0_BASE_ADDR06"},
	{0x1318, "WDMA0_BASE_ADDR07"},
	{0x131C, "WDMA0_BASE_ADDR08"},
	{0x1320, "WDMA0_BASE_ADDR11"},
	{0x1324, "WDMA0_BASE_ADDR12"},
	{0x1328, "WDMA0_BASE_ADDR13"},
	{0x132C, "WDMA0_BASE_ADDR14"},
	{0x1330, "WDMA0_BASE_ADDR15"},
	{0x1334, "WDMA0_BASE_ADDR16"},
	{0x1338, "WDMA0_BASE_ADDR17"},
	{0x133C, "WDMA0_BASE_ADDR18"},
	{0x1340, "WDMA0_BASE_ADDR21"},
	{0x1344, "WDMA0_BASE_ADDR22"},
	{0x1348, "WDMA0_BASE_ADDR23"},
	{0x134C, "WDMA0_BASE_ADDR24"},
	{0x1350, "WDMA0_BASE_ADDR25"},
	{0x1354, "WDMA0_BASE_ADDR26"},
	{0x1358, "WDMA0_BASE_ADDR27"},
	{0x135C, "WDMA0_BASE_ADDR28"},
	{0x1360, "WDMA0_WIDTH"},
	{0x1364, "WDMA0_HEIGHT"},
	{0x1368, "WDMA0_STRIDE"},
	{0x136C, "WDMA0_BASE_ADDR_EN"},
	{0x1370, "WDMA0_FRAME_CNT"},
	{0x1400, "WDMA1_BASE_ADDR01"},
	{0x1404, "WDMA1_BASE_ADDR02"},
	{0x1408, "WDMA1_BASE_ADDR03"},
	{0x140C, "WDMA1_BASE_ADDR04"},
	{0x1410, "WDMA1_BASE_ADDR05"},
	{0x1414, "WDMA1_BASE_ADDR06"},
	{0x1418, "WDMA1_BASE_ADDR07"},
	{0x141C, "WDMA1_BASE_ADDR08"},
	{0x1420, "WDMA1_BASE_ADDR11"},
	{0x1424, "WDMA1_BASE_ADDR12"},
	{0x1428, "WDMA1_BASE_ADDR13"},
	{0x142C, "WDMA1_BASE_ADDR14"},
	{0x1430, "WDMA1_BASE_ADDR15"},
	{0x1434, "WDMA1_BASE_ADDR16"},
	{0x1438, "WDMA1_BASE_ADDR17"},
	{0x143C, "WDMA1_BASE_ADDR18"},
	{0x1440, "WDMA1_BASE_ADDR21"},
	{0x1444, "WDMA1_BASE_ADDR22"},
	{0x1448, "WDMA1_BASE_ADDR23"},
	{0x144C, "WDMA1_BASE_ADDR24"},
	{0x1450, "WDMA1_BASE_ADDR25"},
	{0x1454, "WDMA1_BASE_ADDR26"},
	{0x1458, "WDMA1_BASE_ADDR27"},
	{0x145C, "WDMA1_BASE_ADDR28"},
	{0x1460, "WDMA1_WIDTH"},
	{0x1464, "WDMA1_HEIGHT"},
	{0x1468, "WDMA1_STRIDE"},
	{0x146C, "WDMA1_BASE_ADDR_EN"},
	{0x1470, "WDMA1_FRAME_CNT"},
	{0x1500, "WDMA2_BASE_ADDR01"},
	{0x1504, "WDMA2_BASE_ADDR02"},
	{0x1508, "WDMA2_BASE_ADDR03"},
	{0x150C, "WDMA2_BASE_ADDR04"},
	{0x1510, "WDMA2_BASE_ADDR05"},
	{0x1514, "WDMA2_BASE_ADDR06"},
	{0x1518, "WDMA2_BASE_ADDR07"},
	{0x151C, "WDMA2_BASE_ADDR08"},
	{0x1520, "WDMA2_BASE_ADDR11"},
	{0x1524, "WDMA2_BASE_ADDR12"},
	{0x1528, "WDMA2_BASE_ADDR13"},
	{0x152C, "WDMA2_BASE_ADDR14"},
	{0x1530, "WDMA2_BASE_ADDR15"},
	{0x1534, "WDMA2_BASE_ADDR16"},
	{0x1538, "WDMA2_BASE_ADDR17"},
	{0x153C, "WDMA2_BASE_ADDR18"},
	{0x1540, "WDMA2_BASE_ADDR21"},
	{0x1544, "WDMA2_BASE_ADDR22"},
	{0x1548, "WDMA2_BASE_ADDR23"},
	{0x154C, "WDMA2_BASE_ADDR24"},
	{0x1550, "WDMA2_BASE_ADDR25"},
	{0x1554, "WDMA2_BASE_ADDR26"},
	{0x1558, "WDMA2_BASE_ADDR27"},
	{0x155C, "WDMA2_BASE_ADDR28"},
	{0x1560, "WDMA2_WIDTH"},
	{0x1564, "WDMA2_HEIGHT"},
	{0x1568, "WDMA2_STRIDE"},
	{0x156C, "WDMA2_BASE_ADDR_EN"},
	{0x1570, "WDMA2_FRAME_CNT"},
	{0x1600, "WDMA3_BASE_ADDR01"},
	{0x1604, "WDMA3_BASE_ADDR02"},
	{0x1608, "WDMA3_BASE_ADDR03"},
	{0x160C, "WDMA3_BASE_ADDR04"},
	{0x1610, "WDMA3_BASE_ADDR05"},
	{0x1614, "WDMA3_BASE_ADDR06"},
	{0x1618, "WDMA3_BASE_ADDR07"},
	{0x161C, "WDMA3_BASE_ADDR08"},
	{0x1620, "WDMA3_BASE_ADDR11"},
	{0x1624, "WDMA3_BASE_ADDR12"},
	{0x1628, "WDMA3_BASE_ADDR13"},
	{0x162C, "WDMA3_BASE_ADDR14"},
	{0x1630, "WDMA3_BASE_ADDR15"},
	{0x1634, "WDMA3_BASE_ADDR16"},
	{0x1638, "WDMA3_BASE_ADDR17"},
	{0x163C, "WDMA3_BASE_ADDR18"},
	{0x1640, "WDMA3_BASE_ADDR21"},
	{0x1644, "WDMA3_BASE_ADDR22"},
	{0x1648, "WDMA3_BASE_ADDR23"},
	{0x164C, "WDMA3_BASE_ADDR24"},
	{0x1650, "WDMA3_BASE_ADDR25"},
	{0x1654, "WDMA3_BASE_ADDR26"},
	{0x1658, "WDMA3_BASE_ADDR27"},
	{0x165C, "WDMA3_BASE_ADDR28"},
	{0x1660, "WDMA3_WIDTH"},
	{0x1664, "WDMA3_HEIGHT"},
	{0x1668, "WDMA3_STRIDE"},
	{0x166C, "WDMA3_BASE_ADDR_EN"},
	{0x1670, "WDMA3_FRAME_CNT"},
	{0x1700, "WDMA4_BASE_ADDR01"},
	{0x1704, "WDMA4_BASE_ADDR02"},
	{0x1708, "WDMA4_BASE_ADDR03"},
	{0x170C, "WDMA4_BASE_ADDR04"},
	{0x1710, "WDMA4_BASE_ADDR05"},
	{0x1714, "WDMA4_BASE_ADDR06"},
	{0x1718, "WDMA4_BASE_ADDR07"},
	{0x171C, "WDMA4_BASE_ADDR08"},
	{0x1720, "WDMA4_BASE_ADDR11"},
	{0x1724, "WDMA4_BASE_ADDR12"},
	{0x1728, "WDMA4_BASE_ADDR13"},
	{0x172C, "WDMA4_BASE_ADDR14"},
	{0x1730, "WDMA4_BASE_ADDR15"},
	{0x1734, "WDMA4_BASE_ADDR16"},
	{0x1738, "WDMA4_BASE_ADDR17"},
	{0x173C, "WDMA4_BASE_ADDR18"},
	{0x1740, "WDMA4_BASE_ADDR21"},
	{0x1744, "WDMA4_BASE_ADDR22"},
	{0x1748, "WDMA4_BASE_ADDR23"},
	{0x174C, "WDMA4_BASE_ADDR24"},
	{0x1750, "WDMA4_BASE_ADDR25"},
	{0x1754, "WDMA4_BASE_ADDR26"},
	{0x1758, "WDMA4_BASE_ADDR27"},
	{0x175C, "WDMA4_BASE_ADDR28"},
	{0x1760, "WDMA4_WIDTH"},
	{0x1764, "WDMA4_HEIGHT"},
	{0x1768, "WDMA4_STRIDE"},
	{0x176C, "WDMA4_BASE_ADDR_EN"},
	{0x1770, "WDMA4_FRAME_CNT"},
	{0x1800, "WDMA_PRI_0"},
	{0x1804, "WDMA_PRI_1"},
	{0x1808, "WDMA_PRI_2"},
	{0x180C, "WDMA_AXI_PRI"},
	{0x1810, "WDMA_SRAM_BASE_0"},
	{0x1814, "WDMA_SRAM_BASE_1"}
};

enum fimc_is_mcsc_reg_field {
	MCSC_F_SCALER_ENABLE_0,
	MCSC_F_SCALER_ENABLE_1,
	MCSC_F_SHADOWING_DISABLE_0,
	MCSC_F_SW_TRIGGER_0,
	MCSC_F_SHADOWING_DISABLE_1,
	MCSC_F_SW_TRIGGER_1,
	MCSC_F_APB_CLK_GATE_DISABLE,
	MCSC_F_READ_SHADOW_REG,
	MCSC_F_STOP_REQ_POST_EN_CTRL_TYPE_0,
	MCSC_F_STOP_REQ_POST_EN_CTRL_TYPE_1,
	MCSC_F_SW_RESET_GLOBAL,
	MCSC_F_PARTIAL_RESET_ENABLE_0,
	MCSC_F_SW_RESET_0,
	MCSC_F_PARTIAL_RESET_ENABLE_1,
	MCSC_F_SW_RESET_1,
	MCSC_F_LB_CTRL_0_CLK_GATE_DISABLE,
	/* MCSC_F_DITHER_0_CLK_GATE_DISABLE, */
	MCSC_F_CORE0_GLOBAL_CLK_GATE_DISABLE,
	MCSC_F_LB_CTRL_1_CLK_GATE_DISABLE,
	/* MCSC_F_DITHER_1_CLK_GATE_DISABLE, */
	MCSC_F_CORE1_GLOBAL_CLK_GATE_DISABLE,
	MCSC_F_SC0_CLK_GATE_DISABLE,
	MCSC_F_SC1_CLK_GATE_DISABLE,
	MCSC_F_SC2_CLK_GATE_DISABLE,
	MCSC_F_SC3_CLK_GATE_DISABLE,
	MCSC_F_SC4_CLK_GATE_DISABLE,
	MCSC_F_PC0_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC0_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC0_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC1_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC1_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC1_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC2_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC2_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC2_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC3_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC3_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC3_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_PC4_BCHS_CLK_GATE_DISABLE,
	MCSC_F_PC4_CONV420_CLK_GATE_DISABLE,
	MCSC_F_PC4_POST_SC_CLK_GATE_DISABLE,
	MCSC_F_INPUT_SRC0_SEL,
	MCSC_F_INPUT_SRC1_SEL,
	MCSC_F_UVSP_CLK_GATE_DIABLE,
	MCSC_F_SSB_CHAIN_SEL,
	MCSC_F_SSB_ENABLE,
	MCSC_F_UVSP_CHAIN_SEL,
	MCSC_F_UVSP_ENABLE,
	MCSC_F_SC4_INPUT_SEL,
	MCSC_F_SC3_INPUT_SEL,
	MCSC_F_SC2_INPUT_SEL,
	MCSC_F_SC1_INPUT_SEL,
	MCSC_F_SC0_INPUT_SEL,
	MCSC_F_OTF_OUT_SEL,
	/* MCSC_F_DITHER_0_ON,
	MCSC_F_DITHER_1_ON, */
	MCSC_F_INPUT0_IMG_HSIZE,
	MCSC_F_INPUT0_IMG_VSIZE,
	MCSC_F_INPUT1_IMG_HSIZE,
	MCSC_F_INPUT1_IMG_VSIZE,
	/* MCSC_F_INPUT0_PEAK_FIFO_CNT,
	MCSC_F_INPUT0_CUR_FIFO_CNT, */
	MCSC_F_SC0_BYPASS,
	MCSC_F_SC0_ENABLE,
	MCSC_F_SC0_SRC_HPOS,
	MCSC_F_SC0_SRC_VPOS,
	MCSC_F_SC0_SRC_HSIZE,
	MCSC_F_SC0_SRC_VSIZE,
	MCSC_F_SC0_DST_HSIZE,
	MCSC_F_SC0_DST_VSIZE,
	MCSC_F_SC0_H_RATIO,
	MCSC_F_SC0_V_RATIO,
	MCSC_F_SC0_H_INIT_PHASE_OFFSET,
	MCSC_F_SC0_V_INIT_PHASE_OFFSET,
	MCSC_F_SC0_ROUND_MODE,
	/* MCSC_F_SC0_V_COEFF_SEL,
	MCSC_F_SC0_H_COEFF_SEL, */
	MCSC_F_SC0_V_COEFF_0B,
	MCSC_F_SC0_V_COEFF_0A,
	MCSC_F_SC0_V_COEFF_0D,
	MCSC_F_SC0_V_COEFF_0C,
	MCSC_F_SC0_V_COEFF_1B,
	MCSC_F_SC0_V_COEFF_1A,
	MCSC_F_SC0_V_COEFF_1D,
	MCSC_F_SC0_V_COEFF_1C,
	MCSC_F_SC0_V_COEFF_2B,
	MCSC_F_SC0_V_COEFF_2A,
	MCSC_F_SC0_V_COEFF_2D,
	MCSC_F_SC0_V_COEFF_2C,
	MCSC_F_SC0_V_COEFF_3B,
	MCSC_F_SC0_V_COEFF_3A,
	MCSC_F_SC0_V_COEFF_3D,
	MCSC_F_SC0_V_COEFF_3C,
	MCSC_F_SC0_V_COEFF_4B,
	MCSC_F_SC0_V_COEFF_4A,
	MCSC_F_SC0_V_COEFF_4D,
	MCSC_F_SC0_V_COEFF_4C,
	MCSC_F_SC0_V_COEFF_5B,
	MCSC_F_SC0_V_COEFF_5A,
	MCSC_F_SC0_V_COEFF_5D,
	MCSC_F_SC0_V_COEFF_5C,
	MCSC_F_SC0_V_COEFF_6B,
	MCSC_F_SC0_V_COEFF_6A,
	MCSC_F_SC0_V_COEFF_6D,
	MCSC_F_SC0_V_COEFF_6C,
	MCSC_F_SC0_V_COEFF_7B,
	MCSC_F_SC0_V_COEFF_7A,
	MCSC_F_SC0_V_COEFF_7D,
	MCSC_F_SC0_V_COEFF_7C,
	MCSC_F_SC0_V_COEFF_8B,
	MCSC_F_SC0_V_COEFF_8A,
	MCSC_F_SC0_V_COEFF_8D,
	MCSC_F_SC0_V_COEFF_8C,
	MCSC_F_SC0_H_COEFF_0B,
	MCSC_F_SC0_H_COEFF_0A,
	MCSC_F_SC0_H_COEFF_0D,
	MCSC_F_SC0_H_COEFF_0C,
	MCSC_F_SC0_H_COEFF_0F,
	MCSC_F_SC0_H_COEFF_0E,
	MCSC_F_SC0_H_COEFF_0H,
	MCSC_F_SC0_H_COEFF_0G,
	MCSC_F_SC0_H_COEFF_1B,
	MCSC_F_SC0_H_COEFF_1A,
	MCSC_F_SC0_H_COEFF_1D,
	MCSC_F_SC0_H_COEFF_1C,
	MCSC_F_SC0_H_COEFF_1F,
	MCSC_F_SC0_H_COEFF_1E,
	MCSC_F_SC0_H_COEFF_1H,
	MCSC_F_SC0_H_COEFF_1G,
	MCSC_F_SC0_H_COEFF_2B,
	MCSC_F_SC0_H_COEFF_2A,
	MCSC_F_SC0_H_COEFF_2D,
	MCSC_F_SC0_H_COEFF_2C,
	MCSC_F_SC0_H_COEFF_2F,
	MCSC_F_SC0_H_COEFF_2E,
	MCSC_F_SC0_H_COEFF_2H,
	MCSC_F_SC0_H_COEFF_2G,
	MCSC_F_SC0_H_COEFF_3B,
	MCSC_F_SC0_H_COEFF_3A,
	MCSC_F_SC0_H_COEFF_3D,
	MCSC_F_SC0_H_COEFF_3C,
	MCSC_F_SC0_H_COEFF_3F,
	MCSC_F_SC0_H_COEFF_3E,
	MCSC_F_SC0_H_COEFF_3H,
	MCSC_F_SC0_H_COEFF_3G,
	MCSC_F_SC0_H_COEFF_4B,
	MCSC_F_SC0_H_COEFF_4A,
	MCSC_F_SC0_H_COEFF_4D,
	MCSC_F_SC0_H_COEFF_4C,
	MCSC_F_SC0_H_COEFF_4F,
	MCSC_F_SC0_H_COEFF_4E,
	MCSC_F_SC0_H_COEFF_4H,
	MCSC_F_SC0_H_COEFF_4G,
	MCSC_F_SC0_H_COEFF_5B,
	MCSC_F_SC0_H_COEFF_5A,
	MCSC_F_SC0_H_COEFF_5D,
	MCSC_F_SC0_H_COEFF_5C,
	MCSC_F_SC0_H_COEFF_5F,
	MCSC_F_SC0_H_COEFF_5E,
	MCSC_F_SC0_H_COEFF_5H,
	MCSC_F_SC0_H_COEFF_5G,
	MCSC_F_SC0_H_COEFF_6B,
	MCSC_F_SC0_H_COEFF_6A,
	MCSC_F_SC0_H_COEFF_6D,
	MCSC_F_SC0_H_COEFF_6C,
	MCSC_F_SC0_H_COEFF_6F,
	MCSC_F_SC0_H_COEFF_6E,
	MCSC_F_SC0_H_COEFF_6H,
	MCSC_F_SC0_H_COEFF_6G,
	MCSC_F_SC0_H_COEFF_7B,
	MCSC_F_SC0_H_COEFF_7A,
	MCSC_F_SC0_H_COEFF_7D,
	MCSC_F_SC0_H_COEFF_7C,
	MCSC_F_SC0_H_COEFF_7F,
	MCSC_F_SC0_H_COEFF_7E,
	MCSC_F_SC0_H_COEFF_7H,
	MCSC_F_SC0_H_COEFF_7G,
	MCSC_F_SC0_H_COEFF_8B,
	MCSC_F_SC0_H_COEFF_8A,
	MCSC_F_SC0_H_COEFF_8D,
	MCSC_F_SC0_H_COEFF_8C,
	MCSC_F_SC0_H_COEFF_8F,
	MCSC_F_SC0_H_COEFF_8E,
	MCSC_F_SC0_H_COEFF_8H,
	MCSC_F_SC0_H_COEFF_8G,
	MCSC_F_SC1_BYPASS,
	MCSC_F_SC1_ENABLE,
	MCSC_F_SC1_SRC_HPOS,
	MCSC_F_SC1_SRC_VPOS,
	MCSC_F_SC1_SRC_HSIZE,
	MCSC_F_SC1_SRC_VSIZE,
	MCSC_F_SC1_DST_HSIZE,
	MCSC_F_SC1_DST_VSIZE,
	MCSC_F_SC1_H_RATIO,
	MCSC_F_SC1_V_RATIO,
	MCSC_F_SC1_H_INIT_PHASE_OFFSET,
	MCSC_F_SC1_V_INIT_PHASE_OFFSET,
	MCSC_F_SC1_ROUND_MODE,
	/* MCSC_F_SC1_V_COEFF_SEL,
	MCSC_F_SC1_H_COEFF_SEL, */
	MCSC_F_SC1_V_COEFF_0B,
	MCSC_F_SC1_V_COEFF_0A,
	MCSC_F_SC1_V_COEFF_0D,
	MCSC_F_SC1_V_COEFF_0C,
	MCSC_F_SC1_V_COEFF_1B,
	MCSC_F_SC1_V_COEFF_1A,
	MCSC_F_SC1_V_COEFF_1D,
	MCSC_F_SC1_V_COEFF_1C,
	MCSC_F_SC1_V_COEFF_2B,
	MCSC_F_SC1_V_COEFF_2A,
	MCSC_F_SC1_V_COEFF_2D,
	MCSC_F_SC1_V_COEFF_2C,
	MCSC_F_SC1_V_COEFF_3B,
	MCSC_F_SC1_V_COEFF_3A,
	MCSC_F_SC1_V_COEFF_3D,
	MCSC_F_SC1_V_COEFF_3C,
	MCSC_F_SC1_V_COEFF_4B,
	MCSC_F_SC1_V_COEFF_4A,
	MCSC_F_SC1_V_COEFF_4D,
	MCSC_F_SC1_V_COEFF_4C,
	MCSC_F_SC1_V_COEFF_5B,
	MCSC_F_SC1_V_COEFF_5A,
	MCSC_F_SC1_V_COEFF_5D,
	MCSC_F_SC1_V_COEFF_5C,
	MCSC_F_SC1_V_COEFF_6B,
	MCSC_F_SC1_V_COEFF_6A,
	MCSC_F_SC1_V_COEFF_6D,
	MCSC_F_SC1_V_COEFF_6C,
	MCSC_F_SC1_V_COEFF_7B,
	MCSC_F_SC1_V_COEFF_7A,
	MCSC_F_SC1_V_COEFF_7D,
	MCSC_F_SC1_V_COEFF_7C,
	MCSC_F_SC1_V_COEFF_8B,
	MCSC_F_SC1_V_COEFF_8A,
	MCSC_F_SC1_V_COEFF_8D,
	MCSC_F_SC1_V_COEFF_8C,
	MCSC_F_SC1_H_COEFF_0B,
	MCSC_F_SC1_H_COEFF_0A,
	MCSC_F_SC1_H_COEFF_0D,
	MCSC_F_SC1_H_COEFF_0C,
	MCSC_F_SC1_H_COEFF_0F,
	MCSC_F_SC1_H_COEFF_0E,
	MCSC_F_SC1_H_COEFF_0H,
	MCSC_F_SC1_H_COEFF_0G,
	MCSC_F_SC1_H_COEFF_1B,
	MCSC_F_SC1_H_COEFF_1A,
	MCSC_F_SC1_H_COEFF_1D,
	MCSC_F_SC1_H_COEFF_1C,
	MCSC_F_SC1_H_COEFF_1F,
	MCSC_F_SC1_H_COEFF_1E,
	MCSC_F_SC1_H_COEFF_1H,
	MCSC_F_SC1_H_COEFF_1G,
	MCSC_F_SC1_H_COEFF_2B,
	MCSC_F_SC1_H_COEFF_2A,
	MCSC_F_SC1_H_COEFF_2D,
	MCSC_F_SC1_H_COEFF_2C,
	MCSC_F_SC1_H_COEFF_2F,
	MCSC_F_SC1_H_COEFF_2E,
	MCSC_F_SC1_H_COEFF_2H,
	MCSC_F_SC1_H_COEFF_2G,
	MCSC_F_SC1_H_COEFF_3B,
	MCSC_F_SC1_H_COEFF_3A,
	MCSC_F_SC1_H_COEFF_3D,
	MCSC_F_SC1_H_COEFF_3C,
	MCSC_F_SC1_H_COEFF_3F,
	MCSC_F_SC1_H_COEFF_3E,
	MCSC_F_SC1_H_COEFF_3H,
	MCSC_F_SC1_H_COEFF_3G,
	MCSC_F_SC1_H_COEFF_4B,
	MCSC_F_SC1_H_COEFF_4A,
	MCSC_F_SC1_H_COEFF_4D,
	MCSC_F_SC1_H_COEFF_4C,
	MCSC_F_SC1_H_COEFF_4F,
	MCSC_F_SC1_H_COEFF_4E,
	MCSC_F_SC1_H_COEFF_4H,
	MCSC_F_SC1_H_COEFF_4G,
	MCSC_F_SC1_H_COEFF_5B,
	MCSC_F_SC1_H_COEFF_5A,
	MCSC_F_SC1_H_COEFF_5D,
	MCSC_F_SC1_H_COEFF_5C,
	MCSC_F_SC1_H_COEFF_5F,
	MCSC_F_SC1_H_COEFF_5E,
	MCSC_F_SC1_H_COEFF_5H,
	MCSC_F_SC1_H_COEFF_5G,
	MCSC_F_SC1_H_COEFF_6B,
	MCSC_F_SC1_H_COEFF_6A,
	MCSC_F_SC1_H_COEFF_6D,
	MCSC_F_SC1_H_COEFF_6C,
	MCSC_F_SC1_H_COEFF_6F,
	MCSC_F_SC1_H_COEFF_6E,
	MCSC_F_SC1_H_COEFF_6H,
	MCSC_F_SC1_H_COEFF_6G,
	MCSC_F_SC1_H_COEFF_7B,
	MCSC_F_SC1_H_COEFF_7A,
	MCSC_F_SC1_H_COEFF_7D,
	MCSC_F_SC1_H_COEFF_7C,
	MCSC_F_SC1_H_COEFF_7F,
	MCSC_F_SC1_H_COEFF_7E,
	MCSC_F_SC1_H_COEFF_7H,
	MCSC_F_SC1_H_COEFF_7G,
	MCSC_F_SC1_H_COEFF_8B,
	MCSC_F_SC1_H_COEFF_8A,
	MCSC_F_SC1_H_COEFF_8D,
	MCSC_F_SC1_H_COEFF_8C,
	MCSC_F_SC1_H_COEFF_8F,
	MCSC_F_SC1_H_COEFF_8E,
	MCSC_F_SC1_H_COEFF_8H,
	MCSC_F_SC1_H_COEFF_8G,
	MCSC_F_SC2_BYPASS,
	MCSC_F_SC2_ENABLE,
	MCSC_F_SC2_SRC_HPOS,
	MCSC_F_SC2_SRC_VPOS,
	MCSC_F_SC2_SRC_HSIZE,
	MCSC_F_SC2_SRC_VSIZE,
	MCSC_F_SC2_DST_HSIZE,
	MCSC_F_SC2_DST_VSIZE,
	MCSC_F_SC2_H_RATIO,
	MCSC_F_SC2_V_RATIO,
	MCSC_F_SC2_H_INIT_PHASE_OFFSET,
	MCSC_F_SC2_V_INIT_PHASE_OFFSET,
	MCSC_F_SC2_ROUND_MODE,
	/* MCSC_F_SC2_V_COEFF_SEL,
	MCSC_F_SC2_H_COEFF_SEL, */
	MCSC_F_SC2_V_COEFF_0B,
	MCSC_F_SC2_V_COEFF_0A,
	MCSC_F_SC2_V_COEFF_0D,
	MCSC_F_SC2_V_COEFF_0C,
	MCSC_F_SC2_V_COEFF_1B,
	MCSC_F_SC2_V_COEFF_1A,
	MCSC_F_SC2_V_COEFF_1D,
	MCSC_F_SC2_V_COEFF_1C,
	MCSC_F_SC2_V_COEFF_2B,
	MCSC_F_SC2_V_COEFF_2A,
	MCSC_F_SC2_V_COEFF_2D,
	MCSC_F_SC2_V_COEFF_2C,
	MCSC_F_SC2_V_COEFF_3B,
	MCSC_F_SC2_V_COEFF_3A,
	MCSC_F_SC2_V_COEFF_3D,
	MCSC_F_SC2_V_COEFF_3C,
	MCSC_F_SC2_V_COEFF_4B,
	MCSC_F_SC2_V_COEFF_4A,
	MCSC_F_SC2_V_COEFF_4D,
	MCSC_F_SC2_V_COEFF_4C,
	MCSC_F_SC2_V_COEFF_5B,
	MCSC_F_SC2_V_COEFF_5A,
	MCSC_F_SC2_V_COEFF_5D,
	MCSC_F_SC2_V_COEFF_5C,
	MCSC_F_SC2_V_COEFF_6B,
	MCSC_F_SC2_V_COEFF_6A,
	MCSC_F_SC2_V_COEFF_6D,
	MCSC_F_SC2_V_COEFF_6C,
	MCSC_F_SC2_V_COEFF_7B,
	MCSC_F_SC2_V_COEFF_7A,
	MCSC_F_SC2_V_COEFF_7D,
	MCSC_F_SC2_V_COEFF_7C,
	MCSC_F_SC2_V_COEFF_8B,
	MCSC_F_SC2_V_COEFF_8A,
	MCSC_F_SC2_V_COEFF_8D,
	MCSC_F_SC2_V_COEFF_8C,
	MCSC_F_SC2_H_COEFF_0B,
	MCSC_F_SC2_H_COEFF_0A,
	MCSC_F_SC2_H_COEFF_0D,
	MCSC_F_SC2_H_COEFF_0C,
	MCSC_F_SC2_H_COEFF_0F,
	MCSC_F_SC2_H_COEFF_0E,
	MCSC_F_SC2_H_COEFF_0H,
	MCSC_F_SC2_H_COEFF_0G,
	MCSC_F_SC2_H_COEFF_1B,
	MCSC_F_SC2_H_COEFF_1A,
	MCSC_F_SC2_H_COEFF_1D,
	MCSC_F_SC2_H_COEFF_1C,
	MCSC_F_SC2_H_COEFF_1F,
	MCSC_F_SC2_H_COEFF_1E,
	MCSC_F_SC2_H_COEFF_1H,
	MCSC_F_SC2_H_COEFF_1G,
	MCSC_F_SC2_H_COEFF_2B,
	MCSC_F_SC2_H_COEFF_2A,
	MCSC_F_SC2_H_COEFF_2D,
	MCSC_F_SC2_H_COEFF_2C,
	MCSC_F_SC2_H_COEFF_2F,
	MCSC_F_SC2_H_COEFF_2E,
	MCSC_F_SC2_H_COEFF_2H,
	MCSC_F_SC2_H_COEFF_2G,
	MCSC_F_SC2_H_COEFF_3B,
	MCSC_F_SC2_H_COEFF_3A,
	MCSC_F_SC2_H_COEFF_3D,
	MCSC_F_SC2_H_COEFF_3C,
	MCSC_F_SC2_H_COEFF_3F,
	MCSC_F_SC2_H_COEFF_3E,
	MCSC_F_SC2_H_COEFF_3H,
	MCSC_F_SC2_H_COEFF_3G,
	MCSC_F_SC2_H_COEFF_4B,
	MCSC_F_SC2_H_COEFF_4A,
	MCSC_F_SC2_H_COEFF_4D,
	MCSC_F_SC2_H_COEFF_4C,
	MCSC_F_SC2_H_COEFF_4F,
	MCSC_F_SC2_H_COEFF_4E,
	MCSC_F_SC2_H_COEFF_4H,
	MCSC_F_SC2_H_COEFF_4G,
	MCSC_F_SC2_H_COEFF_5B,
	MCSC_F_SC2_H_COEFF_5A,
	MCSC_F_SC2_H_COEFF_5D,
	MCSC_F_SC2_H_COEFF_5C,
	MCSC_F_SC2_H_COEFF_5F,
	MCSC_F_SC2_H_COEFF_5E,
	MCSC_F_SC2_H_COEFF_5H,
	MCSC_F_SC2_H_COEFF_5G,
	MCSC_F_SC2_H_COEFF_6B,
	MCSC_F_SC2_H_COEFF_6A,
	MCSC_F_SC2_H_COEFF_6D,
	MCSC_F_SC2_H_COEFF_6C,
	MCSC_F_SC2_H_COEFF_6F,
	MCSC_F_SC2_H_COEFF_6E,
	MCSC_F_SC2_H_COEFF_6H,
	MCSC_F_SC2_H_COEFF_6G,
	MCSC_F_SC2_H_COEFF_7B,
	MCSC_F_SC2_H_COEFF_7A,
	MCSC_F_SC2_H_COEFF_7D,
	MCSC_F_SC2_H_COEFF_7C,
	MCSC_F_SC2_H_COEFF_7F,
	MCSC_F_SC2_H_COEFF_7E,
	MCSC_F_SC2_H_COEFF_7H,
	MCSC_F_SC2_H_COEFF_7G,
	MCSC_F_SC2_H_COEFF_8B,
	MCSC_F_SC2_H_COEFF_8A,
	MCSC_F_SC2_H_COEFF_8D,
	MCSC_F_SC2_H_COEFF_8C,
	MCSC_F_SC2_H_COEFF_8F,
	MCSC_F_SC2_H_COEFF_8E,
	MCSC_F_SC2_H_COEFF_8H,
	MCSC_F_SC2_H_COEFF_8G,
	MCSC_F_SC3_BYPASS,
	MCSC_F_SC3_ENABLE,
	MCSC_F_SC3_SRC_HPOS,
	MCSC_F_SC3_SRC_VPOS,
	MCSC_F_SC3_SRC_HSIZE,
	MCSC_F_SC3_SRC_VSIZE,
	MCSC_F_SC3_DST_HSIZE,
	MCSC_F_SC3_DST_VSIZE,
	MCSC_F_SC3_H_RATIO,
	MCSC_F_SC3_V_RATIO,
	MCSC_F_SC3_H_INIT_PHASE_OFFSET,
	MCSC_F_SC3_V_INIT_PHASE_OFFSET,
	MCSC_F_SC3_ROUND_MODE,
	MCSC_F_SC3_V_COEFF_0B,
	MCSC_F_SC3_V_COEFF_0A,
	MCSC_F_SC3_V_COEFF_0D,
	MCSC_F_SC3_V_COEFF_0C,
	MCSC_F_SC3_V_COEFF_1B,
	MCSC_F_SC3_V_COEFF_1A,
	MCSC_F_SC3_V_COEFF_1D,
	MCSC_F_SC3_V_COEFF_1C,
	MCSC_F_SC3_V_COEFF_2B,
	MCSC_F_SC3_V_COEFF_2A,
	MCSC_F_SC3_V_COEFF_2D,
	MCSC_F_SC3_V_COEFF_2C,
	MCSC_F_SC3_V_COEFF_3B,
	MCSC_F_SC3_V_COEFF_3A,
	MCSC_F_SC3_V_COEFF_3D,
	MCSC_F_SC3_V_COEFF_3C,
	MCSC_F_SC3_V_COEFF_4B,
	MCSC_F_SC3_V_COEFF_4A,
	MCSC_F_SC3_V_COEFF_4D,
	MCSC_F_SC3_V_COEFF_4C,
	MCSC_F_SC3_V_COEFF_5B,
	MCSC_F_SC3_V_COEFF_5A,
	MCSC_F_SC3_V_COEFF_5D,
	MCSC_F_SC3_V_COEFF_5C,
	MCSC_F_SC3_V_COEFF_6B,
	MCSC_F_SC3_V_COEFF_6A,
	MCSC_F_SC3_V_COEFF_6D,
	MCSC_F_SC3_V_COEFF_6C,
	MCSC_F_SC3_V_COEFF_7B,
	MCSC_F_SC3_V_COEFF_7A,
	MCSC_F_SC3_V_COEFF_7D,
	MCSC_F_SC3_V_COEFF_7C,
	MCSC_F_SC3_V_COEFF_8B,
	MCSC_F_SC3_V_COEFF_8A,
	MCSC_F_SC3_V_COEFF_8D,
	MCSC_F_SC3_V_COEFF_8C,
	MCSC_F_SC3_H_COEFF_0B,
	MCSC_F_SC3_H_COEFF_0A,
	MCSC_F_SC3_H_COEFF_0D,
	MCSC_F_SC3_H_COEFF_0C,
	MCSC_F_SC3_H_COEFF_0F,
	MCSC_F_SC3_H_COEFF_0E,
	MCSC_F_SC3_H_COEFF_0H,
	MCSC_F_SC3_H_COEFF_0G,
	MCSC_F_SC3_H_COEFF_1B,
	MCSC_F_SC3_H_COEFF_1A,
	MCSC_F_SC3_H_COEFF_1D,
	MCSC_F_SC3_H_COEFF_1C,
	MCSC_F_SC3_H_COEFF_1F,
	MCSC_F_SC3_H_COEFF_1E,
	MCSC_F_SC3_H_COEFF_1H,
	MCSC_F_SC3_H_COEFF_1G,
	MCSC_F_SC3_H_COEFF_2B,
	MCSC_F_SC3_H_COEFF_2A,
	MCSC_F_SC3_H_COEFF_2D,
	MCSC_F_SC3_H_COEFF_2C,
	MCSC_F_SC3_H_COEFF_2F,
	MCSC_F_SC3_H_COEFF_2E,
	MCSC_F_SC3_H_COEFF_2H,
	MCSC_F_SC3_H_COEFF_2G,
	MCSC_F_SC3_H_COEFF_3B,
	MCSC_F_SC3_H_COEFF_3A,
	MCSC_F_SC3_H_COEFF_3D,
	MCSC_F_SC3_H_COEFF_3C,
	MCSC_F_SC3_H_COEFF_3F,
	MCSC_F_SC3_H_COEFF_3E,
	MCSC_F_SC3_H_COEFF_3H,
	MCSC_F_SC3_H_COEFF_3G,
	MCSC_F_SC3_H_COEFF_4B,
	MCSC_F_SC3_H_COEFF_4A,
	MCSC_F_SC3_H_COEFF_4D,
	MCSC_F_SC3_H_COEFF_4C,
	MCSC_F_SC3_H_COEFF_4F,
	MCSC_F_SC3_H_COEFF_4E,
	MCSC_F_SC3_H_COEFF_4H,
	MCSC_F_SC3_H_COEFF_4G,
	MCSC_F_SC3_H_COEFF_5B,
	MCSC_F_SC3_H_COEFF_5A,
	MCSC_F_SC3_H_COEFF_5D,
	MCSC_F_SC3_H_COEFF_5C,
	MCSC_F_SC3_H_COEFF_5F,
	MCSC_F_SC3_H_COEFF_5E,
	MCSC_F_SC3_H_COEFF_5H,
	MCSC_F_SC3_H_COEFF_5G,
	MCSC_F_SC3_H_COEFF_6B,
	MCSC_F_SC3_H_COEFF_6A,
	MCSC_F_SC3_H_COEFF_6D,
	MCSC_F_SC3_H_COEFF_6C,
	MCSC_F_SC3_H_COEFF_6F,
	MCSC_F_SC3_H_COEFF_6E,
	MCSC_F_SC3_H_COEFF_6H,
	MCSC_F_SC3_H_COEFF_6G,
	MCSC_F_SC3_H_COEFF_7B,
	MCSC_F_SC3_H_COEFF_7A,
	MCSC_F_SC3_H_COEFF_7D,
	MCSC_F_SC3_H_COEFF_7C,
	MCSC_F_SC3_H_COEFF_7F,
	MCSC_F_SC3_H_COEFF_7E,
	MCSC_F_SC3_H_COEFF_7H,
	MCSC_F_SC3_H_COEFF_7G,
	MCSC_F_SC3_H_COEFF_8B,
	MCSC_F_SC3_H_COEFF_8A,
	MCSC_F_SC3_H_COEFF_8D,
	MCSC_F_SC3_H_COEFF_8C,
	MCSC_F_SC3_H_COEFF_8F,
	MCSC_F_SC3_H_COEFF_8E,
	MCSC_F_SC3_H_COEFF_8H,
	MCSC_F_SC3_H_COEFF_8G,
	MCSC_F_SC4_BYPASS,
	MCSC_F_SC4_ENABLE,
	MCSC_F_SC4_SRC_HPOS,
	MCSC_F_SC4_SRC_VPOS,
	MCSC_F_SC4_SRC_HSIZE,
	MCSC_F_SC4_SRC_VSIZE,
	MCSC_F_SC4_DST_HSIZE,
	MCSC_F_SC4_DST_VSIZE,
	MCSC_F_SC4_H_RATIO,
	MCSC_F_SC4_V_RATIO,
	MCSC_F_SC4_H_INIT_PHASE_OFFSET,
	MCSC_F_SC4_V_INIT_PHASE_OFFSET,
	MCSC_F_SC4_ROUND_MODE,
	MCSC_F_SC4_V_COEFF_0B,
	MCSC_F_SC4_V_COEFF_0A,
	MCSC_F_SC4_V_COEFF_0D,
	MCSC_F_SC4_V_COEFF_0C,
	MCSC_F_SC4_V_COEFF_1B,
	MCSC_F_SC4_V_COEFF_1A,
	MCSC_F_SC4_V_COEFF_1D,
	MCSC_F_SC4_V_COEFF_1C,
	MCSC_F_SC4_V_COEFF_2B,
	MCSC_F_SC4_V_COEFF_2A,
	MCSC_F_SC4_V_COEFF_2D,
	MCSC_F_SC4_V_COEFF_2C,
	MCSC_F_SC4_V_COEFF_3B,
	MCSC_F_SC4_V_COEFF_3A,
	MCSC_F_SC4_V_COEFF_3D,
	MCSC_F_SC4_V_COEFF_3C,
	MCSC_F_SC4_V_COEFF_4B,
	MCSC_F_SC4_V_COEFF_4A,
	MCSC_F_SC4_V_COEFF_4D,
	MCSC_F_SC4_V_COEFF_4C,
	MCSC_F_SC4_V_COEFF_5B,
	MCSC_F_SC4_V_COEFF_5A,
	MCSC_F_SC4_V_COEFF_5D,
	MCSC_F_SC4_V_COEFF_5C,
	MCSC_F_SC4_V_COEFF_6B,
	MCSC_F_SC4_V_COEFF_6A,
	MCSC_F_SC4_V_COEFF_6D,
	MCSC_F_SC4_V_COEFF_6C,
	MCSC_F_SC4_V_COEFF_7B,
	MCSC_F_SC4_V_COEFF_7A,
	MCSC_F_SC4_V_COEFF_7D,
	MCSC_F_SC4_V_COEFF_7C,
	MCSC_F_SC4_V_COEFF_8B,
	MCSC_F_SC4_V_COEFF_8A,
	MCSC_F_SC4_V_COEFF_8D,
	MCSC_F_SC4_V_COEFF_8C,
	MCSC_F_SC4_H_COEFF_0B,
	MCSC_F_SC4_H_COEFF_0A,
	MCSC_F_SC4_H_COEFF_0D,
	MCSC_F_SC4_H_COEFF_0C,
	MCSC_F_SC4_H_COEFF_0F,
	MCSC_F_SC4_H_COEFF_0E,
	MCSC_F_SC4_H_COEFF_0H,
	MCSC_F_SC4_H_COEFF_0G,
	MCSC_F_SC4_H_COEFF_1B,
	MCSC_F_SC4_H_COEFF_1A,
	MCSC_F_SC4_H_COEFF_1D,
	MCSC_F_SC4_H_COEFF_1C,
	MCSC_F_SC4_H_COEFF_1F,
	MCSC_F_SC4_H_COEFF_1E,
	MCSC_F_SC4_H_COEFF_1H,
	MCSC_F_SC4_H_COEFF_1G,
	MCSC_F_SC4_H_COEFF_2B,
	MCSC_F_SC4_H_COEFF_2A,
	MCSC_F_SC4_H_COEFF_2D,
	MCSC_F_SC4_H_COEFF_2C,
	MCSC_F_SC4_H_COEFF_2F,
	MCSC_F_SC4_H_COEFF_2E,
	MCSC_F_SC4_H_COEFF_2H,
	MCSC_F_SC4_H_COEFF_2G,
	MCSC_F_SC4_H_COEFF_3B,
	MCSC_F_SC4_H_COEFF_3A,
	MCSC_F_SC4_H_COEFF_3D,
	MCSC_F_SC4_H_COEFF_3C,
	MCSC_F_SC4_H_COEFF_3F,
	MCSC_F_SC4_H_COEFF_3E,
	MCSC_F_SC4_H_COEFF_3H,
	MCSC_F_SC4_H_COEFF_3G,
	MCSC_F_SC4_H_COEFF_4B,
	MCSC_F_SC4_H_COEFF_4A,
	MCSC_F_SC4_H_COEFF_4D,
	MCSC_F_SC4_H_COEFF_4C,
	MCSC_F_SC4_H_COEFF_4F,
	MCSC_F_SC4_H_COEFF_4E,
	MCSC_F_SC4_H_COEFF_4H,
	MCSC_F_SC4_H_COEFF_4G,
	MCSC_F_SC4_H_COEFF_5B,
	MCSC_F_SC4_H_COEFF_5A,
	MCSC_F_SC4_H_COEFF_5D,
	MCSC_F_SC4_H_COEFF_5C,
	MCSC_F_SC4_H_COEFF_5F,
	MCSC_F_SC4_H_COEFF_5E,
	MCSC_F_SC4_H_COEFF_5H,
	MCSC_F_SC4_H_COEFF_5G,
	MCSC_F_SC4_H_COEFF_6B,
	MCSC_F_SC4_H_COEFF_6A,
	MCSC_F_SC4_H_COEFF_6D,
	MCSC_F_SC4_H_COEFF_6C,
	MCSC_F_SC4_H_COEFF_6F,
	MCSC_F_SC4_H_COEFF_6E,
	MCSC_F_SC4_H_COEFF_6H,
	MCSC_F_SC4_H_COEFF_6G,
	MCSC_F_SC4_H_COEFF_7B,
	MCSC_F_SC4_H_COEFF_7A,
	MCSC_F_SC4_H_COEFF_7D,
	MCSC_F_SC4_H_COEFF_7C,
	MCSC_F_SC4_H_COEFF_7F,
	MCSC_F_SC4_H_COEFF_7E,
	MCSC_F_SC4_H_COEFF_7H,
	MCSC_F_SC4_H_COEFF_7G,
	MCSC_F_SC4_H_COEFF_8B,
	MCSC_F_SC4_H_COEFF_8A,
	MCSC_F_SC4_H_COEFF_8D,
	MCSC_F_SC4_H_COEFF_8C,
	MCSC_F_SC4_H_COEFF_8F,
	MCSC_F_SC4_H_COEFF_8E,
	MCSC_F_SC4_H_COEFF_8H,
	MCSC_F_SC4_H_COEFF_8G,
	MCSC_F_PC0_POST_SC_ENABLE,
	MCSC_F_PC0_POST_SC_IMG_HSIZE,
	MCSC_F_PC0_POST_SC_IMG_VSIZE,
	MCSC_F_PC0_POST_SC_DST_HSIZE,
	MCSC_F_PC0_POST_SC_DST_VSIZE,
	MCSC_F_PC0_POST_SC_H_RATIO,
	MCSC_F_PC0_POST_SC_V_RATIO,
	MCSC_F_PC0_CONV420_ENABLE,
	MCSC_F_PC0_CONV420_WEIGHT,
	MCSC_F_PC0_BCHS_ENABLE,
	MCSC_F_PC0_BCHS_YOFFSET,
	MCSC_F_PC0_BCHS_YGAIN,
	MCSC_F_PC0_BCHS_C_GAIN_01,
	MCSC_F_PC0_BCHS_C_GAIN_00,
	MCSC_F_PC0_BCHS_C_GAIN_11,
	MCSC_F_PC0_BCHS_C_GAIN_10,
	MCSC_F_PC0_BCHS_Y_CLAMP_MAX,
	MCSC_F_PC0_BCHS_Y_CLAMP_MIN,
	MCSC_F_PC0_BCHS_C_CLAMP_MAX,
	MCSC_F_PC0_BCHS_C_CLAMP_MIN,
	MCSC_F_PC0_OTF_OUT_ENABLE,
	MCSC_F_PC0_DMA_OUT_ENABLE,
	MCSC_F_PC1_POST_SC_ENABLE,
	MCSC_F_PC1_POST_SC_IMG_HSIZE,
	MCSC_F_PC1_POST_SC_IMG_VSIZE,
	MCSC_F_PC1_POST_SC_DST_HSIZE,
	MCSC_F_PC1_POST_SC_DST_VSIZE,
	MCSC_F_PC1_POST_SC_H_RATIO,
	MCSC_F_PC1_POST_SC_V_RATIO,
	MCSC_F_PC1_CONV420_ENABLE,
	MCSC_F_PC1_CONV420_WEIGHT,
	MCSC_F_PC1_BCHS_ENABLE,
	MCSC_F_PC1_BCHS_YOFFSET,
	MCSC_F_PC1_BCHS_YGAIN,
	MCSC_F_PC1_BCHS_C_GAIN_01,
	MCSC_F_PC1_BCHS_C_GAIN_00,
	MCSC_F_PC1_BCHS_C_GAIN_11,
	MCSC_F_PC1_BCHS_C_GAIN_10,
	MCSC_F_PC1_BCHS_Y_CLAMP_MAX,
	MCSC_F_PC1_BCHS_Y_CLAMP_MIN,
	MCSC_F_PC1_BCHS_C_CLAMP_MAX,
	MCSC_F_PC1_BCHS_C_CLAMP_MIN,
	MCSC_F_PC1_OTF_OUT_ENABLE,
	MCSC_F_PC1_DMA_OUT_ENABLE,
	MCSC_F_PC2_POST_SC_ENABLE,
	MCSC_F_PC2_POST_SC_IMG_HSIZE,
	MCSC_F_PC2_POST_SC_IMG_VSIZE,
	MCSC_F_PC2_POST_SC_DST_HSIZE,
	MCSC_F_PC2_POST_SC_DST_VSIZE,
	MCSC_F_PC2_POST_SC_H_RATIO,
	MCSC_F_PC2_POST_SC_V_RATIO,
	MCSC_F_PC2_CONV420_ENABLE,
	MCSC_F_PC2_CONV420_WEIGHT,
	MCSC_F_PC2_BCHS_ENABLE,
	MCSC_F_PC2_BCHS_YOFFSET,
	MCSC_F_PC2_BCHS_YGAIN,
	MCSC_F_PC2_BCHS_C_GAIN_01,
	MCSC_F_PC2_BCHS_C_GAIN_00,
	MCSC_F_PC2_BCHS_C_GAIN_11,
	MCSC_F_PC2_BCHS_C_GAIN_10,
	MCSC_F_PC2_BCHS_Y_CLAMP_MAX,
	MCSC_F_PC2_BCHS_Y_CLAMP_MIN,
	MCSC_F_PC2_BCHS_C_CLAMP_MAX,
	MCSC_F_PC2_BCHS_C_CLAMP_MIN,
	MCSC_F_PC2_OTF_OUT_ENABLE,
	MCSC_F_PC2_DMA_OUT_ENABLE,
	MCSC_F_PC3_POST_SC_ENABLE,
	MCSC_F_PC3_POST_SC_IMG_HSIZE,
	MCSC_F_PC3_POST_SC_IMG_VSIZE,
	MCSC_F_PC3_POST_SC_DST_HSIZE,
	MCSC_F_PC3_POST_SC_DST_VSIZE,
	MCSC_F_PC3_POST_SC_H_RATIO,
	MCSC_F_PC3_POST_SC_V_RATIO,
	MCSC_F_PC3_CONV420_ENABLE,
	MCSC_F_PC3_CONV420_WEIGHT,
	MCSC_F_PC3_BCHS_ENABLE,
	MCSC_F_PC3_BCHS_YOFFSET,
	MCSC_F_PC3_BCHS_YGAIN,
	MCSC_F_PC3_BCHS_C_GAIN_01,
	MCSC_F_PC3_BCHS_C_GAIN_00,
	MCSC_F_PC3_BCHS_C_GAIN_11,
	MCSC_F_PC3_BCHS_C_GAIN_10,
	MCSC_F_PC3_BCHS_Y_CLAMP_MAX,
	MCSC_F_PC3_BCHS_Y_CLAMP_MIN,
	MCSC_F_PC3_BCHS_C_CLAMP_MAX,
	MCSC_F_PC3_BCHS_C_CLAMP_MIN,
	MCSC_F_PC3_OTF_OUT_ENABLE,
	MCSC_F_PC3_DMA_OUT_ENABLE,
	MCSC_F_PC4_POST_SC_ENABLE,
	MCSC_F_PC4_POST_SC_IMG_HSIZE,
	MCSC_F_PC4_POST_SC_IMG_VSIZE,
	MCSC_F_PC4_POST_SC_DST_HSIZE,
	MCSC_F_PC4_POST_SC_DST_VSIZE,
	MCSC_F_PC4_POST_SC_H_RATIO,
	MCSC_F_PC4_POST_SC_V_RATIO,
	MCSC_F_PC4_CONV420_ENABLE,
	MCSC_F_PC4_CONV420_WEIGHT,
	MCSC_F_PC4_BCHS_ENABLE,
	MCSC_F_PC4_BCHS_YOFFSET,
	MCSC_F_PC4_BCHS_YGAIN,
	MCSC_F_PC4_BCHS_C_GAIN_01,
	MCSC_F_PC4_BCHS_C_GAIN_00,
	MCSC_F_PC4_BCHS_C_GAIN_11,
	MCSC_F_PC4_BCHS_C_GAIN_10,
	MCSC_F_PC4_BCHS_Y_CLAMP_MAX,
	MCSC_F_PC4_BCHS_Y_CLAMP_MIN,
	MCSC_F_PC4_BCHS_C_CLAMP_MAX,
	MCSC_F_PC4_BCHS_C_CLAMP_MIN,
	MCSC_F_PC4_OTF_OUT_ENABLE,
	MCSC_F_PC4_DMA_OUT_ENABLE,
	MCSC_F_SW_RESET_1_STATUS,
	MCSC_F_SW_RESET_0_STATUS,
	MCSC_F_SW_RESET_GLOBAL_STATUS,
	MCSC_F_UVSP_RUNNING,
	MCSC_F_PC4_BCHS_RUNNING,
	MCSC_F_PC4_CONV420_RUNNING,
	MCSC_F_PC4_OTF_RUNNING,
	MCSC_F_PC4_POST_SC_RUNNING,
	MCSC_F_PC3_BCHS_RUNNING,
	MCSC_F_PC3_CONV420_RUNNING,
	MCSC_F_PC3_OTF_RUNNING,
	MCSC_F_PC3_POST_SC_RUNNING,
	MCSC_F_PC2_BCHS_RUNNING,
	MCSC_F_PC2_CONV420_RUNNING,
	MCSC_F_PC2_OTF_RUNNING,
	MCSC_F_PC2_POST_SC_RUNNING,
	MCSC_F_PC1_BCHS_RUNNING,
	MCSC_F_PC1_CONV420_RUNNING,
	MCSC_F_PC1_OTF_RUNNING,
	MCSC_F_PC1_POST_SC_RUNNING,
	MCSC_F_PC0_BCHS_RUNNING,
	MCSC_F_PC0_CONV420_RUNNING,
	MCSC_F_PC0_OTF_RUNNING,
	MCSC_F_PC0_POST_SC_RUNNING,
	MCSC_F_SC4_RUNNING,
	MCSC_F_SC3_RUNNING,
	MCSC_F_SC2_RUNNING,
	MCSC_F_SC1_RUNNING,
	MCSC_F_SC0_RUNNING,
	MCSC_F_LINE_FIFO1_RUNNING,
	MCSC_F_LINE_FIFO0_RUNNING,
	/* MCSC_F_DITHER_1_RUNNING,
	MCSC_F_DITHER_0_RUNNING, */
	MCSC_F_SCALER_IDLE_1,
	MCSC_F_SCALER_IDLE_0,
	MCSC_F_WDMA4_BUSY,
	MCSC_F_WDMA3_BUSY,
	MCSC_F_WDMA2_BUSY,
	MCSC_F_WDMA1_BUSY,
	MCSC_F_WDMA0_BUSY,
	MCSC_F_RDMA_BUSY,
	MCSC_F_CUR_VERTICAL_CNT_0,
	MCSC_F_CUR_HORIZONTAL_CNT_0,
	MCSC_F_CUR_VERTICAL_CNT_1,
	MCSC_F_CUR_HORIZONTAL_CNT_1,
	MCSC_F_OUT_STALL_BLOCKING_INT_0_MASK,
	MCSC_F_SCALER_OVERFLOW_INT_0_MASK,
	MCSC_F_INPUT_VERTICAL_UNF_INT_0_MASK,
	MCSC_F_INPUT_VERTICAL_OVF_INT_0_MASK,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_0_MASK,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_0_MASK,
	MCSC_F_SHADOW_TRIGGER_INT_0_MASK,
	MCSC_F_SHADOW_HW_TRIGGER_INT_0_MASK,
	MCSC_F_CORE_FINISH_INT_0_MASK,
	MCSC_F_WDMA_FINISH_INT_0_MASK,
	MCSC_F_FRAME_START_INT_0_MASK,
	MCSC_F_FRAME_END_INT_0_MASK,
	MCSC_F_OUT_STALL_BLOCKING_INT_1_MASK,
	MCSC_F_SCALER_OVERFLOW_INT_1_MASK,
	MCSC_F_INPUT_VERTICAL_UNF_INT_1_MASK,
	MCSC_F_INPUT_VERTICAL_OVF_INT_1_MASK,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_1_MASK,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_1_MASK,
	MCSC_F_SHADOW_TRIGGER_INT_1_MASK,
	MCSC_F_SHADOW_HW_TRIGGER_INT_1_MASK,
	MCSC_F_CORE_FINISH_INT_1_MASK,
	MCSC_F_WDMA_FINISH_INT_1_MASK,
	MCSC_F_FRAME_START_INT_1_MASK,
	MCSC_F_FRAME_END_INT_1_MASK,
	MCSC_F_OUT_STALL_BLOCKING_INT_0,
	MCSC_F_SCALER_OVERFLOW_INT_0,
	MCSC_F_INPUT_VERTICAL_UNF_INT_0,
	MCSC_F_INPUT_VERTICAL_OVF_INT_0,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_0,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_0,
	MCSC_F_SHADOW_TRIGGER_INT_0,
	MCSC_F_SHADOW_HW_TRIGGER_INT_0,
	MCSC_F_CORE_FINISH_INT_0,
	MCSC_F_WDMA_FINISH_INT_0,
	MCSC_F_FRAME_START_INT_0,
	MCSC_F_FRAME_END_INT_0,
	MCSC_F_OUT_STALL_BLOCKING_INT_1,
	MCSC_F_SCALER_OVERFLOW_INT_1,
	MCSC_F_INPUT_VERTICAL_UNF_INT_1,
	MCSC_F_INPUT_VERTICAL_OVF_INT_1,
	MCSC_F_INPUT_HORIZONTAL_UNF_INT_1,
	MCSC_F_INPUT_HORIZONTAL_OVF_INT_1,
	MCSC_F_SHADOW_TRIGGER_INT_1,
	MCSC_F_SHADOW_HW_TRIGGER_INT_1,
	MCSC_F_CORE_FINISH_INT_1,
	MCSC_F_WDMA_FINISH_INT_1,
	MCSC_F_FRAME_START_INT_1,
	MCSC_F_FRAME_END_INT_1,
	MCSC_F_SCALER_VERSION,
	MCSC_F_SWRESET,
	MCSC_F_HWFC_MODE,
	MCSC_F_REGION_IDX_BIN_B,
	MCSC_F_REGION_IDX_BIN_A,
	MCSC_F_REGION_IDX_GRAY_B,
	MCSC_F_REGION_IDX_GRAY_A,
	MCSC_F_CURR_REGION_B,
	MCSC_F_CURR_REGION_A,
	MCSC_F_FORMAT_A,
	MCSC_F_ID2_A,
	MCSC_F_ID1_A,
	MCSC_F_ID0_A,
	MCSC_F_PLANE_A,
	MCSC_F_TOTAL_IMAGE_BYTE0_A,
	MCSC_F_TOTAL_WIDTH_BYTE0_A,
	MCSC_F_TOTAL_IMAGE_BYTE1_A,
	MCSC_F_TOTAL_WIDTH_BYTE1_A,
	MCSC_F_TOTAL_IMAGE_BYTE2_A,
	MCSC_F_TOTAL_WIDTH_BYTE2_A,
	MCSC_F_FORMAT_B,
	MCSC_F_ID2_B,
	MCSC_F_ID1_B,
	MCSC_F_ID0_B,
	MCSC_F_PLANE_B,
	MCSC_F_TOTAL_IMAGE_BYTE0_B,
	MCSC_F_TOTAL_WIDTH_BYTE0_B,
	MCSC_F_TOTAL_IMAGE_BYTE1_B,
	MCSC_F_TOTAL_WIDTH_BYTE1_B,
	MCSC_F_TOTAL_IMAGE_BYTE2_B,
	MCSC_F_TOTAL_WIDTH_BYTE2_B,
	MCSC_F_FRAME_START_SELECT,
	MCSC_F_INDEX_RESET,
	MCSC_F_HWFC_ENABLE_AUTO_CLEAR,
	MCSC_F_UVSP_BINNING_X,
	MCSC_F_UVSP_BINNING_Y,
	MCSC_F_UVSP_RADIAL_EN,
	MCSC_F_UVSP_RADIAL_CENTER_X,
	MCSC_F_UVSP_RADIAL_CENTER_Y,
	MCSC_F_UVSP_RADIAL_RANDOM_EN,
	MCSC_F_UVSP_RADIAL_RANDOM_POWER,
	MCSC_F_UVSP_RADIAL_GAIN_ADD_ONE,
	MCSC_F_UVSP_RADIAL_ALPHA_R,
	MCSC_F_UVSP_RADIAL_ALPHA_G,
	MCSC_F_UVSP_RADIAL_ALPHA_B,
	MCSC_F_UVSP_RADIAL_BIQUAD_A,
	MCSC_F_UVSP_RADIAL_BIQUAD_B,
	MCSC_F_UVSP_RADIAL_BIQUAD_SHIFT_ADDER,
	MCSC_F_UVSP_RADIAL_GREEN,
	MCSC_F_UVSP_RADIAL_REFINE_ENABLE,
	MCSC_F_UVSP_RADIAL_REFINE_LUMA_MIN,
	MCSC_F_UVSP_RADIAL_REFINE_DENOM,
	MCSC_F_UVSP_PEDESTAL_R,
	MCSC_F_UVSP_PEDESTAL_G,
	MCSC_F_UVSP_PEDESTAL_B,
	MCSC_F_UVSP_OUT_OFFSET_R,
	MCSC_F_UVSP_OUT_OFFSET_G,
	MCSC_F_UVSP_OUT_OFFSET_B,
	MCSC_F_UVSP_DESAT_EN,
	MCSC_F_UVSP_DESAT_LOW_U,
	MCSC_F_UVSP_DESAT_HIGH_U,
	MCSC_F_UVSP_DESAT_LOW_V,
	MCSC_F_UVSP_DESAT_HIGH_V,
	MCSC_F_UVSP_DESAT_SHIFT,
	MCSC_F_UVSP_DESAT_LUMA_MAX,
	MCSC_F_UVSP_DESAT_SINGLESIDE,
	MCSC_F_UVSP_DESAT_LUMA_OFFSET,
	MCSC_F_UVSP_DESAT_GAIN_OFFSET,
	MCSC_F_SSB_DMA_RUNNING,
	MCSC_F_SSB_OTF_RUNNING,
	MCSC_F_SSB_FS_BEFORE_FE_INT,
	MCSC_F_SSB_OVERFLOW_INT,
	MCSC_F_SSB_INPUT_VERTICAL_UNF_INT,
	MCSC_F_SSB_INPUT_VERTICAL_OVF_INT,
	MCSC_F_SSB_INPUT_HORIZONTAL_UNF_INT,
	MCSC_F_SSB_INPUT_HORIZONTAL_OVF_INT,
	MCSC_F_SSB_SHADOW_TRIGGER_INT,
	MCSC_F_SSB_FRAME_START_INT,
	MCSC_F_SSB_FRAME_END_INT,
	MCSC_F_SSB_FS_BEFORE_FE_INT_MASK,
	MCSC_F_SSB_OVERFLOW_INT_MASK,
	MCSC_F_SSB_INPUT_VERTICAL_UNF_INT_MASK,
	MCSC_F_SSB_INPUT_VERTICAL_OVF_INT_MASK,
	MCSC_F_SSB_INPUT_HORIZONTAL_UNF_INT_MASK,
	MCSC_F_SSB_INPUT_HORIZONTAL_OVF_INT_MASK,
	MCSC_F_SSB_SHADOW_TRIGGER_INT_MASK,
	MCSC_F_SSB_FRAME_START_INT_MASK,
	MCSC_F_SSB_FRAME_END_INT_MASK,
	MCSC_F_SSB_READ_SHADOW_REG,
	MCSC_F_SSB_SW_RESET,
	MCSC_F_SSB_SW_RESET_STATUS,
	MCSC_F_SSB_IMG_WIDTH,
	MCSC_F_SSB_IMG_HEIGHT,
	MCSC_F_SSB_DMA_BASE_ADDR,
	MCSC_F_SSB_CROP_EN,
	MCSC_F_SSB_CROP_START_X,
	MCSC_F_SSB_CROP_START_Y,
	MCSC_F_SSB_CROP_SIZE_X,
	MCSC_F_QACTIVE_DISABLE,
	MCSC_F_SSB_CROP_SIZE_Y,
	MCSC_F_RDMA_DATA_FORMAT,
	MCSC_F_WDMA0_DATA_FORMAT,
	MCSC_F_WDMA1_DATA_FORMAT,
	MCSC_F_WDMA2_DATA_FORMAT,
	MCSC_F_WDMA3_DATA_FORMAT,
	MCSC_F_WDMA4_DATA_FORMAT,
	MCSC_F_RDMA_SWAP_TABLE,
	MCSC_F_WDMA0_SWAP_TABLE,
	MCSC_F_WDMA1_SWAP_TABLE,
	MCSC_F_WDMA2_SWAP_TABLE,
	MCSC_F_WDMA3_SWAP_TABLE,
	MCSC_F_WDMA4_SWAP_TABLE,
	/* MCSC_F_RDMA_QOS_LUT_0,
	MCSC_F_RDMA_QOS_LUT_1,
	MCSC_F_RDMA_QOS_LUT_2,
	MCSC_F_RDMA_QOS_LUT_3,
	MCSC_F_RDMA_QOS_LUT_4,
	MCSC_F_RDMA_QOS_LUT_5,
	MCSC_F_RDMA_QOS_LUT_6,
	MCSC_F_RDMA_QOS_LUT_7,
	MCSC_F_RDMA_QOS_LUT_8,
	MCSC_F_RDMA_QOS_LUT_9,
	MCSC_F_RDMA_QOS_LUT_10,
	MCSC_F_RDMA_QOS_LUT_11,
	MCSC_F_RDMA_QOS_LUT_12,
	MCSC_F_RDMA_QOS_LUT_13,
	MCSC_F_RDMA_QOS_LUT_14,
	MCSC_F_RDMA_QOS_LUT_15,
	MCSC_F_WDMA_QOS_LUT_0,
	MCSC_F_WDMA_QOS_LUT_1,
	MCSC_F_WDMA_QOS_LUT_2,
	MCSC_F_WDMA_QOS_LUT_3,
	MCSC_F_WDMA_QOS_LUT_4,
	MCSC_F_WDMA_QOS_LUT_5,
	MCSC_F_WDMA_QOS_LUT_6,
	MCSC_F_WDMA_QOS_LUT_7,
	MCSC_F_WDMA_QOS_LUT_8,
	MCSC_F_WDMA_QOS_LUT_9,
	MCSC_F_WDMA_QOS_LUT_10,
	MCSC_F_WDMA_QOS_LUT_11,
	MCSC_F_WDMA_QOS_LUT_12,
	MCSC_F_WDMA_QOS_LUT_13,
	MCSC_F_WDMA_QOS_LUT_14,
	MCSC_F_WDMA_QOS_LUT_15, */
	MCSC_F_WDMA0_CRC_RESULT0,
	MCSC_F_WDMA0_CRC_RESULT1,
	MCSC_F_WDMA0_CRC_RESULT2,
	MCSC_F_WDMA1_CRC_RESULT0,
	MCSC_F_WDMA1_CRC_RESULT1,
	MCSC_F_WDMA1_CRC_RESULT2,
	MCSC_F_WDMA2_CRC_RESULT0,
	MCSC_F_WDMA2_CRC_RESULT1,
	MCSC_F_WDMA2_CRC_RESULT2,
	MCSC_F_WDMA3_CRC_RESULT0,
	MCSC_F_WDMA3_CRC_RESULT1,
	MCSC_F_WDMA3_CRC_RESULT2,
	MCSC_F_WDMA4_CRC_RESULT0,
	MCSC_F_WDMA4_CRC_RESULT1,
	MCSC_F_WDMA4_CRC_RESULT2,
	MCSC_F_WDMA0_FLIP_CONTROL,
	MCSC_F_WDMA1_FLIP_CONTROL,
	MCSC_F_WDMA2_FLIP_CONTROL,
	MCSC_F_WDMA3_FLIP_CONTROL,
	MCSC_F_WDMA4_FLIP_CONTROL,
	MCSC_F_RDMA_CLK_EN,
	MCSC_F_WDMA0_CLK_EN,
	MCSC_F_WDMA1_CLK_EN,
	MCSC_F_WDMA2_CLK_EN,
	MCSC_F_WDMA3_CLK_EN,
	MCSC_F_WDMA4_CLK_EN,
	MCSC_F_DMA_CLK_GATE_DISABLE,
	MCSC_F_WDMA0_CLK_GATE_DISABLE,
	MCSC_F_WDMA1_CLK_GATE_DISABLE,
	MCSC_F_WDMA2_CLK_GATE_DISABLE,
	MCSC_F_WDMA3_CLK_GATE_DISABLE,
	MCSC_F_WDMA4_CLK_GATE_DISABLE,
	MCSC_F_RDMA_BASE_ADDR01,
	MCSC_F_RDMA_BASE_ADDR02,
	MCSC_F_RDMA_BASE_ADDR03,
	MCSC_F_RDMA_BASE_ADDR04,
	MCSC_F_RDMA_BASE_ADDR05,
	MCSC_F_RDMA_BASE_ADDR06,
	MCSC_F_RDMA_BASE_ADDR07,
	MCSC_F_RDMA_BASE_ADDR08,
	MCSC_F_RDMA_BASE_ADDR11,
	MCSC_F_RDMA_BASE_ADDR12,
	MCSC_F_RDMA_BASE_ADDR13,
	MCSC_F_RDMA_BASE_ADDR14,
	MCSC_F_RDMA_BASE_ADDR15,
	MCSC_F_RDMA_BASE_ADDR16,
	MCSC_F_RDMA_BASE_ADDR17,
	MCSC_F_RDMA_BASE_ADDR18,
	MCSC_F_RDMA_BASE_ADDR21,
	MCSC_F_RDMA_BASE_ADDR22,
	MCSC_F_RDMA_BASE_ADDR23,
	MCSC_F_RDMA_BASE_ADDR24,
	MCSC_F_RDMA_BASE_ADDR25,
	MCSC_F_RDMA_BASE_ADDR26,
	MCSC_F_RDMA_BASE_ADDR27,
	MCSC_F_RDMA_BASE_ADDR28,
	MCSC_F_RDMA_WIDTH,
	MCSC_F_RDMA_HEIGHT,
	MCSC_F_RDMA_C_STRIDE,
	MCSC_F_RDMA_Y_STRIDE,
	MCSC_F_RDMA_BASE_ADDR_EN1,
	MCSC_F_RDMA_BASE_ADDR_EN2,
	MCSC_F_RDMA_BASE_ADDR_EN3,
	MCSC_F_RDMA_BASE_ADDR_EN4,
	MCSC_F_RDMA_BASE_ADDR_EN5,
	MCSC_F_RDMA_BASE_ADDR_EN6,
	MCSC_F_RDMA_BASE_ADDR_EN7,
	MCSC_F_RDMA_BASE_ADDR_EN8,
	MCSC_F_RDMA_FRAME_CNT_BEFORE,
	MCSC_F_RDMA_FRAME_CNT_PRESENT,
	MCSC_F_WDMA0_BASE_ADDR01,
	MCSC_F_WDMA0_BASE_ADDR02,
	MCSC_F_WDMA0_BASE_ADDR03,
	MCSC_F_WDMA0_BASE_ADDR04,
	MCSC_F_WDMA0_BASE_ADDR05,
	MCSC_F_WDMA0_BASE_ADDR06,
	MCSC_F_WDMA0_BASE_ADDR07,
	MCSC_F_WDMA0_BASE_ADDR08,
	MCSC_F_WDMA0_BASE_ADDR11,
	MCSC_F_WDMA0_BASE_ADDR12,
	MCSC_F_WDMA0_BASE_ADDR13,
	MCSC_F_WDMA0_BASE_ADDR14,
	MCSC_F_WDMA0_BASE_ADDR15,
	MCSC_F_WDMA0_BASE_ADDR16,
	MCSC_F_WDMA0_BASE_ADDR17,
	MCSC_F_WDMA0_BASE_ADDR18,
	MCSC_F_WDMA0_BASE_ADDR21,
	MCSC_F_WDMA0_BASE_ADDR22,
	MCSC_F_WDMA0_BASE_ADDR23,
	MCSC_F_WDMA0_BASE_ADDR24,
	MCSC_F_WDMA0_BASE_ADDR25,
	MCSC_F_WDMA0_BASE_ADDR26,
	MCSC_F_WDMA0_BASE_ADDR27,
	MCSC_F_WDMA0_BASE_ADDR28,
	MCSC_F_WDMA0_WIDTH,
	MCSC_F_WDMA0_HEIGHT,
	MCSC_F_WDMA0_C_STRIDE,
	MCSC_F_WDMA0_Y_STRIDE,
	MCSC_F_WDMA0_BASE_ADDR_EN1,
	MCSC_F_WDMA0_BASE_ADDR_EN2,
	MCSC_F_WDMA0_BASE_ADDR_EN3,
	MCSC_F_WDMA0_BASE_ADDR_EN4,
	MCSC_F_WDMA0_BASE_ADDR_EN5,
	MCSC_F_WDMA0_BASE_ADDR_EN6,
	MCSC_F_WDMA0_BASE_ADDR_EN7,
	MCSC_F_WDMA0_BASE_ADDR_EN8,
	MCSC_F_WDMA0_FRAME_CNT_BEFORE,
	MCSC_F_WDMA0_FRAME_CNT_PRESENT,
	MCSC_F_WDMA1_BASE_ADDR01,
	MCSC_F_WDMA1_BASE_ADDR02,
	MCSC_F_WDMA1_BASE_ADDR03,
	MCSC_F_WDMA1_BASE_ADDR04,
	MCSC_F_WDMA1_BASE_ADDR05,
	MCSC_F_WDMA1_BASE_ADDR06,
	MCSC_F_WDMA1_BASE_ADDR07,
	MCSC_F_WDMA1_BASE_ADDR08,
	MCSC_F_WDMA1_BASE_ADDR11,
	MCSC_F_WDMA1_BASE_ADDR12,
	MCSC_F_WDMA1_BASE_ADDR13,
	MCSC_F_WDMA1_BASE_ADDR14,
	MCSC_F_WDMA1_BASE_ADDR15,
	MCSC_F_WDMA1_BASE_ADDR16,
	MCSC_F_WDMA1_BASE_ADDR17,
	MCSC_F_WDMA1_BASE_ADDR18,
	MCSC_F_WDMA1_BASE_ADDR21,
	MCSC_F_WDMA1_BASE_ADDR22,
	MCSC_F_WDMA1_BASE_ADDR23,
	MCSC_F_WDMA1_BASE_ADDR24,
	MCSC_F_WDMA1_BASE_ADDR25,
	MCSC_F_WDMA1_BASE_ADDR26,
	MCSC_F_WDMA1_BASE_ADDR27,
	MCSC_F_WDMA1_BASE_ADDR28,
	MCSC_F_WDMA1_WIDTH,
	MCSC_F_WDMA1_HEIGHT,
	MCSC_F_WDMA1_C_STRIDE,
	MCSC_F_WDMA1_Y_STRIDE,
	MCSC_F_WDMA1_BASE_ADDR_EN1,
	MCSC_F_WDMA1_BASE_ADDR_EN2,
	MCSC_F_WDMA1_BASE_ADDR_EN3,
	MCSC_F_WDMA1_BASE_ADDR_EN4,
	MCSC_F_WDMA1_BASE_ADDR_EN5,
	MCSC_F_WDMA1_BASE_ADDR_EN6,
	MCSC_F_WDMA1_BASE_ADDR_EN7,
	MCSC_F_WDMA1_BASE_ADDR_EN8,
	MCSC_F_WDMA1_FRAME_CNT_BEFORE,
	MCSC_F_WDMA1_FRAME_CNT_PRESENT,
	MCSC_F_WDMA2_BASE_ADDR01,
	MCSC_F_WDMA2_BASE_ADDR02,
	MCSC_F_WDMA2_BASE_ADDR03,
	MCSC_F_WDMA2_BASE_ADDR04,
	MCSC_F_WDMA2_BASE_ADDR05,
	MCSC_F_WDMA2_BASE_ADDR06,
	MCSC_F_WDMA2_BASE_ADDR07,
	MCSC_F_WDMA2_BASE_ADDR08,
	MCSC_F_WDMA2_BASE_ADDR11,
	MCSC_F_WDMA2_BASE_ADDR12,
	MCSC_F_WDMA2_BASE_ADDR13,
	MCSC_F_WDMA2_BASE_ADDR14,
	MCSC_F_WDMA2_BASE_ADDR15,
	MCSC_F_WDMA2_BASE_ADDR16,
	MCSC_F_WDMA2_BASE_ADDR17,
	MCSC_F_WDMA2_BASE_ADDR18,
	MCSC_F_WDMA2_BASE_ADDR21,
	MCSC_F_WDMA2_BASE_ADDR22,
	MCSC_F_WDMA2_BASE_ADDR23,
	MCSC_F_WDMA2_BASE_ADDR24,
	MCSC_F_WDMA2_BASE_ADDR25,
	MCSC_F_WDMA2_BASE_ADDR26,
	MCSC_F_WDMA2_BASE_ADDR27,
	MCSC_F_WDMA2_BASE_ADDR28,
	MCSC_F_WDMA2_WIDTH,
	MCSC_F_WDMA2_HEIGHT,
	MCSC_F_WDMA2_C_STRIDE,
	MCSC_F_WDMA2_Y_STRIDE,
	MCSC_F_WDMA2_BASE_ADDR_EN1,
	MCSC_F_WDMA2_BASE_ADDR_EN2,
	MCSC_F_WDMA2_BASE_ADDR_EN3,
	MCSC_F_WDMA2_BASE_ADDR_EN4,
	MCSC_F_WDMA2_BASE_ADDR_EN5,
	MCSC_F_WDMA2_BASE_ADDR_EN6,
	MCSC_F_WDMA2_BASE_ADDR_EN7,
	MCSC_F_WDMA2_BASE_ADDR_EN8,
	MCSC_F_WDMA2_FRAME_CNT_BEFORE,
	MCSC_F_WDMA2_FRAME_CNT_PRESENT,
	MCSC_F_WDMA3_BASE_ADDR01,
	MCSC_F_WDMA3_BASE_ADDR02,
	MCSC_F_WDMA3_BASE_ADDR03,
	MCSC_F_WDMA3_BASE_ADDR04,
	MCSC_F_WDMA3_BASE_ADDR05,
	MCSC_F_WDMA3_BASE_ADDR06,
	MCSC_F_WDMA3_BASE_ADDR07,
	MCSC_F_WDMA3_BASE_ADDR08,
	MCSC_F_WDMA3_BASE_ADDR11,
	MCSC_F_WDMA3_BASE_ADDR12,
	MCSC_F_WDMA3_BASE_ADDR13,
	MCSC_F_WDMA3_BASE_ADDR14,
	MCSC_F_WDMA3_BASE_ADDR15,
	MCSC_F_WDMA3_BASE_ADDR16,
	MCSC_F_WDMA3_BASE_ADDR17,
	MCSC_F_WDMA3_BASE_ADDR18,
	MCSC_F_WDMA3_BASE_ADDR21,
	MCSC_F_WDMA3_BASE_ADDR22,
	MCSC_F_WDMA3_BASE_ADDR23,
	MCSC_F_WDMA3_BASE_ADDR24,
	MCSC_F_WDMA3_BASE_ADDR25,
	MCSC_F_WDMA3_BASE_ADDR26,
	MCSC_F_WDMA3_BASE_ADDR27,
	MCSC_F_WDMA3_BASE_ADDR28,
	MCSC_F_WDMA3_WIDTH,
	MCSC_F_WDMA3_HEIGHT,
	MCSC_F_WDMA3_C_STRIDE,
	MCSC_F_WDMA3_Y_STRIDE,
	MCSC_F_WDMA3_BASE_ADDR_EN1,
	MCSC_F_WDMA3_BASE_ADDR_EN2,
	MCSC_F_WDMA3_BASE_ADDR_EN3,
	MCSC_F_WDMA3_BASE_ADDR_EN4,
	MCSC_F_WDMA3_BASE_ADDR_EN5,
	MCSC_F_WDMA3_BASE_ADDR_EN6,
	MCSC_F_WDMA3_BASE_ADDR_EN7,
	MCSC_F_WDMA3_BASE_ADDR_EN8,
	MCSC_F_WDMA3_FRAME_CNT_BEFORE,
	MCSC_F_WDMA3_FRAME_CNT_PRESENT,
	MCSC_F_WDMA4_BASE_ADDR01,
	MCSC_F_WDMA4_BASE_ADDR02,
	MCSC_F_WDMA4_BASE_ADDR03,
	MCSC_F_WDMA4_BASE_ADDR04,
	MCSC_F_WDMA4_BASE_ADDR05,
	MCSC_F_WDMA4_BASE_ADDR06,
	MCSC_F_WDMA4_BASE_ADDR07,
	MCSC_F_WDMA4_BASE_ADDR08,
	MCSC_F_WDMA4_BASE_ADDR11,
	MCSC_F_WDMA4_BASE_ADDR12,
	MCSC_F_WDMA4_BASE_ADDR13,
	MCSC_F_WDMA4_BASE_ADDR14,
	MCSC_F_WDMA4_BASE_ADDR15,
	MCSC_F_WDMA4_BASE_ADDR16,
	MCSC_F_WDMA4_BASE_ADDR17,
	MCSC_F_WDMA4_BASE_ADDR18,
	MCSC_F_WDMA4_BASE_ADDR21,
	MCSC_F_WDMA4_BASE_ADDR22,
	MCSC_F_WDMA4_BASE_ADDR23,
	MCSC_F_WDMA4_BASE_ADDR24,
	MCSC_F_WDMA4_BASE_ADDR25,
	MCSC_F_WDMA4_BASE_ADDR26,
	MCSC_F_WDMA4_BASE_ADDR27,
	MCSC_F_WDMA4_BASE_ADDR28,
	MCSC_F_WDMA4_WIDTH,
	MCSC_F_WDMA4_HEIGHT,
	MCSC_F_WDMA4_C_STRIDE,
	MCSC_F_WDMA4_Y_STRIDE,
	MCSC_F_WDMA4_BASE_ADDR_EN1,
	MCSC_F_WDMA4_BASE_ADDR_EN2,
	MCSC_F_WDMA4_BASE_ADDR_EN3,
	MCSC_F_WDMA4_BASE_ADDR_EN4,
	MCSC_F_WDMA4_BASE_ADDR_EN5,
	MCSC_F_WDMA4_BASE_ADDR_EN6,
	MCSC_F_WDMA4_BASE_ADDR_EN7,
	MCSC_F_WDMA4_BASE_ADDR_EN8,
	MCSC_F_WDMA4_FRAME_CNT_BEFORE,
	MCSC_F_WDMA4_FRAME_CNT_PRESENT,
	MCSC_F_WDMA_PRI_A_5,
	MCSC_F_WDMA_PRI_A_4,
	MCSC_F_WDMA_PRI_A_3,
	MCSC_F_WDMA_PRI_A_2,
	MCSC_F_WDMA_PRI_A_1,
	MCSC_F_WDMA_PRI_A_0,
	MCSC_F_WDMA_PRI_A_8,
	MCSC_F_WDMA_PRI_A_7,
	MCSC_F_WDMA_PRI_A_6,
	MCSC_F_WDMA_PRI_B_6,
	MCSC_F_WDMA_PRI_B_5,
	MCSC_F_WDMA_PRI_B_4,
	MCSC_F_WDMA_PRI_B_3,
	MCSC_F_WDMA_PRI_B_2,
	MCSC_F_WDMA_PRI_B_1,
	MCSC_F_WDMA_PRI_B_0,
	MCSC_F_WDMA_AXI_FIXEDPRITYP,
	MCSC_F_WDMA_AXI_PRITYP,
	MCSC_F_WDMA2_SRAM_BASE,
	MCSC_F_WDMA1_SRAM_BASE,
	MCSC_F_WDMA0_SRAM_BASE,
	MCSC_F_WDMA5_SRAM_BASE,
	MCSC_F_WDMA4_SRAM_BASE,
	MCSC_F_WDMA3_SRAM_BASE,
	MCSC_REG_FIELD_CNT
};

static const struct fimc_is_field mcsc_fields[MCSC_REG_FIELD_CNT] = {
	/* 1.register name 		2.bit start 3.bit width 4.access type 5. reset */
	{"SCALER_ENABLE_0",			0,	1,	RW,	0},	/* SC_GCTRL_0 */
	{"SCALER_ENABLE_1",			0,	1,	RW,	0},	/* SC_GCTRL_1 */
	{"SHADOWING_DISABLE_0",			1,	1,	RW,	0},	/* TRIGGER_CTRL_0 */
	{"SW_TRIGGER_0",			0,	1,	WO,	0},	/* TRIGGER_CTRL_0 */
	{"SHADOWING_DISABLE_1",			1,	1,	RW,	0},	/* TRIGGER_CTRL_1 */
	{"SW_TRIGGER_1",			0,	1,	WO,	0},	/* TRIGGER_CTRL_1 */
	{"APB_CLK_GATE_DISABLE",		0,	1,	RW,	0},	/* APB_CLK_GATE_CTRL */
	{"READ_SHADOW_REG",			0,	1,	RW,	0},	/* READ_SHADOW_REG_CTRL */
	{"STOP_REQ_POST_EN_CTRL_0",		0,	2,	RWI,	0},	/* STOP_REQ_POST_EN_CTRL_0 */
	{"STOP_REQ_POST_EN_CTRL_1",		0,	2,	RWI,	0},	/* STOP_REQ_POST_EN_CTRL_1 */
	{"SW_RESET_GLOBAL",			0,	1,	WO,	0},	/* SC_RESET_CTRL_GLOBAL */
	{"PARTIAL_RESET_ENABLE_0",		1,	1,	RWI,	1},	/* SC_RESET_CTRL_0 */
	{"SW_RESET_0",				0,	1,	WO,	0},	/* SC_RESET_CTRL_0 */
	{"PARTIAL_RESET_ENABLE_1",		1,	1,	RWI,	1},	/* SC_RESET_CTRL_1 */
	{"SW_RESET_1",				0,	1,	WO,	0},	/* SC_RESET_CTRL_1 */
	{"LB_CTRL_0_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* CORE0_CLK_GATE_CTRL */
	/* {"DITHER_0_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	*//* CORE0_CLK_GATE_CTRL */
	{"CORE0_GLOBAL_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* CORE0_CLK_GATE_CTRL */
	{"LB_CTRL_1_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* CORE1_CLK_GATE_CTRL */
	/* {"DITHER_1_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	*//* CORE1_CLK_GATE_CTRL */
	{"CORE1_GLOBAL_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* CORE1_CLK_GATE_CTRL */
	{"SC0_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC0_CLK_GATE_CTRL */
	{"SC1_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC1_CLK_GATE_CTRL */
	{"SC2_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC2_CLK_GATE_CTRL */
	{"SC3_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC3_CLK_GATE_CTRL */
	{"SC4_CLK_GATE_DISABLE",		0,	1,	RWI,	0},	/* SC4_CLK_GATE_CTRL */
	{"PC0_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC0_CONV420_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC0_POST_SC_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* PC0_CLK_GATE_CTRL */
	{"PC1_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC1_CONV420_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC1_POST_SC_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* PC1_CLK_GATE_CTRL */
	{"PC2_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"PC2_CONV420_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"PC2_POST_SC_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* PC2_CLK_GATE_CTRL */
	{"PC3_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC3_CLK_GATE_CTRL */
	{"PC3_CONV420_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	/* PC3_CLK_GATE_CTRL */
	{"PC3_POST_SC_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* PC3_CLK_GATE_CTRL */
	{"PC4_BCHS_CLK_GATE_DISABLE",		2,	1,	RWI,	0},	/* PC4_CLK_GATE_CTRL */
	{"PC4_CONV420_CLK_GATE_DISABLE",	1,	1,	RWI,	0},	/* PC4_CLK_GATE_CTRL */
	{"PC4_POST_SC_CLK_GATE_DISABLE",	0,	1,	RWI,	0},	/* PC4_CLK_GATE_CTRL */
	{"INPUT_SRC0_SEL",			0,	1,	RWI,	0},	/* INPUT_SRC0_CTRL */
	{"INPUT_SRC1_SEL",			0,	1,	RWI,	0},	/* INPUT_SRC1_CTRL */
	{"UVSP_CLK_GATE_DIABLE",		19,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SSB_CHAIN_SEL",			18,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SSB_ENABLE",				17,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"UVSP_CHAIN_SEL",			16,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"UVSP_ENABLE",				15,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SC4_INPUT_SEL",			12,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SC3_INPUT_SEL",			9,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SC2_INPUT_SEL",			6,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SC1_INPUT_SEL",			3,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"SC0_INPUT_SEL",			0,	1,	RWI,	0},	/* SCALER_PATH_CTRL */
	{"OTF_OUT_SEL",				0,	3,	RWI,	0},	/* OTF_OUT_PATH_CTRL */
	/* {"DITHER_0_ON",			0,	1,	RWI,	0},	*//* DITHER_0_CTRL */
	/* {"DITHER_1_ON",			0,	1,	RWI,	0},	*//* DITHER_1_CTRL */
	{"INPUT0_IMAGE_HSIZE",			16,	14,	RWI,	0x10},	/* INPUT0_IMG_SIZE */
	{"INPUT0_IMAGE_VSIZE",			0,	14,	RWI,	0x10},	/* INPUT0_IMG_SIZE */
	{"INPUT1_IMAGE_HSIZE",			16,	14,	RWI,	0x10},	/* INPUT1_IMG_SIZE */
	{"INPUT1_IMAGE_VSIZE",			0,	14,	RWI,	0x10},	/* INPUT1_IMG_SIZE */
	/* {"INPUT0_PEAK_FIFO_CNT",		16,	14,	RO,	0x0},	*//* INPUT0_FIFO_STATUS */
	/* {"INPUT0_CUR_FIFO_CNT",		0,	14,	RO,	0x0},	*//* INPUT0_FIFO_STATUS */
	{"SC0_BYPASS",				1,	1,	RWI,	0},	/* SC0_CTRL */
	{"SC0_ENABLE",				0,	1,	RWI,	0},	/* SC0_CTRL */
	{"SC0_SRC_HPOS",			16,	14,	RWI,	0},	/* SC0_SRC_POS */
	{"SC0_SRC_VPOS",			0,	14,	RWI,	0},	/* SC0_SRC_POS */
	{"SC0_SRC_HSIZE",			16,	14,	RWI,	0x10},	/* SC0_SRC_SIZE */
	{"SC0_SRC_VSIZE",			0,	14,	RWI,	0x10},	/* SC0_SRC_SIZE */
	{"SC0_DST_HSIZE",			16,	14,	RWI,	0x10},	/* SC0_DST_SIZE */
	{"SC0_DST_VSIZE",			0,	14,	RWI,	0x10},	/* SC0_DST_SIZE */
	{"SC0_H_RATIO",				0,	24,	RWI,	0x100000},	/* SC0_H_RATIO */
	{"SC0_V_RATIO",				0,	24,	RWI,	0x100000},	/* SC0_V_RATIO */
	{"SC0_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC0_H_INIT_PHASE_OFFSET */
	{"SC0_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC0_V_INIT_PHASE_OFFSET */
	{"SC0_ROUND_MODE",			0,	1,	RWI,	0x1},	/* SC0_ROUND_MODE */
	/* {"SC0_V_COEFF_SEL",			16,	3,	RWI,	0x0},	*//* SC0_COEFF_CTRL */
	/* {"SC0_H_COEFF_SEL",			0,	3,	RWI,	0x0},	*//* SC0_COEFF_CTRL */
	{"SC0_V_COEFF_0B",			16,	9,	RWI,	0x80},	/* SC0_V_COEFF_0AB*/
	{"SC0_V_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0AB*/
	{"SC0_V_COEFF_0D",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_0CD*/
	{"SC0_V_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0CD*/
	{"SC0_V_COEFF_1B",			16,	9,	RWI,	0x7F},	/* SC0_V_COEFF_1AB*/
	{"SC0_V_COEFF_1A",			0,	9,	RWI,	0x1FC},	/* SC0_V_COEFF_1AB*/
	{"SC0_V_COEFF_1D",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_1CD*/
	{"SC0_V_COEFF_1C",			0,	9,	RWI,	0x5},	/* SC0_V_COEFF_1CD*/
	{"SC0_V_COEFF_2B",			16,	9,	RWI,	0x7C},	/* SC0_V_COEFF_2AB*/
	{"SC0_V_COEFF_2A",			0,	9,	RWI,	0x1FA},	/* SC0_V_COEFF_2AB*/
	{"SC0_V_COEFF_2D",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_2CD*/
	{"SC0_V_COEFF_2C",			0,	9,	RWI,	0xB},	/* SC0_V_COEFF_2CD*/
	{"SC0_V_COEFF_3B",			16,	9,	RWI,	0x76},	/* SC0_V_COEFF_3AB*/
	{"SC0_V_COEFF_3A",			0,	9,	RWI,	0x1F8},	/* SC0_V_COEFF_3AB*/
	{"SC0_V_COEFF_3D",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_3CD*/
	{"SC0_V_COEFF_3C",			0,	9,	RWI,	0x13},	/* SC0_V_COEFF_3CD*/
	{"SC0_V_COEFF_4B",			16,	9,	RWI,	0x6F},	/* SC0_V_COEFF_4AB*/
	{"SC0_V_COEFF_4A",			0,	9,	RWI,	0x1F8},	/* SC0_V_COEFF_4AB*/
	{"SC0_V_COEFF_4D",			16,	9,	RWI,	0x1FE},	/* SC0_V_COEFF_4CD*/
	{"SC0_V_COEFF_4C",			0,	9,	RWI,	0x1B},	/* SC0_V_COEFF_4CD*/
	{"SC0_V_COEFF_5B",			16,	9,	RWI,	0x66},	/* SC0_V_COEFF_5AB*/
	{"SC0_V_COEFF_5A",			0,	9,	RWI,	0x1F8},	/* SC0_V_COEFF_5AB*/
	{"SC0_V_COEFF_5D",			16,	9,	RWI,	0x1FD},	/* SC0_V_COEFF_5CD*/
	{"SC0_V_COEFF_5C",			0,	9,	RWI,	0x25},	/* SC0_V_COEFF_5CD*/
	{"SC0_V_COEFF_6B",			16,	9,	RWI,	0x5C},	/* SC0_V_COEFF_6AB*/
	{"SC0_V_COEFF_6A",			0,	9,	RWI,	0x1F8},	/* SC0_V_COEFF_6AB*/
	{"SC0_V_COEFF_6D",			16,	9,	RWI,	0x1FC},	/* SC0_V_COEFF_6CD*/
	{"SC0_V_COEFF_6C",			0,	9,	RWI,	0x30},	/* SC0_V_COEFF_6CD*/
	{"SC0_V_COEFF_7B",			16,	9,	RWI,	0x51},	/* SC0_V_COEFF_7AB*/
	{"SC0_V_COEFF_7A",			0,	9,	RWI,	0x1F9},	/* SC0_V_COEFF_7AB*/
	{"SC0_V_COEFF_7D",			16,	9,	RWI,	0x1FB},	/* SC0_V_COEFF_7CD*/
	{"SC0_V_COEFF_7C",			0,	9,	RWI,	0x3B},	/* SC0_V_COEFF_7CD*/
	{"SC0_V_COEFF_8B",			16,	9,	RWI,	0x46},	/* SC0_V_COEFF_8AB*/
	{"SC0_V_COEFF_8A",			0,	9,	RWI,	0x1FA},	/* SC0_V_COEFF_8AB*/
	{"SC0_V_COEFF_8D",			16,	9,	RWI,	0x1FA},	/* SC0_V_COEFF_8CD*/
	{"SC0_V_COEFF_8C",			0,	9,	RWI,	0x46},	/* SC0_V_COEFF_8CD*/
	{"SC0_H_COEFF_0B",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_0AB*/
	{"SC0_H_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0AB*/
	{"SC0_H_COEFF_0D",			16,	9,	RWI,	0x80},	/* SC0_V_COEFF_0CD*/
	{"SC0_H_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0CD*/
	{"SC0_H_COEFF_0F",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_0EF*/
	{"SC0_H_COEFF_0E",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0EF*/
	{"SC0_H_COEFF_0H",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_0GH*/
	{"SC0_H_COEFF_0G",			0,	9,	RWI,	0x0},	/* SC0_V_COEFF_0GH*/
	{"SC0_H_COEFF_1B",			16,	9,	RWI,	0x2},	/* SC0_V_COEFF_1AB*/
	{"SC0_H_COEFF_1A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_1AB*/
	{"SC0_H_COEFF_1D",			16,	9,	RWI,	0x7F},	/* SC0_V_COEFF_1CD*/
	{"SC0_H_COEFF_1C",			0,	9,	RWI,	0x1FA},	/* SC0_V_COEFF_1CD*/
	{"SC0_H_COEFF_1F",			16,	9,	RWI,	0x1FE},	/* SC0_V_COEFF_1EF*/
	{"SC0_H_COEFF_1E",			0,	9,	RWI,	0x7},	/* SC0_V_COEFF_1EF*/
	{"SC0_H_COEFF_1H",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_1GH*/
	{"SC0_H_COEFF_1G",			0,	9,	RWI,	0x1},	/* SC0_V_COEFF_1GH*/
	{"SC0_H_COEFF_2B",			16,	9,	RWI,	0x4},	/* SC0_V_COEFF_2AB*/
	{"SC0_H_COEFF_2A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_2AB*/
	{"SC0_H_COEFF_2D",			16,	9,	RWI,	0x7D},	/* SC0_V_COEFF_2CD*/
	{"SC0_H_COEFF_2C",			0,	9,	RWI,	0x1F4},	/* SC0_V_COEFF_2CD*/
	{"SC0_H_COEFF_2F",			16,	9,	RWI,	0x1FB},	/* SC0_V_COEFF_2EF*/
	{"SC0_H_COEFF_2E",			0,	9,	RWI,	0x10},	/* SC0_V_COEFF_2EF*/
	{"SC0_H_COEFF_2H",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_2GH*/
	{"SC0_H_COEFF_2G",			0,	9,	RWI,	0x1},	/* SC0_V_COEFF_2GH*/
	{"SC0_H_COEFF_3B",			16,	9,	RWI,	0x5},	/* SC0_V_COEFF_3AB*/
	{"SC0_H_COEFF_3A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_3AB*/
	{"SC0_H_COEFF_3D",			16,	9,	RWI,	0x78},	/* SC0_V_COEFF_3CD*/
	{"SC0_H_COEFF_3C",			0,	9,	RWI,	0x1F1},	/* SC0_V_COEFF_3CD*/
	{"SC0_H_COEFF_3F",			16,	9,	RWI,	0x1F8},	/* SC0_V_COEFF_3EF*/
	{"SC0_H_COEFF_3E",			0,	9,	RWI,	0x19},	/* SC0_V_COEFF_3EF*/
	{"SC0_H_COEFF_3H",			16,	9,	RWI,	0x0},	/* SC0_V_COEFF_3GH*/
	{"SC0_H_COEFF_3G",			0,	9,	RWI,	0x2},	/* SC0_V_COEFF_3GH*/
	{"SC0_H_COEFF_4B",			16,	9,	RWI,	0x6},	/* SC0_V_COEFF_4AB*/
	{"SC0_H_COEFF_4A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_4AB*/
	{"SC0_H_COEFF_4D",			16,	9,	RWI,	0x72},	/* SC0_V_COEFF_4CD*/
	{"SC0_H_COEFF_4C",			0,	9,	RWI,	0x1EE},	/* SC0_V_COEFF_4CD*/
	{"SC0_H_COEFF_4F",			16,	9,	RWI,	0x1F6},	/* SC0_V_COEFF_4EF*/
	{"SC0_H_COEFF_4E",			0,	9,	RWI,	0x23},	/* SC0_V_COEFF_4EF*/
	{"SC0_H_COEFF_4H",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_4GH*/
	{"SC0_H_COEFF_4G",			0,	9,	RWI,	0x3},	/* SC0_V_COEFF_4GH*/
	{"SC0_H_COEFF_5B",			16,	9,	RWI,	0x6},	/* SC0_V_COEFF_5AB*/
	{"SC0_H_COEFF_5A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_5AB*/
	{"SC0_H_COEFF_5D",			16,	9,	RWI,	0x6B},	/* SC0_V_COEFF_5CD*/
	{"SC0_H_COEFF_5C",			0,	9,	RWI,	0x1EC},	/* SC0_V_COEFF_5CD*/
	{"SC0_H_COEFF_5F",			16,	9,	RWI,	0x1F3},	/* SC0_V_COEFF_5EF*/
	{"SC0_H_COEFF_5E",			0,	9,	RWI,	0x2E},	/* SC0_V_COEFF_5EF*/
	{"SC0_H_COEFF_5H",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_5GH*/
	{"SC0_H_COEFF_5G",			0,	9,	RWI,	0x4},	/* SC0_V_COEFF_5GH*/
	{"SC0_H_COEFF_6B",			16,	9,	RWI,	0x7},	/* SC0_V_COEFF_6AB*/
	{"SC0_H_COEFF_6A",			0,	9,	RWI,	0x1FE},	/* SC0_V_COEFF_6AB*/
	{"SC0_H_COEFF_6D",			16,	9,	RWI,	0x63},	/* SC0_V_COEFF_6CD*/
	{"SC0_H_COEFF_6C",			0,	9,	RWI,	0x1EB},	/* SC0_V_COEFF_6CD*/
	{"SC0_H_COEFF_6F",			16,	9,	RWI,	0x1F0},	/* SC0_V_COEFF_6EF*/
	{"SC0_H_COEFF_6E",			0,	9,	RWI,	0x39},	/* SC0_V_COEFF_6EF*/
	{"SC0_H_COEFF_6H",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_6GH*/
	{"SC0_H_COEFF_6G",			0,	9,	RWI,	0x5},	/* SC0_V_COEFF_6GH*/
	{"SC0_H_COEFF_7B",			16,	9,	RWI,	0x6},	/* SC0_V_COEFF_7AB*/
	{"SC0_H_COEFF_7A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_7AB*/
	{"SC0_H_COEFF_7D",			16,	9,	RWI,	0x59},	/* SC0_V_COEFF_7CD*/
	{"SC0_H_COEFF_7C",			0,	9,	RWI,	0x1EC},	/* SC0_V_COEFF_7CD*/
	{"SC0_H_COEFF_7F",			16,	9,	RWI,	0x1EE},	/* SC0_V_COEFF_7EF*/
	{"SC0_H_COEFF_7E",			0,	9,	RWI,	0x44},	/* SC0_V_COEFF_7EF*/
	{"SC0_H_COEFF_7H",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_7GH*/
	{"SC0_H_COEFF_7G",			0,	9,	RWI,	0x5},	/* SC0_V_COEFF_7GH*/
	{"SC0_H_COEFF_8B",			16,	9,	RWI,	0x6},	/* SC0_V_COEFF_8AB*/
	{"SC0_H_COEFF_8A",			0,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_8AB*/
	{"SC0_H_COEFF_8D",			16,	9,	RWI,	0x4F},	/* SC0_V_COEFF_8CD*/
	{"SC0_H_COEFF_8C",			0,	9,	RWI,	0x1EC},	/* SC0_V_COEFF_8CD*/
	{"SC0_H_COEFF_8F",			16,	9,	RWI,	0x1EC},	/* SC0_V_COEFF_8EF*/
	{"SC0_H_COEFF_8E",			0,	9,	RWI,	0x4F},	/* SC0_V_COEFF_8EF*/
	{"SC0_H_COEFF_8H",			16,	9,	RWI,	0x1FF},	/* SC0_V_COEFF_8GH*/
	{"SC0_H_COEFF_8G",			0,	9,	RWI,	0x6},	/* SC0_V_COEFF_8GH*/
	{"SC1_BYPASS",				1,	1,	RWI,	0},	/* SC1_CTRL */
	{"SC1_ENABLE",				0,	1,	RWI,	0},	/* SC1_CTRL */
	{"SC1_SRC_HPOS",			16,	14,	RWI,	0},	/* SC1_SRC_POS */
	{"SC1_SRC_VPOS",			0,	14,	RWI,	0},	/* SC1_SRC_POS */
	{"SC1_SRC_HSIZE",			16,	14,	RWI,	0x10},	/* SC1_SRC_SIZE */
	{"SC1_SRC_VSIZE",			0,	14,	RWI,	0x10},	/* SC1_SRC_SIZE */
	{"SC1_DST_HSIZE",			16,	14,	RWI,	0x10},	/* SC1_DST_SIZE */
	{"SC1_DST_VSIZE",			0,	14,	RWI,	0x10},	/* SC1_DST_SIZE */
	{"SC1_H_RATIO",				0,	24,	RWI,	0x100000},	/* SC1_H_RATIO */
	{"SC1_V_RATIO",				0,	24,	RWI,	0x100000},	/* SC1_V_RATIO */
	{"SC1_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC1_H_INIT_PHASE_OFFSET */
	{"SC1_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC1_V_INIT_PHASE_OFFSET */
	{"SC1_ROUND_MODE",			0,	1,	RWI,	0x1},	/* SC1_ROUND_MODE */
	/* {"SC1_V_COEFF_SEL",			16,	3,	RWI,	0x0},	*//* SC1_COEFF_CTRL */
	/* {"SC1_H_COEFF_SEL",			0,	3,	RWI,	0x0},	*//* SC1_COEFF_CTRL */
	{"SC1_V_COEFF_0B",			16,	9,	RWI,	0x80},	/* SC1_V_COEFF_0AB*/
	{"SC1_V_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0AB*/
	{"SC1_V_COEFF_0D",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_0CD*/
	{"SC1_V_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0CD*/
	{"SC1_V_COEFF_1B",			16,	9,	RWI,	0x7F},	/* SC1_V_COEFF_1AB*/
	{"SC1_V_COEFF_1A",			0,	9,	RWI,	0x1FC},	/* SC1_V_COEFF_1AB*/
	{"SC1_V_COEFF_1D",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_1CD*/
	{"SC1_V_COEFF_1C",			0,	9,	RWI,	0x5},	/* SC1_V_COEFF_1CD*/
	{"SC1_V_COEFF_2B",			16,	9,	RWI,	0x7C},	/* SC1_V_COEFF_2AB*/
	{"SC1_V_COEFF_2A",			0,	9,	RWI,	0x1FA},	/* SC1_V_COEFF_2AB*/
	{"SC1_V_COEFF_2D",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_2CD*/
	{"SC1_V_COEFF_2C",			0,	9,	RWI,	0xB},	/* SC1_V_COEFF_2CD*/
	{"SC1_V_COEFF_3B",			16,	9,	RWI,	0x76},	/* SC1_V_COEFF_3AB*/
	{"SC1_V_COEFF_3A",			0,	9,	RWI,	0x1F8},	/* SC1_V_COEFF_3AB*/
	{"SC1_V_COEFF_3D",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_3CD*/
	{"SC1_V_COEFF_3C",			0,	9,	RWI,	0x13},	/* SC1_V_COEFF_3CD*/
	{"SC1_V_COEFF_4B",			16,	9,	RWI,	0x6F},	/* SC1_V_COEFF_4AB*/
	{"SC1_V_COEFF_4A",			0,	9,	RWI,	0x1F8},	/* SC1_V_COEFF_4AB*/
	{"SC1_V_COEFF_4D",			16,	9,	RWI,	0x1FE},	/* SC1_V_COEFF_4CD*/
	{"SC1_V_COEFF_4C",			0,	9,	RWI,	0x1B},	/* SC1_V_COEFF_4CD*/
	{"SC1_V_COEFF_5B",			16,	9,	RWI,	0x66},	/* SC1_V_COEFF_5AB*/
	{"SC1_V_COEFF_5A",			0,	9,	RWI,	0x1F8},	/* SC1_V_COEFF_5AB*/
	{"SC1_V_COEFF_5D",			16,	9,	RWI,	0x1FD},	/* SC1_V_COEFF_5CD*/
	{"SC1_V_COEFF_5C",			0,	9,	RWI,	0x25},	/* SC1_V_COEFF_5CD*/
	{"SC1_V_COEFF_6B",			16,	9,	RWI,	0x5C},	/* SC1_V_COEFF_6AB*/
	{"SC1_V_COEFF_6A",			0,	9,	RWI,	0x1F8},	/* SC1_V_COEFF_6AB*/
	{"SC1_V_COEFF_6D",			16,	9,	RWI,	0x1FC},	/* SC1_V_COEFF_6CD*/
	{"SC1_V_COEFF_6C",			0,	9,	RWI,	0x30},	/* SC1_V_COEFF_6CD*/
	{"SC1_V_COEFF_7B",			16,	9,	RWI,	0x51},	/* SC1_V_COEFF_7AB*/
	{"SC1_V_COEFF_7A",			0,	9,	RWI,	0x1F9},	/* SC1_V_COEFF_7AB*/
	{"SC1_V_COEFF_7D",			16,	9,	RWI,	0x1FB},	/* SC1_V_COEFF_7CD*/
	{"SC1_V_COEFF_7C",			0,	9,	RWI,	0x3B},	/* SC1_V_COEFF_7CD*/
	{"SC1_V_COEFF_8B",			16,	9,	RWI,	0x46},	/* SC1_V_COEFF_8AB*/
	{"SC1_V_COEFF_8A",			0,	9,	RWI,	0x1FA},	/* SC1_V_COEFF_8AB*/
	{"SC1_V_COEFF_8D",			16,	9,	RWI,	0x1FA},	/* SC1_V_COEFF_8CD*/
	{"SC1_V_COEFF_8C",			0,	9,	RWI,	0x46},	/* SC1_V_COEFF_8CD*/
	{"SC1_H_COEFF_0B",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_0AB*/
	{"SC1_H_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0AB*/
	{"SC1_H_COEFF_0D",			16,	9,	RWI,	0x80},	/* SC1_V_COEFF_0CD*/
	{"SC1_H_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0CD*/
	{"SC1_H_COEFF_0F",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_0EF*/
	{"SC1_H_COEFF_0E",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0EF*/
	{"SC1_H_COEFF_0H",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_0GH*/
	{"SC1_H_COEFF_0G",			0,	9,	RWI,	0x0},	/* SC1_V_COEFF_0GH*/
	{"SC1_H_COEFF_1B",			16,	9,	RWI,	0x2},	/* SC1_V_COEFF_1AB*/
	{"SC1_H_COEFF_1A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_1AB*/
	{"SC1_H_COEFF_1D",			16,	9,	RWI,	0x7F},	/* SC1_V_COEFF_1CD*/
	{"SC1_H_COEFF_1C",			0,	9,	RWI,	0x1FA},	/* SC1_V_COEFF_1CD*/
	{"SC1_H_COEFF_1F",			16,	9,	RWI,	0x1FE},	/* SC1_V_COEFF_1EF*/
	{"SC1_H_COEFF_1E",			0,	9,	RWI,	0x7},	/* SC1_V_COEFF_1EF*/
	{"SC1_H_COEFF_1H",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_1GH*/
	{"SC1_H_COEFF_1G",			0,	9,	RWI,	0x1},	/* SC1_V_COEFF_1GH*/
	{"SC1_H_COEFF_2B",			16,	9,	RWI,	0x4},	/* SC1_V_COEFF_2AB*/
	{"SC1_H_COEFF_2A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_2AB*/
	{"SC1_H_COEFF_2D",			16,	9,	RWI,	0x7D},	/* SC1_V_COEFF_2CD*/
	{"SC1_H_COEFF_2C",			0,	9,	RWI,	0x1F4},	/* SC1_V_COEFF_2CD*/
	{"SC1_H_COEFF_2F",			16,	9,	RWI,	0x1FB},	/* SC1_V_COEFF_2EF*/
	{"SC1_H_COEFF_2E",			0,	9,	RWI,	0x10},	/* SC1_V_COEFF_2EF*/
	{"SC1_H_COEFF_2H",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_2GH*/
	{"SC1_H_COEFF_2G",			0,	9,	RWI,	0x1},	/* SC1_V_COEFF_2GH*/
	{"SC1_H_COEFF_3B",			16,	9,	RWI,	0x5},	/* SC1_V_COEFF_3AB*/
	{"SC1_H_COEFF_3A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_3AB*/
	{"SC1_H_COEFF_3D",			16,	9,	RWI,	0x78},	/* SC1_V_COEFF_3CD*/
	{"SC1_H_COEFF_3C",			0,	9,	RWI,	0x1F1},	/* SC1_V_COEFF_3CD*/
	{"SC1_H_COEFF_3F",			16,	9,	RWI,	0x1F8},	/* SC1_V_COEFF_3EF*/
	{"SC1_H_COEFF_3E",			0,	9,	RWI,	0x19},	/* SC1_V_COEFF_3EF*/
	{"SC1_H_COEFF_3H",			16,	9,	RWI,	0x0},	/* SC1_V_COEFF_3GH*/
	{"SC1_H_COEFF_3G",			0,	9,	RWI,	0x2},	/* SC1_V_COEFF_3GH*/
	{"SC1_H_COEFF_4B",			16,	9,	RWI,	0x6},	/* SC1_V_COEFF_4AB*/
	{"SC1_H_COEFF_4A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_4AB*/
	{"SC1_H_COEFF_4D",			16,	9,	RWI,	0x72},	/* SC1_V_COEFF_4CD*/
	{"SC1_H_COEFF_4C",			0,	9,	RWI,	0x1EE},	/* SC1_V_COEFF_4CD*/
	{"SC1_H_COEFF_4F",			16,	9,	RWI,	0x1F6},	/* SC1_V_COEFF_4EF*/
	{"SC1_H_COEFF_4E",			0,	9,	RWI,	0x23},	/* SC1_V_COEFF_4EF*/
	{"SC1_H_COEFF_4H",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_4GH*/
	{"SC1_H_COEFF_4G",			0,	9,	RWI,	0x3},	/* SC1_V_COEFF_4GH*/
	{"SC1_H_COEFF_5B",			16,	9,	RWI,	0x6},	/* SC1_V_COEFF_5AB*/
	{"SC1_H_COEFF_5A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_5AB*/
	{"SC1_H_COEFF_5D",			16,	9,	RWI,	0x6B},	/* SC1_V_COEFF_5CD*/
	{"SC1_H_COEFF_5C",			0,	9,	RWI,	0x1EC},	/* SC1_V_COEFF_5CD*/
	{"SC1_H_COEFF_5F",			16,	9,	RWI,	0x1F3},	/* SC1_V_COEFF_5EF*/
	{"SC1_H_COEFF_5E",			0,	9,	RWI,	0x2E},	/* SC1_V_COEFF_5EF*/
	{"SC1_H_COEFF_5H",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_5GH*/
	{"SC1_H_COEFF_5G",			0,	9,	RWI,	0x4},	/* SC1_V_COEFF_5GH*/
	{"SC1_H_COEFF_6B",			16,	9,	RWI,	0x7},	/* SC1_V_COEFF_6AB*/
	{"SC1_H_COEFF_6A",			0,	9,	RWI,	0x1FE},	/* SC1_V_COEFF_6AB*/
	{"SC1_H_COEFF_6D",			16,	9,	RWI,	0x63},	/* SC1_V_COEFF_6CD*/
	{"SC1_H_COEFF_6C",			0,	9,	RWI,	0x1EB},	/* SC1_V_COEFF_6CD*/
	{"SC1_H_COEFF_6F",			16,	9,	RWI,	0x1F0},	/* SC1_V_COEFF_6EF*/
	{"SC1_H_COEFF_6E",			0,	9,	RWI,	0x39},	/* SC1_V_COEFF_6EF*/
	{"SC1_H_COEFF_6H",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_6GH*/
	{"SC1_H_COEFF_6G",			0,	9,	RWI,	0x5},	/* SC1_V_COEFF_6GH*/
	{"SC1_H_COEFF_7B",			16,	9,	RWI,	0x6},	/* SC1_V_COEFF_7AB*/
	{"SC1_H_COEFF_7A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_7AB*/
	{"SC1_H_COEFF_7D",			16,	9,	RWI,	0x59},	/* SC1_V_COEFF_7CD*/
	{"SC1_H_COEFF_7C",			0,	9,	RWI,	0x1EC},	/* SC1_V_COEFF_7CD*/
	{"SC1_H_COEFF_7F",			16,	9,	RWI,	0x1EE},	/* SC1_V_COEFF_7EF*/
	{"SC1_H_COEFF_7E",			0,	9,	RWI,	0x44},	/* SC1_V_COEFF_7EF*/
	{"SC1_H_COEFF_7H",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_7GH*/
	{"SC1_H_COEFF_7G",			0,	9,	RWI,	0x5},	/* SC1_V_COEFF_7GH*/
	{"SC1_H_COEFF_8B",			16,	9,	RWI,	0x6},	/* SC1_V_COEFF_8AB*/
	{"SC1_H_COEFF_8A",			0,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_8AB*/
	{"SC1_H_COEFF_8D",			16,	9,	RWI,	0x4F},	/* SC1_V_COEFF_8CD*/
	{"SC1_H_COEFF_8C",			0,	9,	RWI,	0x1EC},	/* SC1_V_COEFF_8CD*/
	{"SC1_H_COEFF_8F",			16,	9,	RWI,	0x1EC},	/* SC1_V_COEFF_8EF*/
	{"SC1_H_COEFF_8E",			0,	9,	RWI,	0x4F},	/* SC1_V_COEFF_8EF*/
	{"SC1_H_COEFF_8H",			16,	9,	RWI,	0x1FF},	/* SC1_V_COEFF_8GH*/
	{"SC1_H_COEFF_8G",			0,	9,	RWI,	0x6},	/* SC1_V_COEFF_8GH*/
	{"SC2_BYPASS",				1,	1,	RWI,	0},	/* SC2_CTRL */
	{"SC2_ENABLE",				0,	1,	RWI,	0},	/* SC2_CTRL */
	{"SC2_SRC_HPOS",			16,	14,	RWI,	0},	/* SC2_SRC_POS */
	{"SC2_SRC_VPOS",			0,	14,	RWI,	0},	/* SC2_SRC_POS */
	{"SC2_SRC_HSIZE",			16,	14,	RWI,	0x10},	/* SC2_SRC_SIZE */
	{"SC2_SRC_VSIZE",			0,	14,	RWI,	0x10},	/* SC2_SRC_SIZE */
	{"SC2_DST_HSIZE",			16,	14,	RWI,	0x10},	/* SC2_DST_SIZE */
	{"SC2_DST_VSIZE",			0,	14,	RWI,	0x10},	/* SC2_DST_SIZE */
	{"SC2_H_RATIO",				0,	24,	RWI,	0x100000},	/* SC2_H_RATIO */
	{"SC2_V_RATIO",				0,	24,	RWI,	0x100000},	/* SC2_V_RATIO */
	{"SC2_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC2_H_INIT_PHASE_OFFSET */
	{"SC2_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC2_V_INIT_PHASE_OFFSET */
	{"SC2_ROUND_MODE",			0,	1,	RWI,	0x1},	/* SC2_ROUND_MODE */
	/* {"SC2_V_COEFF_SEL",			16,	3,	RWI,	0x0},	*//* SC2_COEFF_CTRL */
	/* {"SC2_H_COEFF_SEL",			0,	3,	RWI,	0x0},	*//* SC2_COEFF_CTRL */
	{"SC2_V_COEFF_0B",			16,	9,	RWI,	0x80},	/* SC2_V_COEFF_0AB*/
	{"SC2_V_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0AB*/
	{"SC2_V_COEFF_0D",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_0CD*/
	{"SC2_V_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0CD*/
	{"SC2_V_COEFF_1B",			16,	9,	RWI,	0x7F},	/* SC2_V_COEFF_1AB*/
	{"SC2_V_COEFF_1A",			0,	9,	RWI,	0x1FC},	/* SC2_V_COEFF_1AB*/
	{"SC2_V_COEFF_1D",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_1CD*/
	{"SC2_V_COEFF_1C",			0,	9,	RWI,	0x5},	/* SC2_V_COEFF_1CD*/
	{"SC2_V_COEFF_2B",			16,	9,	RWI,	0x7C},	/* SC2_V_COEFF_2AB*/
	{"SC2_V_COEFF_2A",			0,	9,	RWI,	0x1FA},	/* SC2_V_COEFF_2AB*/
	{"SC2_V_COEFF_2D",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_2CD*/
	{"SC2_V_COEFF_2C",			0,	9,	RWI,	0xB},	/* SC2_V_COEFF_2CD*/
	{"SC2_V_COEFF_3B",			16,	9,	RWI,	0x76},	/* SC2_V_COEFF_3AB*/
	{"SC2_V_COEFF_3A",			0,	9,	RWI,	0x1F8},	/* SC2_V_COEFF_3AB*/
	{"SC2_V_COEFF_3D",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_3CD*/
	{"SC2_V_COEFF_3C",			0,	9,	RWI,	0x13},	/* SC2_V_COEFF_3CD*/
	{"SC2_V_COEFF_4B",			16,	9,	RWI,	0x6F},	/* SC2_V_COEFF_4AB*/
	{"SC2_V_COEFF_4A",			0,	9,	RWI,	0x1F8},	/* SC2_V_COEFF_4AB*/
	{"SC2_V_COEFF_4D",			16,	9,	RWI,	0x1FE},	/* SC2_V_COEFF_4CD*/
	{"SC2_V_COEFF_4C",			0,	9,	RWI,	0x1B},	/* SC2_V_COEFF_4CD*/
	{"SC2_V_COEFF_5B",			16,	9,	RWI,	0x66},	/* SC2_V_COEFF_5AB*/
	{"SC2_V_COEFF_5A",			0,	9,	RWI,	0x1F8},	/* SC2_V_COEFF_5AB*/
	{"SC2_V_COEFF_5D",			16,	9,	RWI,	0x1FD},	/* SC2_V_COEFF_5CD*/
	{"SC2_V_COEFF_5C",			0,	9,	RWI,	0x25},	/* SC2_V_COEFF_5CD*/
	{"SC2_V_COEFF_6B",			16,	9,	RWI,	0x5C},	/* SC2_V_COEFF_6AB*/
	{"SC2_V_COEFF_6A",			0,	9,	RWI,	0x1F8},	/* SC2_V_COEFF_6AB*/
	{"SC2_V_COEFF_6D",			16,	9,	RWI,	0x1FC},	/* SC2_V_COEFF_6CD*/
	{"SC2_V_COEFF_6C",			0,	9,	RWI,	0x30},	/* SC2_V_COEFF_6CD*/
	{"SC2_V_COEFF_7B",			16,	9,	RWI,	0x51},	/* SC2_V_COEFF_7AB*/
	{"SC2_V_COEFF_7A",			0,	9,	RWI,	0x1F9},	/* SC2_V_COEFF_7AB*/
	{"SC2_V_COEFF_7D",			16,	9,	RWI,	0x1FB},	/* SC2_V_COEFF_7CD*/
	{"SC2_V_COEFF_7C",			0,	9,	RWI,	0x3B},	/* SC2_V_COEFF_7CD*/
	{"SC2_V_COEFF_8B",			16,	9,	RWI,	0x46},	/* SC2_V_COEFF_8AB*/
	{"SC2_V_COEFF_8A",			0,	9,	RWI,	0x1FA},	/* SC2_V_COEFF_8AB*/
	{"SC2_V_COEFF_8D",			16,	9,	RWI,	0x1FA},	/* SC2_V_COEFF_8CD*/
	{"SC2_V_COEFF_8C",			0,	9,	RWI,	0x46},	/* SC2_V_COEFF_8CD*/
	{"SC2_H_COEFF_0B",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_0AB*/
	{"SC2_H_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0AB*/
	{"SC2_H_COEFF_0D",			16,	9,	RWI,	0x80},	/* SC2_V_COEFF_0CD*/
	{"SC2_H_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0CD*/
	{"SC2_H_COEFF_0F",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_0EF*/
	{"SC2_H_COEFF_0E",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0EF*/
	{"SC2_H_COEFF_0H",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_0GH*/
	{"SC2_H_COEFF_0G",			0,	9,	RWI,	0x0},	/* SC2_V_COEFF_0GH*/
	{"SC2_H_COEFF_1B",			16,	9,	RWI,	0x2},	/* SC2_V_COEFF_1AB*/
	{"SC2_H_COEFF_1A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_1AB*/
	{"SC2_H_COEFF_1D",			16,	9,	RWI,	0x7F},	/* SC2_V_COEFF_1CD*/
	{"SC2_H_COEFF_1C",			0,	9,	RWI,	0x1FA},	/* SC2_V_COEFF_1CD*/
	{"SC2_H_COEFF_1F",			16,	9,	RWI,	0x1FE},	/* SC2_V_COEFF_1EF*/
	{"SC2_H_COEFF_1E",			0,	9,	RWI,	0x7},	/* SC2_V_COEFF_1EF*/
	{"SC2_H_COEFF_1H",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_1GH*/
	{"SC2_H_COEFF_1G",			0,	9,	RWI,	0x1},	/* SC2_V_COEFF_1GH*/
	{"SC2_H_COEFF_2B",			16,	9,	RWI,	0x4},	/* SC2_V_COEFF_2AB*/
	{"SC2_H_COEFF_2A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_2AB*/
	{"SC2_H_COEFF_2D",			16,	9,	RWI,	0x7D},	/* SC2_V_COEFF_2CD*/
	{"SC2_H_COEFF_2C",			0,	9,	RWI,	0x1F4},	/* SC2_V_COEFF_2CD*/
	{"SC2_H_COEFF_2F",			16,	9,	RWI,	0x1FB},	/* SC2_V_COEFF_2EF*/
	{"SC2_H_COEFF_2E",			0,	9,	RWI,	0x10},	/* SC2_V_COEFF_2EF*/
	{"SC2_H_COEFF_2H",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_2GH*/
	{"SC2_H_COEFF_2G",			0,	9,	RWI,	0x1},	/* SC2_V_COEFF_2GH*/
	{"SC2_H_COEFF_3B",			16,	9,	RWI,	0x5},	/* SC2_V_COEFF_3AB*/
	{"SC2_H_COEFF_3A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_3AB*/
	{"SC2_H_COEFF_3D",			16,	9,	RWI,	0x78},	/* SC2_V_COEFF_3CD*/
	{"SC2_H_COEFF_3C",			0,	9,	RWI,	0x1F1},	/* SC2_V_COEFF_3CD*/
	{"SC2_H_COEFF_3F",			16,	9,	RWI,	0x1F8},	/* SC2_V_COEFF_3EF*/
	{"SC2_H_COEFF_3E",			0,	9,	RWI,	0x19},	/* SC2_V_COEFF_3EF*/
	{"SC2_H_COEFF_3H",			16,	9,	RWI,	0x0},	/* SC2_V_COEFF_3GH*/
	{"SC2_H_COEFF_3G",			0,	9,	RWI,	0x2},	/* SC2_V_COEFF_3GH*/
	{"SC2_H_COEFF_4B",			16,	9,	RWI,	0x6},	/* SC2_V_COEFF_4AB*/
	{"SC2_H_COEFF_4A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_4AB*/
	{"SC2_H_COEFF_4D",			16,	9,	RWI,	0x72},	/* SC2_V_COEFF_4CD*/
	{"SC2_H_COEFF_4C",			0,	9,	RWI,	0x1EE},	/* SC2_V_COEFF_4CD*/
	{"SC2_H_COEFF_4F",			16,	9,	RWI,	0x1F6},	/* SC2_V_COEFF_4EF*/
	{"SC2_H_COEFF_4E",			0,	9,	RWI,	0x23},	/* SC2_V_COEFF_4EF*/
	{"SC2_H_COEFF_4H",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_4GH*/
	{"SC2_H_COEFF_4G",			0,	9,	RWI,	0x3},	/* SC2_V_COEFF_4GH*/
	{"SC2_H_COEFF_5B",			16,	9,	RWI,	0x6},	/* SC2_V_COEFF_5AB*/
	{"SC2_H_COEFF_5A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_5AB*/
	{"SC2_H_COEFF_5D",			16,	9,	RWI,	0x6B},	/* SC2_V_COEFF_5CD*/
	{"SC2_H_COEFF_5C",			0,	9,	RWI,	0x1EC},	/* SC2_V_COEFF_5CD*/
	{"SC2_H_COEFF_5F",			16,	9,	RWI,	0x1F3},	/* SC2_V_COEFF_5EF*/
	{"SC2_H_COEFF_5E",			0,	9,	RWI,	0x2E},	/* SC2_V_COEFF_5EF*/
	{"SC2_H_COEFF_5H",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_5GH*/
	{"SC2_H_COEFF_5G",			0,	9,	RWI,	0x4},	/* SC2_V_COEFF_5GH*/
	{"SC2_H_COEFF_6B",			16,	9,	RWI,	0x7},	/* SC2_V_COEFF_6AB*/
	{"SC2_H_COEFF_6A",			0,	9,	RWI,	0x1FE},	/* SC2_V_COEFF_6AB*/
	{"SC2_H_COEFF_6D",			16,	9,	RWI,	0x63},	/* SC2_V_COEFF_6CD*/
	{"SC2_H_COEFF_6C",			0,	9,	RWI,	0x1EB},	/* SC2_V_COEFF_6CD*/
	{"SC2_H_COEFF_6F",			16,	9,	RWI,	0x1F0},	/* SC2_V_COEFF_6EF*/
	{"SC2_H_COEFF_6E",			0,	9,	RWI,	0x39},	/* SC2_V_COEFF_6EF*/
	{"SC2_H_COEFF_6H",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_6GH*/
	{"SC2_H_COEFF_6G",			0,	9,	RWI,	0x5},	/* SC2_V_COEFF_6GH*/
	{"SC2_H_COEFF_7B",			16,	9,	RWI,	0x6},	/* SC2_V_COEFF_7AB*/
	{"SC2_H_COEFF_7A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_7AB*/
	{"SC2_H_COEFF_7D",			16,	9,	RWI,	0x59},	/* SC2_V_COEFF_7CD*/
	{"SC2_H_COEFF_7C",			0,	9,	RWI,	0x1EC},	/* SC2_V_COEFF_7CD*/
	{"SC2_H_COEFF_7F",			16,	9,	RWI,	0x1EE},	/* SC2_V_COEFF_7EF*/
	{"SC2_H_COEFF_7E",			0,	9,	RWI,	0x44},	/* SC2_V_COEFF_7EF*/
	{"SC2_H_COEFF_7H",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_7GH*/
	{"SC2_H_COEFF_7G",			0,	9,	RWI,	0x5},	/* SC2_V_COEFF_7GH*/
	{"SC2_H_COEFF_8B",			16,	9,	RWI,	0x6},	/* SC2_V_COEFF_8AB*/
	{"SC2_H_COEFF_8A",			0,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_8AB*/
	{"SC2_H_COEFF_8D",			16,	9,	RWI,	0x4F},	/* SC2_V_COEFF_8CD*/
	{"SC2_H_COEFF_8C",			0,	9,	RWI,	0x1EC},	/* SC2_V_COEFF_8CD*/
	{"SC2_H_COEFF_8F",			16,	9,	RWI,	0x1EC},	/* SC2_V_COEFF_8EF*/
	{"SC2_H_COEFF_8E",			0,	9,	RWI,	0x4F},	/* SC2_V_COEFF_8EF*/
	{"SC2_H_COEFF_8H",			16,	9,	RWI,	0x1FF},	/* SC2_V_COEFF_8GH*/
	{"SC2_H_COEFF_8G",			0,	9,	RWI,	0x6},	/* SC2_V_COEFF_8GH*/
	{"SC3_BYPASS",				1,	1,	RWI,	0},	/* SC3_CTRL */
	{"SC3_ENABLE",				0,	1,	RWI,	0},	/* SC3_CTRL */
	{"SC3_SRC_HPOS",			16,	14,	RWI,	0},	/* SC3_SRC_POS */
	{"SC3_SRC_VPOS",			0,	14,	RWI,	0},	/* SC3_SRC_POS */
	{"SC3_SRC_HSIZE",			16,	14,	RWI,	0x10},	/* SC3_SRC_SIZE */
	{"SC3_SRC_VSIZE",			0,	14,	RWI,	0x10},	/* SC3_SRC_SIZE */
	{"SC3_DST_HSIZE",			16,	14,	RWI,	0x10},	/* SC3_DST_SIZE */
	{"SC3_DST_VSIZE",			0,	14,	RWI,	0x10},	/* SC3_DST_SIZE */
	{"SC3_H_RATIO",				0,	24,	RWI,	0x100000},	/* SC3_H_RATIO */
	{"SC3_V_RATIO",				0,	24,	RWI,	0x100000},	/* SC3_V_RATIO */
	{"SC3_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC3_H_INIT_PHASE_OFFSET */
	{"SC3_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC3_V_INIT_PHASE_OFFSET */
	{"SC3_ROUND_MODE",			0,	1,	RWI,	0x1},	/* SC3_ROUND_MODE */
	{"SC3_V_COEFF_0B",			16,	9,	RWI,	0x80},	/* SC3_V_COEFF_0AB*/
	{"SC3_V_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0AB*/
	{"SC3_V_COEFF_0D",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_0CD*/
	{"SC3_V_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0CD*/
	{"SC3_V_COEFF_1B",			16,	9,	RWI,	0x7F},	/* SC3_V_COEFF_1AB*/
	{"SC3_V_COEFF_1A",			0,	9,	RWI,	0x1FC},	/* SC3_V_COEFF_1AB*/
	{"SC3_V_COEFF_1D",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_1CD*/
	{"SC3_V_COEFF_1C",			0,	9,	RWI,	0x5},	/* SC3_V_COEFF_1CD*/
	{"SC3_V_COEFF_2B",			16,	9,	RWI,	0x7C},	/* SC3_V_COEFF_2AB*/
	{"SC3_V_COEFF_2A",			0,	9,	RWI,	0x1FA},	/* SC3_V_COEFF_2AB*/
	{"SC3_V_COEFF_2D",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_2CD*/
	{"SC3_V_COEFF_2C",			0,	9,	RWI,	0xB},	/* SC3_V_COEFF_2CD*/
	{"SC3_V_COEFF_3B",			16,	9,	RWI,	0x76},	/* SC3_V_COEFF_3AB*/
	{"SC3_V_COEFF_3A",			0,	9,	RWI,	0x1F8},	/* SC3_V_COEFF_3AB*/
	{"SC3_V_COEFF_3D",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_3CD*/
	{"SC3_V_COEFF_3C",			0,	9,	RWI,	0x13},	/* SC3_V_COEFF_3CD*/
	{"SC3_V_COEFF_4B",			16,	9,	RWI,	0x6F},	/* SC3_V_COEFF_4AB*/
	{"SC3_V_COEFF_4A",			0,	9,	RWI,	0x1F8},	/* SC3_V_COEFF_4AB*/
	{"SC3_V_COEFF_4D",			16,	9,	RWI,	0x1FE},	/* SC3_V_COEFF_4CD*/
	{"SC3_V_COEFF_4C",			0,	9,	RWI,	0x1B},	/* SC3_V_COEFF_4CD*/
	{"SC3_V_COEFF_5B",			16,	9,	RWI,	0x66},	/* SC3_V_COEFF_5AB*/
	{"SC3_V_COEFF_5A",			0,	9,	RWI,	0x1F8},	/* SC3_V_COEFF_5AB*/
	{"SC3_V_COEFF_5D",			16,	9,	RWI,	0x1FD},	/* SC3_V_COEFF_5CD*/
	{"SC3_V_COEFF_5C",			0,	9,	RWI,	0x25},	/* SC3_V_COEFF_5CD*/
	{"SC3_V_COEFF_6B",			16,	9,	RWI,	0x5C},	/* SC3_V_COEFF_6AB*/
	{"SC3_V_COEFF_6A",			0,	9,	RWI,	0x1F8},	/* SC3_V_COEFF_6AB*/
	{"SC3_V_COEFF_6D",			16,	9,	RWI,	0x1FC},	/* SC3_V_COEFF_6CD*/
	{"SC3_V_COEFF_6C",			0,	9,	RWI,	0x30},	/* SC3_V_COEFF_6CD*/
	{"SC3_V_COEFF_7B",			16,	9,	RWI,	0x51},	/* SC3_V_COEFF_7AB*/
	{"SC3_V_COEFF_7A",			0,	9,	RWI,	0x1F9},	/* SC3_V_COEFF_7AB*/
	{"SC3_V_COEFF_7D",			16,	9,	RWI,	0x1FB},	/* SC3_V_COEFF_7CD*/
	{"SC3_V_COEFF_7C",			0,	9,	RWI,	0x3B},	/* SC3_V_COEFF_7CD*/
	{"SC3_V_COEFF_8B",			16,	9,	RWI,	0x46},	/* SC3_V_COEFF_8AB*/
	{"SC3_V_COEFF_8A",			0,	9,	RWI,	0x1FA},	/* SC3_V_COEFF_8AB*/
	{"SC3_V_COEFF_8D",			16,	9,	RWI,	0x1FA},	/* SC3_V_COEFF_8CD*/
	{"SC3_V_COEFF_8C",			0,	9,	RWI,	0x46},	/* SC3_V_COEFF_8CD*/
	{"SC3_H_COEFF_0B",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_0AB*/
	{"SC3_H_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0AB*/
	{"SC3_H_COEFF_0D",			16,	9,	RWI,	0x80},	/* SC3_V_COEFF_0CD*/
	{"SC3_H_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0CD*/
	{"SC3_H_COEFF_0F",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_0EF*/
	{"SC3_H_COEFF_0E",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0EF*/
	{"SC3_H_COEFF_0H",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_0GH*/
	{"SC3_H_COEFF_0G",			0,	9,	RWI,	0x0},	/* SC3_V_COEFF_0GH*/
	{"SC3_H_COEFF_1B",			16,	9,	RWI,	0x2},	/* SC3_V_COEFF_1AB*/
	{"SC3_H_COEFF_1A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_1AB*/
	{"SC3_H_COEFF_1D",			16,	9,	RWI,	0x7F},	/* SC3_V_COEFF_1CD*/
	{"SC3_H_COEFF_1C",			0,	9,	RWI,	0x1FA},	/* SC3_V_COEFF_1CD*/
	{"SC3_H_COEFF_1F",			16,	9,	RWI,	0x1FE},	/* SC3_V_COEFF_1EF*/
	{"SC3_H_COEFF_1E",			0,	9,	RWI,	0x7},	/* SC3_V_COEFF_1EF*/
	{"SC3_H_COEFF_1H",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_1GH*/
	{"SC3_H_COEFF_1G",			0,	9,	RWI,	0x1},	/* SC3_V_COEFF_1GH*/
	{"SC3_H_COEFF_2B",			16,	9,	RWI,	0x4},	/* SC3_V_COEFF_2AB*/
	{"SC3_H_COEFF_2A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_2AB*/
	{"SC3_H_COEFF_2D",			16,	9,	RWI,	0x7D},	/* SC3_V_COEFF_2CD*/
	{"SC3_H_COEFF_2C",			0,	9,	RWI,	0x1F4},	/* SC3_V_COEFF_2CD*/
	{"SC3_H_COEFF_2F",			16,	9,	RWI,	0x1FB},	/* SC3_V_COEFF_2EF*/
	{"SC3_H_COEFF_2E",			0,	9,	RWI,	0x10},	/* SC3_V_COEFF_2EF*/
	{"SC3_H_COEFF_2H",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_2GH*/
	{"SC3_H_COEFF_2G",			0,	9,	RWI,	0x1},	/* SC3_V_COEFF_2GH*/
	{"SC3_H_COEFF_3B",			16,	9,	RWI,	0x5},	/* SC3_V_COEFF_3AB*/
	{"SC3_H_COEFF_3A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_3AB*/
	{"SC3_H_COEFF_3D",			16,	9,	RWI,	0x78},	/* SC3_V_COEFF_3CD*/
	{"SC3_H_COEFF_3C",			0,	9,	RWI,	0x1F1},	/* SC3_V_COEFF_3CD*/
	{"SC3_H_COEFF_3F",			16,	9,	RWI,	0x1F8},	/* SC3_V_COEFF_3EF*/
	{"SC3_H_COEFF_3E",			0,	9,	RWI,	0x19},	/* SC3_V_COEFF_3EF*/
	{"SC3_H_COEFF_3H",			16,	9,	RWI,	0x0},	/* SC3_V_COEFF_3GH*/
	{"SC3_H_COEFF_3G",			0,	9,	RWI,	0x2},	/* SC3_V_COEFF_3GH*/
	{"SC3_H_COEFF_4B",			16,	9,	RWI,	0x6},	/* SC3_V_COEFF_4AB*/
	{"SC3_H_COEFF_4A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_4AB*/
	{"SC3_H_COEFF_4D",			16,	9,	RWI,	0x72},	/* SC3_V_COEFF_4CD*/
	{"SC3_H_COEFF_4C",			0,	9,	RWI,	0x1EE},	/* SC3_V_COEFF_4CD*/
	{"SC3_H_COEFF_4F",			16,	9,	RWI,	0x1F6},	/* SC3_V_COEFF_4EF*/
	{"SC3_H_COEFF_4E",			0,	9,	RWI,	0x23},	/* SC3_V_COEFF_4EF*/
	{"SC3_H_COEFF_4H",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_4GH*/
	{"SC3_H_COEFF_4G",			0,	9,	RWI,	0x3},	/* SC3_V_COEFF_4GH*/
	{"SC3_H_COEFF_5B",			16,	9,	RWI,	0x6},	/* SC3_V_COEFF_5AB*/
	{"SC3_H_COEFF_5A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_5AB*/
	{"SC3_H_COEFF_5D",			16,	9,	RWI,	0x6B},	/* SC3_V_COEFF_5CD*/
	{"SC3_H_COEFF_5C",			0,	9,	RWI,	0x1EC},	/* SC3_V_COEFF_5CD*/
	{"SC3_H_COEFF_5F",			16,	9,	RWI,	0x1F3},	/* SC3_V_COEFF_5EF*/
	{"SC3_H_COEFF_5E",			0,	9,	RWI,	0x2E},	/* SC3_V_COEFF_5EF*/
	{"SC3_H_COEFF_5H",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_5GH*/
	{"SC3_H_COEFF_5G",			0,	9,	RWI,	0x4},	/* SC3_V_COEFF_5GH*/
	{"SC3_H_COEFF_6B",			16,	9,	RWI,	0x7},	/* SC3_V_COEFF_6AB*/
	{"SC3_H_COEFF_6A",			0,	9,	RWI,	0x1FE},	/* SC3_V_COEFF_6AB*/
	{"SC3_H_COEFF_6D",			16,	9,	RWI,	0x63},	/* SC3_V_COEFF_6CD*/
	{"SC3_H_COEFF_6C",			0,	9,	RWI,	0x1EB},	/* SC3_V_COEFF_6CD*/
	{"SC3_H_COEFF_6F",			16,	9,	RWI,	0x1F0},	/* SC3_V_COEFF_6EF*/
	{"SC3_H_COEFF_6E",			0,	9,	RWI,	0x39},	/* SC3_V_COEFF_6EF*/
	{"SC3_H_COEFF_6H",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_6GH*/
	{"SC3_H_COEFF_6G",			0,	9,	RWI,	0x5},	/* SC3_V_COEFF_6GH*/
	{"SC3_H_COEFF_7B",			16,	9,	RWI,	0x6},	/* SC3_V_COEFF_7AB*/
	{"SC3_H_COEFF_7A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_7AB*/
	{"SC3_H_COEFF_7D",			16,	9,	RWI,	0x59},	/* SC3_V_COEFF_7CD*/
	{"SC3_H_COEFF_7C",			0,	9,	RWI,	0x1EC},	/* SC3_V_COEFF_7CD*/
	{"SC3_H_COEFF_7F",			16,	9,	RWI,	0x1EE},	/* SC3_V_COEFF_7EF*/
	{"SC3_H_COEFF_7E",			0,	9,	RWI,	0x44},	/* SC3_V_COEFF_7EF*/
	{"SC3_H_COEFF_7H",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_7GH*/
	{"SC3_H_COEFF_7G",			0,	9,	RWI,	0x5},	/* SC3_V_COEFF_7GH*/
	{"SC3_H_COEFF_8B",			16,	9,	RWI,	0x6},	/* SC3_V_COEFF_8AB*/
	{"SC3_H_COEFF_8A",			0,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_8AB*/
	{"SC3_H_COEFF_8D",			16,	9,	RWI,	0x4F},	/* SC3_V_COEFF_8CD*/
	{"SC3_H_COEFF_8C",			0,	9,	RWI,	0x1EC},	/* SC3_V_COEFF_8CD*/
	{"SC3_H_COEFF_8F",			16,	9,	RWI,	0x1EC},	/* SC3_V_COEFF_8EF*/
	{"SC3_H_COEFF_8E",			0,	9,	RWI,	0x4F},	/* SC3_V_COEFF_8EF*/
	{"SC3_H_COEFF_8H",			16,	9,	RWI,	0x1FF},	/* SC3_V_COEFF_8GH*/
	{"SC3_H_COEFF_8G",			0,	9,	RWI,	0x6},	/* SC3_V_COEFF_8GH*/
	{"SC4_BYPASS",				1,	1,	RWI,	0},	/* SC4_CTRL */
	{"SC4_ENABLE",				0,	1,	RWI,	0},	/* SC4_CTRL */
	{"SC4_SRC_HPOS",			16,	14,	RWI,	0},	/* SC4_SRC_POS */
	{"SC4_SRC_VPOS",			0,	14,	RWI,	0},	/* SC4_SRC_POS */
	{"SC4_SRC_HSIZE",			16,	14,	RWI,	0x10},	/* SC4_SRC_SIZE */
	{"SC4_SRC_VSIZE",			0,	14,	RWI,	0x10},	/* SC4_SRC_SIZE */
	{"SC4_DST_HSIZE",			16,	14,	RWI,	0x10},	/* SC4_DST_SIZE */
	{"SC4_DST_VSIZE",			0,	14,	RWI,	0x10},	/* SC4_DST_SIZE */
	{"SC4_H_RATIO",				0,	24,	RWI,	0x100000},	/* SC4_H_RATIO */
	{"SC4_V_RATIO",				0,	24,	RWI,	0x100000},	/* SC4_V_RATIO */
	{"SC4_H_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC4_H_INIT_PHASE_OFFSET */
	{"SC4_V_INIT_PHASE_OFFSET",		0,	20,	RWI,	0x0},	/* SC4_V_INIT_PHASE_OFFSET */
	{"SC4_ROUND_MODE",			0,	1,	RWI,	0x1},	/* SC4_ROUND_MODE */
	{"SC4_V_COEFF_0B",			16,	9,	RWI,	0x80},	/* SC4_V_COEFF_0AB*/
	{"SC4_V_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0AB*/
	{"SC4_V_COEFF_0D",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_0CD*/
	{"SC4_V_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0CD*/
	{"SC4_V_COEFF_1B",			16,	9,	RWI,	0x7F},	/* SC4_V_COEFF_1AB*/
	{"SC4_V_COEFF_1A",			0,	9,	RWI,	0x1FC},	/* SC4_V_COEFF_1AB*/
	{"SC4_V_COEFF_1D",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_1CD*/
	{"SC4_V_COEFF_1C",			0,	9,	RWI,	0x5},	/* SC4_V_COEFF_1CD*/
	{"SC4_V_COEFF_2B",			16,	9,	RWI,	0x7C},	/* SC4_V_COEFF_2AB*/
	{"SC4_V_COEFF_2A",			0,	9,	RWI,	0x1FA},	/* SC4_V_COEFF_2AB*/
	{"SC4_V_COEFF_2D",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_2CD*/
	{"SC4_V_COEFF_2C",			0,	9,	RWI,	0xB},	/* SC4_V_COEFF_2CD*/
	{"SC4_V_COEFF_3B",			16,	9,	RWI,	0x76},	/* SC4_V_COEFF_3AB*/
	{"SC4_V_COEFF_3A",			0,	9,	RWI,	0x1F8},	/* SC4_V_COEFF_3AB*/
	{"SC4_V_COEFF_3D",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_3CD*/
	{"SC4_V_COEFF_3C",			0,	9,	RWI,	0x13},	/* SC4_V_COEFF_3CD*/
	{"SC4_V_COEFF_4B",			16,	9,	RWI,	0x6F},	/* SC4_V_COEFF_4AB*/
	{"SC4_V_COEFF_4A",			0,	9,	RWI,	0x1F8},	/* SC4_V_COEFF_4AB*/
	{"SC4_V_COEFF_4D",			16,	9,	RWI,	0x1FE},	/* SC4_V_COEFF_4CD*/
	{"SC4_V_COEFF_4C",			0,	9,	RWI,	0x1B},	/* SC4_V_COEFF_4CD*/
	{"SC4_V_COEFF_5B",			16,	9,	RWI,	0x66},	/* SC4_V_COEFF_5AB*/
	{"SC4_V_COEFF_5A",			0,	9,	RWI,	0x1F8},	/* SC4_V_COEFF_5AB*/
	{"SC4_V_COEFF_5D",			16,	9,	RWI,	0x1FD},	/* SC4_V_COEFF_5CD*/
	{"SC4_V_COEFF_5C",			0,	9,	RWI,	0x25},	/* SC4_V_COEFF_5CD*/
	{"SC4_V_COEFF_6B",			16,	9,	RWI,	0x5C},	/* SC4_V_COEFF_6AB*/
	{"SC4_V_COEFF_6A",			0,	9,	RWI,	0x1F8},	/* SC4_V_COEFF_6AB*/
	{"SC4_V_COEFF_6D",			16,	9,	RWI,	0x1FC},	/* SC4_V_COEFF_6CD*/
	{"SC4_V_COEFF_6C",			0,	9,	RWI,	0x30},	/* SC4_V_COEFF_6CD*/
	{"SC4_V_COEFF_7B",			16,	9,	RWI,	0x51},	/* SC4_V_COEFF_7AB*/
	{"SC4_V_COEFF_7A",			0,	9,	RWI,	0x1F9},	/* SC4_V_COEFF_7AB*/
	{"SC4_V_COEFF_7D",			16,	9,	RWI,	0x1FB},	/* SC4_V_COEFF_7CD*/
	{"SC4_V_COEFF_7C",			0,	9,	RWI,	0x3B},	/* SC4_V_COEFF_7CD*/
	{"SC4_V_COEFF_8B",			16,	9,	RWI,	0x46},	/* SC4_V_COEFF_8AB*/
	{"SC4_V_COEFF_8A",			0,	9,	RWI,	0x1FA},	/* SC4_V_COEFF_8AB*/
	{"SC4_V_COEFF_8D",			16,	9,	RWI,	0x1FA},	/* SC4_V_COEFF_8CD*/
	{"SC4_V_COEFF_8C",			0,	9,	RWI,	0x46},	/* SC4_V_COEFF_8CD*/
	{"SC4_H_COEFF_0B",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_0AB*/
	{"SC4_H_COEFF_0A",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0AB*/
	{"SC4_H_COEFF_0D",			16,	9,	RWI,	0x80},	/* SC4_V_COEFF_0CD*/
	{"SC4_H_COEFF_0C",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0CD*/
	{"SC4_H_COEFF_0F",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_0EF*/
	{"SC4_H_COEFF_0E",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0EF*/
	{"SC4_H_COEFF_0H",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_0GH*/
	{"SC4_H_COEFF_0G",			0,	9,	RWI,	0x0},	/* SC4_V_COEFF_0GH*/
	{"SC4_H_COEFF_1B",			16,	9,	RWI,	0x2},	/* SC4_V_COEFF_1AB*/
	{"SC4_H_COEFF_1A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_1AB*/
	{"SC4_H_COEFF_1D",			16,	9,	RWI,	0x7F},	/* SC4_V_COEFF_1CD*/
	{"SC4_H_COEFF_1C",			0,	9,	RWI,	0x1FA},	/* SC4_V_COEFF_1CD*/
	{"SC4_H_COEFF_1F",			16,	9,	RWI,	0x1FE},	/* SC4_V_COEFF_1EF*/
	{"SC4_H_COEFF_1E",			0,	9,	RWI,	0x7},	/* SC4_V_COEFF_1EF*/
	{"SC4_H_COEFF_1H",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_1GH*/
	{"SC4_H_COEFF_1G",			0,	9,	RWI,	0x1},	/* SC4_V_COEFF_1GH*/
	{"SC4_H_COEFF_2B",			16,	9,	RWI,	0x4},	/* SC4_V_COEFF_2AB*/
	{"SC4_H_COEFF_2A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_2AB*/
	{"SC4_H_COEFF_2D",			16,	9,	RWI,	0x7D},	/* SC4_V_COEFF_2CD*/
	{"SC4_H_COEFF_2C",			0,	9,	RWI,	0x1F4},	/* SC4_V_COEFF_2CD*/
	{"SC4_H_COEFF_2F",			16,	9,	RWI,	0x1FB},	/* SC4_V_COEFF_2EF*/
	{"SC4_H_COEFF_2E",			0,	9,	RWI,	0x10},	/* SC4_V_COEFF_2EF*/
	{"SC4_H_COEFF_2H",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_2GH*/
	{"SC4_H_COEFF_2G",			0,	9,	RWI,	0x1},	/* SC4_V_COEFF_2GH*/
	{"SC4_H_COEFF_3B",			16,	9,	RWI,	0x5},	/* SC4_V_COEFF_3AB*/
	{"SC4_H_COEFF_3A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_3AB*/
	{"SC4_H_COEFF_3D",			16,	9,	RWI,	0x78},	/* SC4_V_COEFF_3CD*/
	{"SC4_H_COEFF_3C",			0,	9,	RWI,	0x1F1},	/* SC4_V_COEFF_3CD*/
	{"SC4_H_COEFF_3F",			16,	9,	RWI,	0x1F8},	/* SC4_V_COEFF_3EF*/
	{"SC4_H_COEFF_3E",			0,	9,	RWI,	0x19},	/* SC4_V_COEFF_3EF*/
	{"SC4_H_COEFF_3H",			16,	9,	RWI,	0x0},	/* SC4_V_COEFF_3GH*/
	{"SC4_H_COEFF_3G",			0,	9,	RWI,	0x2},	/* SC4_V_COEFF_3GH*/
	{"SC4_H_COEFF_4B",			16,	9,	RWI,	0x6},	/* SC4_V_COEFF_4AB*/
	{"SC4_H_COEFF_4A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_4AB*/
	{"SC4_H_COEFF_4D",			16,	9,	RWI,	0x72},	/* SC4_V_COEFF_4CD*/
	{"SC4_H_COEFF_4C",			0,	9,	RWI,	0x1EE},	/* SC4_V_COEFF_4CD*/
	{"SC4_H_COEFF_4F",			16,	9,	RWI,	0x1F6},	/* SC4_V_COEFF_4EF*/
	{"SC4_H_COEFF_4E",			0,	9,	RWI,	0x23},	/* SC4_V_COEFF_4EF*/
	{"SC4_H_COEFF_4H",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_4GH*/
	{"SC4_H_COEFF_4G",			0,	9,	RWI,	0x3},	/* SC4_V_COEFF_4GH*/
	{"SC4_H_COEFF_5B",			16,	9,	RWI,	0x6},	/* SC4_V_COEFF_5AB*/
	{"SC4_H_COEFF_5A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_5AB*/
	{"SC4_H_COEFF_5D",			16,	9,	RWI,	0x6B},	/* SC4_V_COEFF_5CD*/
	{"SC4_H_COEFF_5C",			0,	9,	RWI,	0x1EC},	/* SC4_V_COEFF_5CD*/
	{"SC4_H_COEFF_5F",			16,	9,	RWI,	0x1F3},	/* SC4_V_COEFF_5EF*/
	{"SC4_H_COEFF_5E",			0,	9,	RWI,	0x2E},	/* SC4_V_COEFF_5EF*/
	{"SC4_H_COEFF_5H",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_5GH*/
	{"SC4_H_COEFF_5G",			0,	9,	RWI,	0x4},	/* SC4_V_COEFF_5GH*/
	{"SC4_H_COEFF_6B",			16,	9,	RWI,	0x7},	/* SC4_V_COEFF_6AB*/
	{"SC4_H_COEFF_6A",			0,	9,	RWI,	0x1FE},	/* SC4_V_COEFF_6AB*/
	{"SC4_H_COEFF_6D",			16,	9,	RWI,	0x63},	/* SC4_V_COEFF_6CD*/
	{"SC4_H_COEFF_6C",			0,	9,	RWI,	0x1EB},	/* SC4_V_COEFF_6CD*/
	{"SC4_H_COEFF_6F",			16,	9,	RWI,	0x1F0},	/* SC4_V_COEFF_6EF*/
	{"SC4_H_COEFF_6E",			0,	9,	RWI,	0x39},	/* SC4_V_COEFF_6EF*/
	{"SC4_H_COEFF_6H",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_6GH*/
	{"SC4_H_COEFF_6G",			0,	9,	RWI,	0x5},	/* SC4_V_COEFF_6GH*/
	{"SC4_H_COEFF_7B",			16,	9,	RWI,	0x6},	/* SC4_V_COEFF_7AB*/
	{"SC4_H_COEFF_7A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_7AB*/
	{"SC4_H_COEFF_7D",			16,	9,	RWI,	0x59},	/* SC4_V_COEFF_7CD*/
	{"SC4_H_COEFF_7C",			0,	9,	RWI,	0x1EC},	/* SC4_V_COEFF_7CD*/
	{"SC4_H_COEFF_7F",			16,	9,	RWI,	0x1EE},	/* SC4_V_COEFF_7EF*/
	{"SC4_H_COEFF_7E",			0,	9,	RWI,	0x44},	/* SC4_V_COEFF_7EF*/
	{"SC4_H_COEFF_7H",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_7GH*/
	{"SC4_H_COEFF_7G",			0,	9,	RWI,	0x5},	/* SC4_V_COEFF_7GH*/
	{"SC4_H_COEFF_8B",			16,	9,	RWI,	0x6},	/* SC4_V_COEFF_8AB*/
	{"SC4_H_COEFF_8A",			0,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_8AB*/
	{"SC4_H_COEFF_8D",			16,	9,	RWI,	0x4F},	/* SC4_V_COEFF_8CD*/
	{"SC4_H_COEFF_8C",			0,	9,	RWI,	0x1EC},	/* SC4_V_COEFF_8CD*/
	{"SC4_H_COEFF_8F",			16,	9,	RWI,	0x1EC},	/* SC4_V_COEFF_8EF*/
	{"SC4_H_COEFF_8E",			0,	9,	RWI,	0x4F},	/* SC4_V_COEFF_8EF*/
	{"SC4_H_COEFF_8H",			16,	9,	RWI,	0x1FF},	/* SC4_V_COEFF_8GH*/
	{"SC4_H_COEFF_8G",			0,	9,	RWI,	0x6},	/* SC4_V_COEFF_8GH*/
	{"PC0_POST_SC_ENABLE",			0,	1,	RWI,	0x0},	/* PC0_POST_SC_CTRL */
	{"PC0_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC0_POST_SC_IMG_SIZE */
	{"PC0_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC0_POST_SC_IMG_SIZE */
	{"PC0_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC0_POST_SC_DST_SIZE */
	{"PC0_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC0_POST_SC_DST_SIZE */
	{"PC0_POST_SC_H_RATIO",			0,	24,	RWI,	0x100000},	/* PC0_POST_SC_H_RATIO */
	{"PC0_POST_SC_V_RATIO",			0,	24,	RWI,	0x100000},	/* PC0_POST_SC_V_RATIO */
	{"PC0_CONV420_ENABLE",			0,	1,	RWI,	0x1},	/* PC0_CONV420_CTRL */
	{"PC0_CONV420_WEIGHT",			0,	5,	RWI,	0},	/* PC0_CONV420_WEIGHT */
	{"PC0_BCHS_ENABLE",			0,	1,	RWI,	0x0},	/* PC0_BCHS_CTRL */
	{"PC0_BCHS_YOFFSET",			16,	8,	RWI,	0},	/* PC0_BCHS_BC */
	{"PC0_BCHS_YGAIN",			0,	12,	RWI,	0x100},	/* PC0_BCHS_BC */
	{"PC0_BCHS_C_GAIN_01",			16,	13,	RWI,	0},	/* PC0_BCHS_HS1 */
	{"PC0_BCHS_C_GAIN_00",			0,	13,	RWI,	0x100},	/* PC0_BCHS_HS1 */
	{"PC0_BCHS_C_GAIN_11",			16,	13,	RWI,	0x100},	/* PC0_BCHS_HS2 */
	{"PC0_BCHS_C_GAIN_10",			0,	13,	RWI,	0},	/* PC0_BCHS_HS2 */
	{"PC0_BCHS_Y_CLAMP_MAX",		24,	8,	RWI,	0xFF},	/* PC0_BCHS_CLAMP */
	{"PC0_BCHS_Y_CLAMP_MIN",		16,	8,	RWI,	0x00},	/* PC0_BCHS_CLAMP */
	{"PC0_BCHS_C_CLAMP_MAX",		8,	8,	RWI,	0xFF},	/* PC0_BCHS_CLAMP */
	{"PC0_BCHS_C_CLAMP_MIN",		0,	8,	RWI,	0x00},	/* PC0_BCHS_CLAMP */
	{"PC0_OTF_OUT_ENABLE",			0,	1,	RWI,	0x0},	/* PC0_OTF_CTRL */
	{"PC0_DMA_OUT_ENABLE",			0,	1,	RWI,	0x1},	/* PC0_DMA_OUT_CTRL */
	{"PC1_POST_SC_ENABLE",			0,	1,	RWI,	0x0},	/* PC1_POST_SC_CTRL */
	{"PC1_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC1_POST_SC_IMG_SIZE */
	{"PC1_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC1_POST_SC_IMG_SIZE */
	{"PC1_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC1_POST_SC_DST_SIZE */
	{"PC1_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC1_POST_SC_DST_SIZE */
	{"PC1_POST_SC_H_RATIO",			0,	24,	RWI,	0x100000},	/* PC1_POST_SC_H_RATIO */
	{"PC1_POST_SC_V_RATIO",			0,	24,	RWI,	0x100000},	/* PC1_POST_SC_V_RATIO */
	{"PC1_CONV420_ENABLE",			0,	1,	RWI,	0x1},	/* PC1_CONV420_CTRL */
	{"PC1_CONV420_WEIGHT",			0,	5,	RWI,	0},	/* PC1_CONV420_WEIGHT */
	{"PC1_BCHS_ENABLE",			0,	1,	RWI,	0x0},	/* PC1_BCHS_CTRL */
	{"PC1_BCHS_YOFFSET",			16,	8,	RWI,	0},	/* PC1_BCHS_BC */
	{"PC1_BCHS_YGAIN",			0,	12,	RWI,	0x100},	/* PC1_BCHS_BC */
	{"PC1_BCHS_C_GAIN_01",			16,	13,	RWI,	0},	/* PC1_BCHS_HS1 */
	{"PC1_BCHS_C_GAIN_00",			0,	13,	RWI,	0x100},	/* PC1_BCHS_HS1 */
	{"PC1_BCHS_C_GAIN_11",			16,	13,	RWI,	0x100},	/* PC1_BCHS_HS2 */
	{"PC1_BCHS_C_GAIN_10",			0,	13,	RWI,	0},	/* PC1_BCHS_HS2 */
	{"PC1_BCHS_Y_CLAMP_MAX",		24,	8,	RWI,	0xFF},	/* PC1_BCHS_CLAMP */
	{"PC1_BCHS_Y_CLAMP_MIN",		16,	8,	RWI,	0x00},	/* PC1_BCHS_CLAMP */
	{"PC1_BCHS_C_CLAMP_MAX",		8,	8,	RWI,	0xFF},	/* PC1_BCHS_CLAMP */
	{"PC1_BCHS_C_CLAMP_MIN",		0,	8,	RWI,	0x00},	/* PC1_BCHS_CLAMP */
	{"PC1_OTF_OUT_ENABLE",			0,	1,	RWI,	0x0},	/* PC1_OTF_CTRL */
	{"PC1_DMA_OUT_ENABLE",			0,	1,	RWI,	0x1},	/* PC1_DMA_OUT_CTRL */
	{"PC2_POST_SC_ENABLE",			0,	1,	RWI,	0x0},	/* PC2_POST_SC_CTRL */
	{"PC2_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC2_POST_SC_IMG_SIZE */
	{"PC2_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC2_POST_SC_IMG_SIZE */
	{"PC2_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC2_POST_SC_DST_SIZE */
	{"PC2_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC2_POST_SC_DST_SIZE */
	{"PC2_POST_SC_H_RATIO",			0,	24,	RWI,	0x100000},	/* PC2_POST_SC_H_RATIO */
	{"PC2_POST_SC_V_RATIO",			0,	24,	RWI,	0x100000},	/* PC2_POST_SC_V_RATIO */
	{"PC2_CONV420_ENABLE",			0,	1,	RWI,	0x1},	/* PC2_CONV420_CTRL */
	{"PC2_CONV420_WEIGHT",			0,	5,	RWI,	0},	/* PC2_CONV420_WEIGHT */
	{"PC2_BCHS_ENABLE",			0,	1,	RWI,	0x0},	/* PC2_BCHS_CTRL */
	{"PC2_BCHS_YOFFSET",			16,	8,	RWI,	0},	/* PC2_BCHS_BC */
	{"PC2_BCHS_YGAIN",			0,	12,	RWI,	0x100},	/* PC2_BCHS_BC */
	{"PC2_BCHS_C_GAIN_01",			16,	13,	RWI,	0},	/* PC2_BCHS_HS1 */
	{"PC2_BCHS_C_GAIN_00",			0,	13,	RWI,	0x100},	/* PC2_BCHS_HS1 */
	{"PC2_BCHS_C_GAIN_11",			16,	13,	RWI,	0x100},	/* PC2_BCHS_HS2 */
	{"PC2_BCHS_C_GAIN_10",			0,	13,	RWI,	0},	/* PC2_BCHS_HS2 */
	{"PC2_BCHS_Y_CLAMP_MAX",		24,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC2_BCHS_Y_CLAMP_MIN",		16,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC2_BCHS_C_CLAMP_MAX",		8,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC2_BCHS_C_CLAMP_MIN",		0,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC2_OTF_OUT_ENABLE",			0,	1,	RWI,	0x0},	/* PC2_OTF_CTRL */
	{"PC2_DMA_OUT_ENABLE",			0,	1,	RWI,	0x1},	/* PC2_DMA_OUT_CTRL */
	{"PC3_POST_SC_ENABLE",			0,	1,	RWI,	0x0},	/* PC3_POST_SC_CTRL */
	{"PC3_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC3_POST_SC_IMG_SIZE */
	{"PC3_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC3_POST_SC_IMG_SIZE */
	{"PC3_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC3_POST_SC_DST_SIZE */
	{"PC3_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC3_POST_SC_DST_SIZE */
	{"PC3_POST_SC_H_RATIO",			0,	24,	RWI,	0x100000},	/* PC3_POST_SC_H_RATIO */
	{"PC3_POST_SC_V_RATIO",			0,	24,	RWI,	0x100000},	/* PC3_POST_SC_V_RATIO */
	{"PC3_CONV420_ENABLE",			0,	1,	RWI,	0x1},	/* PC3_CONV420_CTRL */
	{"PC3_CONV420_WEIGHT",			0,	5,	RWI,	0},	/* PC3_CONV420_WEIGHT */
	{"PC3_BCHS_ENABLE",			0,	1,	RWI,	0x0},	/* PC3_BCHS_CTRL */
	{"PC3_BCHS_YOFFSET",			16,	8,	RWI,	0},	/* PC3_BCHS_BC */
	{"PC3_BCHS_YGAIN",			0,	12,	RWI,	0x100},	/* PC3_BCHS_BC */
	{"PC3_BCHS_C_GAIN_01",			16,	13,	RWI,	0},	/* PC3_BCHS_HS1 */
	{"PC3_BCHS_C_GAIN_00",			0,	13,	RWI,	0x100},	/* PC3_BCHS_HS1 */
	{"PC3_BCHS_C_GAIN_11",			16,	13,	RWI,	0x100},	/* PC3_BCHS_HS2 */
	{"PC3_BCHS_C_GAIN_10",			0,	13,	RWI,	0},	/* PC3_BCHS_HS2 */
	{"PC3_BCHS_Y_CLAMP_MAX",		24,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC3_BCHS_Y_CLAMP_MIN",		16,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC3_BCHS_C_CLAMP_MAX",		8,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC3_BCHS_C_CLAMP_MIN",		0,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC3_OTF_OUT_ENABLE",			0,	1,	RWI,	0x0},	/* PC3_OTF_CTRL */
	{"PC3_DMA_OUT_ENABLE",			0,	1,	RWI,	0x1},	/* PC3_DMA_OUT_CTRL */
	{"PC4_POST_SC_ENABLE",			0,	1,	RWI,	0x0},	/* PC4_POST_SC_CTRL */
	{"PC4_POST_SC_IMG_HSIZE",		16,	14,	RWI,	0x10},	/* PC4_POST_SC_IMG_SIZE */
	{"PC4_POST_SC_IMG_VSIZE",		0,	14,	RWI,	0x10},	/* PC4_POST_SC_IMG_SIZE */
	{"PC4_POST_SC_DST_HSIZE",		16,	14,	RWI,	0x10},	/* PC4_POST_SC_DST_SIZE */
	{"PC4_POST_SC_DST_VSIZE",		0,	14,	RWI,	0x10},	/* PC4_POST_SC_DST_SIZE */
	{"PC4_POST_SC_H_RATIO",			0,	24,	RWI,	0x100000},	/* PC4_POST_SC_H_RATIO */
	{"PC4_POST_SC_V_RATIO",			0,	24,	RWI,	0x100000},	/* PC4_POST_SC_V_RATIO */
	{"PC4_CONV420_ENABLE",			0,	1,	RWI,	0x1},	/* PC4_CONV420_CTRL */
	{"PC4_CONV420_WEIGHT",			0,	5,	RWI,	0},	/* PC4_CONV420_WEIGHT */
	{"PC4_BCHS_ENABLE",			0,	1,	RWI,	0x0},	/* PC4_BCHS_CTRL */
	{"PC4_BCHS_YOFFSET",			16,	8,	RWI,	0},	/* PC4_BCHS_BC */
	{"PC4_BCHS_YGAIN",			0,	12,	RWI,	0x100},	/* PC4_BCHS_BC */
	{"PC4_BCHS_C_GAIN_01",			16,	13,	RWI,	0},	/* PC4_BCHS_HS1 */
	{"PC4_BCHS_C_GAIN_00",			0,	13,	RWI,	0x100},	/* PC4_BCHS_HS1 */
	{"PC4_BCHS_C_GAIN_11",			16,	13,	RWI,	0x100},	/* PC4_BCHS_HS2 */
	{"PC4_BCHS_C_GAIN_10",			0,	13,	RWI,	0},	/* PC4_BCHS_HS2 */
	{"PC4_BCHS_Y_CLAMP_MAX",		24,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC4_BCHS_Y_CLAMP_MIN",		16,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC4_BCHS_C_CLAMP_MAX",		8,	8,	RWI,	0xFF},	/* PC2_BCHS_CLAMP */
	{"PC4_BCHS_C_CLAMP_MIN",		0,	8,	RWI,	0x00},	/* PC2_BCHS_CLAMP */
	{"PC4_OTF_OUT_ENABLE",			0,	1,	RWI,	0x0},	/* PC4_OTF_CTRL */
	{"PC4_DMA_OUT_ENABLE",			0,	1,	RWI,	0x1},	/* PC4_DMA_OUT_CTRL */
	{"SW_RESET_1_STATUS",			4,	1,	RO,	0},	/* SCALER_RESET_STATUS */
	{"SW_RESET_0_STATUS",			2,	1,	RO,	0},	/* SCALER_RESET_STATUS */
	{"SW_RESET_GLOBAL_STATUS",		0,	1,	RO,	0},	/* SCALER_RESET_STATUS */
	{"UVSP_RUNNING",			31,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC4_BCHS_RUNNING",			30,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC4_CONV420_RUNNING",			29,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC4_OTF_RUNNING",			28,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC4_POST_SC_RUNNING",			27,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC3_BCHS_RUNNING",			26,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC3_CONV420_RUNNING",			25,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC3_OTF_RUNNING",			24,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC3_POST_SC_RUNNING",			23,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_BCHS_RUNNING",			22,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_CONV420_RUNNING",			21,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_OTF_RUNNING",			20,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC2_POST_SC_RUNNING",			19,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_BCHS_RUNNING",			18,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_CONV420_RUNNING",			17,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_OTF_RUNNING",			16,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC1_POST_SC_RUNNING",			15,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_BCHS_RUNNING",			14,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_CONV420_RUNNING",			13,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_OTF_RUNNING",			12,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"PC0_POST_SC_RUNNING",			11,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC4_RUNNING",				10,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC3_RUNNING",				9,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC2_RUNNING",				8,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC1_RUNNING",				7,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"SC0_RUNNING",				6,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"LINE_FIFO1_RUNNING",			5,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	{"LINE_FIFO0_RUNNING",			4,	1,	RO,	0x0},	/* SCALER_RUNNING_STATUS */
	/* {"DITHER_1_RUNNING",			3,	1,	RO,	0x0},	*//* SCALER_RUNNING_STATUS */
	/* {"DITHER_0_RUNNING",			2,	1,	RO,	0x0},	*//* SCALER_RUNNING_STATUS */
	{"SCALER_IDLE_1",			1,	1,	RO,	0x1},	/* SCALER_RUNNING_STATUS */
	{"SCALER_IDLE_0",			0,	1,	RO,	0x1},	/* SCALER_RUNNING_STATUS */
	{"WDMA4_BUSY",				5,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA3_BUSY",				4,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA2_BUSY",				3,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA1_BUSY",				2,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"WDMA0_BUSY",				1,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"RDMA_BUSY",				0,	1,	RO,	0x0},	/* DMA_RUNNING_STATUS */
	{"CUR_VERTICAL_CNT_0",			16,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_0 */
	{"CUR_HORIZONTAL_CNT_0",		0,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_0 */
	{"CUR_VERTICAL_CNT_1",			16,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_1 */
	{"CUR_HORIZONTAL_CNT_1",		0,	14,	RO,	0x0},	/* SCALER_INPUT_STATUS_1 */
	{"OUT_STALL_BLOCKING_INT_0_MASK",	12,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SCALER_OVERFLOW_INT_0_MASK",		11,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_VERTICAL_UNF_INT_0_MASK",	10,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_VERTICAL_OVF_INT_0_MASK",	9,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_HORIZONTAL_UNF_INT_0_MASK",	8,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"INPUT_HORIZONTAL_OVF_INT_0_MASK",	7,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SHADOW_TRIGGER_INT_0_MASK",		5,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"SHADOW_HW_TRIGGER_INT_0_MASK",	4,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"CORE_FINISH_INT_0_MASK",		3,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"WDMA_FINISH_INT_0_MASK",		2,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"FRAME_START_INT_0_MASK",		1,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"FRAME_END_INT_0_MASK",		0,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_0 */
	{"OUT_STALL_BLOCKING_INT_1_MASK",	12,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"SCALER_OVERFLOW_INT_1_MASK",		11,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"INPUT_VERTICAL_UNF_INT_1_MASK",	10,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"INPUT_VERTICAL_OVF_INT_1_MASK",	9,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"INPUT_HORIZONTAL_UNF_INT_1_MASK",	8,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"INPUT_HORIZONTAL_OVF_INT_1_MASK",	7,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"SHADOW_TRIGGER_INT_1_MASK",		5,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"SHADOW_HW_TRIGGER_INT_1_MASK",	4,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"CORE_FINISH_INT_1_MASK",		3,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"WDMA_FINISH_INT_1_MASK",		2,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"FRAME_START_INT_1_MASK",		1,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"FRAME_END_INT_1_MASK",		0,	1,	RWI,	0x1},	/* SCALER_INTERRUPT_MASK_1 */
	{"OUT_STALL_BLOCKING_INT_0",		12,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SCALER_OVERFLOW_INT_0",		11,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_VERTICAL_UNF_INT_0",		10,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_VERTICAL_OVF_INT_0",		9,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_HORIZONTAL_UNF_INT_0",		8,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"INPUT_HORIZONTAL_OVF_INT_0",		7,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SHADOW_TRIGGER_INT_0",		5,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"SHADOW_HW_TRIGGER_INT_0",		4,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"CORE_FINISH_INT_0",			3,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"WDMA_FINISH_INT_0",			2,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"FRAME_START_INT_0",			1,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"FRAME_END_INT_0",			0,	1,	RO,	0x0},	/* SCALER_INTERRUPT_0 */
	{"OUT_STALL_BLOCKING_INT_1",		12,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"SCALER_OVERFLOW_INT_1",		11,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"INPUT_VERTICAL_UNF_INT_1",		10,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"INPUT_VERTICAL_OVF_INT_1",		9,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"INPUT_HORIZONTAL_UNF_INT_1",		8,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"INPUT_HORIZONTAL_OVF_INT_1",		7,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"SHADOW_TRIGGER_INT_1",		5,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"SHADOW_HW_TRIGGER_INT_1",		4,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"CORE_FINISH_INT_1",			3,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"WDMA_FINISH_INT_1",			2,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"FRAME_START_INT_1",			1,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"FRAME_END_INT_1",			0,	1,	RO,	0x0},	/* SCALER_INTERRUPT_1 */
	{"SCALER_VERSION",			0,	32,	RO,	0x03000000},	/* SCALER_VERSION */
	{"SWRESET",				0,	1,	WO,	0},	/* HWFC_SWRESET */
	{"HWFC_MODE",				0,	3,	RW,	0},	/* HWFC_MODE */
	{"REGION_IDX_BIN_B",			16,	12,	RO,	0},	/* HWFC_REGION_IDX_BIN */
	{"REGION_IDX_BIN_A",			0,	12,	RO,	0},	/* HWFC_REGION_IDX_BIN */
	{"REGION_IDX_GRAY_B",			16,	12,	RO,	0},	/* HWFC_REGION_IDX_GRAY */
	{"REGION_IDX_GRAY_A",			0,	12,	RO,	0},	/* HWFC_REGION_IDX_GRAY */
	{"CURR_REGION_B",			16,	12,	RO,	0},	/* HWFC_CURR_REGION */
	{"CURR_REGION_A",			0,	12,	RO,	0},	/* HWFC_CURR_REGION */
	{"FORMAT_A",				16,	1,	RW,	1},	/* HWFC_CONFIG_IMAGE_A */
	{"ID2_A",				12,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"ID1_A",				8,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"ID0_A",				4,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"PLANE_A",				0,	2,	RW,	0},	/* HWFC_CONFIG_IMAGE_A */
	{"TOTAL_IMAGE_BYTE0_A",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE0_A */
	{"TOTAL_WIDTH_BYTE0_A",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE0_A */
	{"TOTAL_IMAGE_BYTE1_A",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE1_A */
	{"TOTAL_WIDTH_BYTE1_A",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE1_A */
	{"TOTAL_IMAGE_BYTE2_A",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE2_A */
	{"TOTAL_WIDTH_BYTE2_A",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE2_A */
	{"FORMAT_B",				16,	1,	RW,	1},	/* HWFC_CONFIG_IMAGE_B */
	{"ID2_B",				12,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_B */
	{"ID1_B",				8,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_B */
	{"ID0_B",				4,	4,	RW,	0},	/* HWFC_CONFIG_IMAGE_B */
	{"PLANE_B",				0,	2,	RW,	0},	/* HWFC_CONFIG_IMAGE_B */
	{"TOTAL_IMAGE_BYTE0_B",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE0_B */
	{"TOTAL_WIDTH_BYTE0_B",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE0_B */
	{"TOTAL_IMAGE_BYTE1_B",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE1_B */
	{"TOTAL_WIDTH_BYTE1_B",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE1_B */
	{"TOTAL_IMAGE_BYTE2_B",			0,	28,	RW,	0},	/* HWFC_TOTAL_IMAGE_BYTE2_B */
	{"TOTAL_WIDTH_BYTE2_B",			0,	15,	RW,	0},	/* HWFC_TOTAL_WIDTH_BYTE2_B */
	{"FRAME_START_SELECT",			0,	1,	RW,	1},	/* HWFC_FRAME_START_SELECT */
	{"INDEX_RESET",				0,	1,	WO,	0},	/* HWFC_INDEX_RESET */
	{"HWFC_ENABLE_AUTO_CLEAR",		0,	1,	RW,	0},	/* HWFC_ENABLE_AUTO_CLEAR */
	{"UVSP_BINNING_X",			16,	16,	RWI,	0x400},	/* UVSP_BINNING */
	{"UVSP_BINNING_Y",			0,	16,	RWI,	0x400},	/* UVSP_BINNING */
	{"UVSP_RADIAL_EN",			31,	1,	RWI,	0x0},	/* UVSP_RADIALCTR */
	{"UVSP_RADIAL_CENTER_X",		16,	13,	RWI,	0x40},	/* UVSP_RADIALCTR */
	{"UVSP_RADIAL_CENTER_Y",		0,	12,	RWI,	0x40},	/* UVSP_RADIALCTR */
	{"UVSP_RADIAL_RANDOM_EN",		31,	1,	RWI,	0x0},	/* UVSP_RADIALRNDPOWER */
	{"UVSP_RADIAL_RANDOM_POWER",		16,	6,	RWI,	0x0},	/* UVSP_RADIALRNDPOWER */
	{"UVSP_RADIAL_GAIN_ADD_ONE",		0,	1,	RWI,	0x1},	/* UVSP_RADIALRNDPOWER */
	{"UVSP_RADIAL_ALPHA_R",			20,	10,	RWI,	0x100},	/* UVSP_RADIALALPHA */
	{"UVSP_RADIAL_ALPHA_G",			10,	10,	RWI,	0x100},	/* UVSP_RADIALALPHA */
	{"UVSP_RADIAL_ALPHA_B",			0,	10,	RWI,	0x100},	/* UVSP_RADIALALPHA */
	{"UVSP_RADIAL_BIQUAD_A",		0,	17,	RWI,	0x878B},	/* UVSP_RADIALBIA */
	{"UVSP_RADIAL_BIQUAD_B",		0,	17,	RWI,	0x2F55},	/* UVSP_RADIALBIB */
	{"UVSP_RADIAL_BIQUAD_SHIFT_ADDER",	16,	3,	RWI,	0x0},	/* UVSP_BIQUADCTR */
	{"UVSP_RADIAL_GREEN",			0,	1,	RWI,	0x0},	/* UVSP_BIQUADCTR */
	{"UVSP_RADIAL_REFINE_ENABLE",		31,	1,	RWI,	0x0},	/* UVSP_RADIALREFINE */
	{"UVSP_RADIAL_REFINE_LUMA_MIN",		16,	8,	RWI,	0x0},	/* UVSP_RADIALREFINE */
	{"UVSP_RADIAL_REFINE_DENOM",		0,	11,	RWI,	0x400},	/* UVSP_RADIALREFINE */
	{"UVSP_PEDESTAL_R",			20,	10,	RWI,	0x4},	/* UVSP_PEDESTAL */
	{"UVSP_PEDESTAL_G",			10,	10,	RWI,	0x4},	/* UVSP_PEDESTAL */
	{"UVSP_PEDESTAL_B",			0,	10,	RWI,	0x4},	/* UVSP_PEDESTAL */
	{"UVSP_OUT_OFFSET_R",			20,	8,	RWI,	0x0},	/* UVSP_OFFSET */
	{"UVSP_OUT_OFFSET_G",			10,	8,	RWI,	0x0},	/* UVSP_OFFSET */
	{"UVSP_OUT_OFFSET_B",			0,	8,	RWI,	0x0},	/* UVSP_OFFSET */
	{"UVSP_DESAT_EN",			31,	1,	RWI,	0x0},	/* UVSP_DESATU */
	{"UVSP_DESAT_LOW_U",			16,	8,	RWI,	0x0},	/* UVSP_DESATU */
	{"UVSP_DESAT_HIGH_U",			0,	8,	RWI,	0x14},	/* UVSP_DESATU */
	{"UVSP_DESAT_LOW_V",			16,	8,	RWI,	0x0},	/* UVSP_DESATV */
	{"UVSP_DESAT_HIGH_V",			0,	8,	RWI,	0x28},	/* UVSP_DESATV */
	{"UVSP_DESAT_SHIFT",			16,	4,	RWI,	0xC},	/* UVSP_DESATY */
	{"UVSP_DESAT_LUMA_MAX",			0,	8,	RWI,	0xC},	/* UVSP_DESATY */
	{"UVSP_DESAT_SINGLESIDE",		31,	1,	RWI,	0x0},	/* UVSP_DESATCTR */
	{"UVSP_DESAT_LUMA_OFFSET",		16,	10,	RWI,	0x0},	/* UVSP_DESATCTR */
	{"UVSP_DESAT_GAIN_OFFSET",		0,	10,	RWI,	0x0},	/* UVSP_DESATCTR */
	{"SSB_DMA_RUNNING",			0,	1,	RO,	0x0},	/* SSB_RUNNING_STATUS */
	{"SSB_OTF_RUNNING",			1,	1,	RO,	0x0},	/* SSB_RUNNING_STATUS */
	{"SSB_FS_BEFORE_FE_INT",		8,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_OVERFLOW_INT",			7,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_INPUT_VERTICAL_UNF_INT",		6,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_INPUT_VERTICAL_OVF_INT",		5,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_INPUT_HORIZONTAL_UNF_INT",	4,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_INPUT_HORIZONTAL_OVF_INT",	3,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_SHADOW_TRIGGER_INT",		2,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_FRAME_START_INT",			1,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_FRAME_END_INT",			0,	1,	RO,	0x0},	/* SSB_INTERRUPT */
	{"SSB_FS_BEFORE_FE_INT_MASK",		8,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_OVERFLOW_INT_MASK",		7,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_INPUT_VERTICAL_UNF_INT_MASK",	6,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_INPUT_VERTICAL_OVF_INT_MASK",	5,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_INPUT_HORIZONTAL_UNF_INT_MASK",	4,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_INPUT_HORIZONTAL_OVF_INT_MASK",	3,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_SHADOW_TRIGGER_INT_MASK",		2,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_FRAME_START_INT_MASK",		1,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_FRAME_END_INT_MASK",		0,	1,	RWI,	0x1},	/* SSB_INTERRUPT_MASK */
	{"SSB_READ_SHADOW_REG",			0,	1,	RWI,	0x0},	/* SSB_READ_SHADOW_REG_CTRL */
	{"SSB_SW_RESET",			0,	1,	WO,	0x0},	/* SSB_RESET_CTRL */
	{"SSB_SW_RESET_STATUS",			0,	1,	RO,	0x0},	/* SSB_RESET_STATUS */
	{"SSB_IMG_WIDTH",			0,	14,	RWI,	0x0},	/* SSB_IMG_WIDTH */
	{"SSB_IMG_HEIGHT",			0,	14,	RWI,	0x0},	/* SSB_IMG_HEIGHT */
	{"SSB_DMA_BASE_ADDR",			0,	32,	RWI,	0x0},	/* SSB_DMA_BASE_ADDR */
	{"SSB_CROP_EN",				0,	1,	RWI,	0x0},	/* SSB_CROP_EN */
	{"SSB_CROP_START_X",			0,	14,	RWI,	0x0},	/* SSB_CROP_START_X */
	{"SSB_CROP_START_Y",			0,	14,	RWI,	0x0},	/* SSB_CROP_START_Y */
	{"SSB_CROP_SIZE_X",			0,	14,	RWI,	0x0},	/* SSB_CROP_SIZE_X */
	{"QACTIVE_DISABLE",			13,	1,	RWI,	0x0},	/* SSB_CROP_SIZE_Y */
	{"SSB_CROP_SIZE_Y",			0,	13,	RWI,	0x0},	/* SSB_CROP_SIZE_Y */
	{"RDMA_DATA_FORMAT",			0,	3,	WRI,	0x00000000},	/* RDMA_DATA_FORMAT */
	{"WDMA0_DATA_FORMAT",			0,	4,	WRI,	0x00000000},	/* WDMA0_DATA_FORMAT */
	{"WDMA1_DATA_FORMAT",			0,	4,	WRI,	0x00000000},	/* WDMA1_DATA_FORMAT */
	{"WDMA2_DATA_FORMAT",			0,	4,	WRI,	0x00000000},	/* WDMA2_DATA_FORMAT */
	{"WDMA3_DATA_FORMAT",			0,	4,	WRI,	0x00000000},	/* WDMA3_DATA_FORMAT */
	{"WDMA4_DATA_FORMAT",			0,	4,	WRI,	0x00000000},	/* WDMA4_DATA_FORMAT */
	{"RDMA_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* RDMA_SWAP_TABLE */
	{"WDMA0_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* WDMA0_SWAP_TABLE */
	{"WDMA1_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* WDMA1_SWAP_TABLE */
	{"WDMA2_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* WDMA2_SWAP_TABLE */
	{"WDMA3_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* WDMA3_SWAP_TABLE */
	{"WDMA4_SWAP_TABLE",			0,	1,	WRI,	0x00000000},	/* WDMA4_SWAP_TABLE */
	/* {"RDMA_QOS_LUT_0",			0,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_1",			4,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_2",			8,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_3",			12,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_4",			16,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_5",			20,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_6",			24,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_7",			28,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT0 */
	/* {"RDMA_QOS_LUT_8",			0,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_9",			4,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_10",			8,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_11",			12,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_12",			16,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_13",			20,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_14",			24,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"RDMA_QOS_LUT_15",			28,	4,	WRI,	0x00000000},	*//* RDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_0",			0,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_1",			4,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_2",			8,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_3",			12,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_4",			16,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_5",			20,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_6",			24,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_7",			28,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT0 */
	/* {"WDMA_QOS_LUT_8",			0,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_9",			4,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_10",			8,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_11",			12,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_12",			16,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_13",			20,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_14",			24,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	/* {"WDMA_QOS_LUT_15",			28,	4,	WRI,	0x00000000},	*//* WDMA_QOS_LUT1 */
	{"WDMA0_CRC_RESULT0",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT0 */
	{"WDMA0_CRC_RESULT1",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT1 */
	{"WDMA0_CRC_RESULT2",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA0_CRC_RESULT2 */
	{"WDMA1_CRC_RESULT0",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT0 */
	{"WDMA1_CRC_RESULT1",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT1 */
	{"WDMA1_CRC_RESULT2",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA1_CRC_RESULT2 */
	{"WDMA2_CRC_RESULT0",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT0 */
	{"WDMA2_CRC_RESULT1",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT1 */
	{"WDMA2_CRC_RESULT2",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA2_CRC_RESULT2 */
	{"WDMA3_CRC_RESULT0",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA3_CRC_RESULT0 */
	{"WDMA3_CRC_RESULT1",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA3_CRC_RESULT1 */
	{"WDMA3_CRC_RESULT2",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA3_CRC_RESULT2 */
	{"WDMA4_CRC_RESULT0",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA4_CRC_RESULT0 */
	{"WDMA4_CRC_RESULT1",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA4_CRC_RESULT1 */
	{"WDMA4_CRC_RESULT2",			0,	32,	RO,	0xFFFFFFFF},	/* WDMA4_CRC_RESULT2 */
	{"WDMA0_FLIP_CONTROL",			0,	2,	WRI,	0x00000000},	/* WDMA0_FLIP_CONTROL */
	{"WDMA1_FLIP_CONTROL",			0,	2,	WRI,	0x00000000},	/* WDMA1_FLIP_CONTROL */
	{"WDMA2_FLIP_CONTROL",			0,	2,	WRI,	0x00000000},	/* WDMA2_FLIP_CONTROL */
	{"WDMA3_FLIP_CONTROL",			0,	2,	WRI,	0x00000000},	/* WDMA3_FLIP_CONTROL */
	{"WDMA4_FLIP_CONTROL",			0,	2,	WRI,	0x00000000},	/* WDMA4_FLIP_CONTROL */
	{"RDMA_CLK_EN",				0,	1,	WRI,	0x00000001},	/* RDMA_CLK_EN */
	{"WDMA0_CLK_EN",			0,	1,	WRI,	0x00000001},	/* WDMA0_CLK_EN */
	{"WDMA1_CLK_EN",			0,	1,	WRI,	0x00000001},	/* WDMA1_CLK_EN */
	{"WDMA2_CLK_EN",			0,	1,	WRI,	0x00000001},	/* WDMA2_CLK_EN */
	{"WDMA3_CLK_EN",			0,	1,	WRI,	0x00000001},	/* WDMA3_CLK_EN */
	{"WDMA4_CLK_EN",			0,	1,	WRI,	0x00000001},	/* WDMA4_CLK_EN */
	{"DMA_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* DMA_CLK_GATE_DISABLE */
	{"WDMA0_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA0_CLK_GATE_DISABLE */
	{"WDMA1_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA1_CLK_GATE_DISABLE */
	{"WDMA2_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA2_CLK_GATE_DISABLE */
	{"WDMA3_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA3_CLK_GATE_DISABLE */
	{"WDMA4_CLK_GATE_DISABLE",		0,	1,	WRI,	0x00000000},	/* WDMA4_CLK_GATE_DISABLE */
	{"RDMA_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR01 */
	{"RDMA_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR02 */
	{"RDMA_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR03 */
	{"RDMA_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR04 */
	{"RDMA_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR05 */
	{"RDMA_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR06 */
	{"RDMA_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR07 */
	{"RDMA_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR08 */
	{"RDMA_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR11 */
	{"RDMA_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR12 */
	{"RDMA_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR13 */
	{"RDMA_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR14 */
	{"RDMA_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR15 */
	{"RDMA_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR16 */
	{"RDMA_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR17 */
	{"RDMA_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR18 */
	{"RDMA_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR21 */
	{"RDMA_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR22 */
	{"RDMA_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR23 */
	{"RDMA_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR24 */
	{"RDMA_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR25 */
	{"RDMA_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR26 */
	{"RDMA_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR27 */
	{"RDMA_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* RDMA_BASE_ADDR28 */
	{"RDMA_WIDTH",				0,	14,	WRI,	0x00000010},	/* RDMA_WIDTH */
	{"RDMA_HEIGHT",				0,	14,	WRI,	0x00000010},	/* RDMA_HEIGHT */
	{"RDMA_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* RDMA_STRIDE */
	{"RDMA_Y_STRIDE",			0,	14,	WRI,	0x00000020},	/* RDMA_STRIDE */
	{"RDMA_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* RDMA_BASE_ADDR_EN */
	{"RDMA_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* RDMA_FRAME_CNT */
	{"RDMA_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* RDMA_FRAME_CNT */
	{"WDMA0_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR01 */
	{"WDMA0_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR02 */
	{"WDMA0_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR03 */
	{"WDMA0_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR04 */
	{"WDMA0_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR05 */
	{"WDMA0_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR06 */
	{"WDMA0_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR07 */
	{"WDMA0_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR08 */
	{"WDMA0_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR11 */
	{"WDMA0_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR12 */
	{"WDMA0_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR13 */
	{"WDMA0_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR14 */
	{"WDMA0_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR15 */
	{"WDMA0_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR16 */
	{"WDMA0_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR17 */
	{"WDMA0_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR18 */
	{"WDMA0_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR21 */
	{"WDMA0_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR22 */
	{"WDMA0_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR23 */
	{"WDMA0_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR24 */
	{"WDMA0_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR25 */
	{"WDMA0_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR26 */
	{"WDMA0_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR27 */
	{"WDMA0_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR28 */
	{"WDMA0_WIDTH",				0,	14,	WRI,	0x00000010},	/* WDMA0_WIDTH */
	{"WDMA0_HEIGHT",			0,	14,	WRI,	0x00000010},	/* WDMA0_HEIGHT */
	{"WDMA0_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* WDMA0_STRIDE */
	{"WDMA0_Y_STRIDE",			0,	15,	WRI,	0x00000020},	/* WDMA0_STRIDE */
	{"WDMA0_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* WDMA0_BASE_ADDR_EN */
	{"WDMA0_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA0_FRAME_CNT */
	{"WDMA0_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA0_FRAME_CNT */
	{"WDMA1_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR01 */
	{"WDMA1_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR02 */
	{"WDMA1_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR03 */
	{"WDMA1_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR04 */
	{"WDMA1_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR05 */
	{"WDMA1_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR06 */
	{"WDMA1_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR07 */
	{"WDMA1_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR08 */
	{"WDMA1_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR11 */
	{"WDMA1_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR12 */
	{"WDMA1_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR13 */
	{"WDMA1_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR14 */
	{"WDMA1_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR15 */
	{"WDMA1_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR16 */
	{"WDMA1_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR17 */
	{"WDMA1_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR18 */
	{"WDMA1_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR21 */
	{"WDMA1_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR22 */
	{"WDMA1_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR23 */
	{"WDMA1_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR24 */
	{"WDMA1_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR25 */
	{"WDMA1_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR26 */
	{"WDMA1_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR27 */
	{"WDMA1_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR28 */
	{"WDMA1_WIDTH",				0,	14,	WRI,	0x00000010},	/* WDMA1_WIDTH */
	{"WDMA1_HEIGHT",			0,	14,	WRI,	0x00000010},	/* WDMA1_HEIGHT */
	{"WDMA1_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* WDMA1_STRIDE */
	{"WDMA1_Y_STRIDE",			0,	15,	WRI,	0x00000020},	/* WDMA1_STRIDE */
	{"WDMA1_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* WDMA1_BASE_ADDR_EN */
	{"WDMA1_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA1_FRAME_CNT */
	{"WDMA1_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA1_FRAME_CNT */
	{"WDMA2_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR01 */
	{"WDMA2_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR02 */
	{"WDMA2_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR03 */
	{"WDMA2_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR04 */
	{"WDMA2_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR05 */
	{"WDMA2_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR06 */
	{"WDMA2_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR07 */
	{"WDMA2_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR08 */
	{"WDMA2_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR11 */
	{"WDMA2_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR12 */
	{"WDMA2_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR13 */
	{"WDMA2_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR14 */
	{"WDMA2_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR15 */
	{"WDMA2_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR16 */
	{"WDMA2_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR17 */
	{"WDMA2_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR18 */
	{"WDMA2_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR21 */
	{"WDMA2_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR22 */
	{"WDMA2_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR23 */
	{"WDMA2_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR24 */
	{"WDMA2_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR25 */
	{"WDMA2_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR26 */
	{"WDMA2_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR27 */
	{"WDMA2_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR28 */
	{"WDMA2_WIDTH",				0,	14,	WRI,	0x00000010},	/* WDMA2_WIDTH */
	{"WDMA2_HEIGHT",			0,	14,	WRI,	0x00000010},	/* WDMA2_HEIGHT */
	{"WDMA2_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* WDMA2_STRIDE */
	{"WDMA2_Y_STRIDE",			0,	15,	WRI,	0x00000020},	/* WDMA2_STRIDE */
	{"WDMA2_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* WDMA2_BASE_ADDR_EN */
	{"WDMA2_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA2_FRAME_CNT */
	{"WDMA2_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA2_FRAME_CNT */
	{"WDMA3_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR01 */
	{"WDMA3_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR02 */
	{"WDMA3_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR03 */
	{"WDMA3_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR04 */
	{"WDMA3_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR05 */
	{"WDMA3_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR06 */
	{"WDMA3_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR07 */
	{"WDMA3_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR08 */
	{"WDMA3_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR11 */
	{"WDMA3_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR12 */
	{"WDMA3_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR13 */
	{"WDMA3_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR14 */
	{"WDMA3_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR15 */
	{"WDMA3_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR16 */
	{"WDMA3_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR17 */
	{"WDMA3_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR18 */
	{"WDMA3_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR21 */
	{"WDMA3_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR22 */
	{"WDMA3_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR23 */
	{"WDMA3_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR24 */
	{"WDMA3_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR25 */
	{"WDMA3_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR26 */
	{"WDMA3_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR27 */
	{"WDMA3_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR28 */
	{"WDMA3_WIDTH",				0,	14,	WRI,	0x00000010},	/* WDMA3_WIDTH */
	{"WDMA3_HEIGHT",			0,	14,	WRI,	0x00000010},	/* WDMA3_HEIGHT */
	{"WDMA3_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* WDMA3_STRIDE */
	{"WDMA3_Y_STRIDE",			0,	15,	WRI,	0x00000020},	/* WDMA3_STRIDE */
	{"WDMA3_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* WDMA3_BASE_ADDR_EN */
	{"WDMA3_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA3_FRAME_CNT */
	{"WDMA3_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA3_FRAME_CNT */
	{"WDMA4_BASE_ADDR01",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR01 */
	{"WDMA4_BASE_ADDR02",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR02 */
	{"WDMA4_BASE_ADDR03",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR03 */
	{"WDMA4_BASE_ADDR04",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR04 */
	{"WDMA4_BASE_ADDR05",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR05 */
	{"WDMA4_BASE_ADDR06",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR06 */
	{"WDMA4_BASE_ADDR07",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR07 */
	{"WDMA4_BASE_ADDR08",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR08 */
	{"WDMA4_BASE_ADDR11",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR11 */
	{"WDMA4_BASE_ADDR12",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR12 */
	{"WDMA4_BASE_ADDR13",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR13 */
	{"WDMA4_BASE_ADDR14",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR14 */
	{"WDMA4_BASE_ADDR15",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR15 */
	{"WDMA4_BASE_ADDR16",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR16 */
	{"WDMA4_BASE_ADDR17",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR17 */
	{"WDMA4_BASE_ADDR18",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR18 */
	{"WDMA4_BASE_ADDR21",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR21 */
	{"WDMA4_BASE_ADDR22",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR22 */
	{"WDMA4_BASE_ADDR23",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR23 */
	{"WDMA4_BASE_ADDR24",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR24 */
	{"WDMA4_BASE_ADDR25",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR25 */
	{"WDMA4_BASE_ADDR26",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR26 */
	{"WDMA4_BASE_ADDR27",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR27 */
	{"WDMA4_BASE_ADDR28",			0,	32,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR28 */
	{"WDMA4_WIDTH",				0,	14,	WRI,	0x00000010},	/* WDMA4_WIDTH */
	{"WDMA4_HEIGHT",			0,	14,	WRI,	0x00000010},	/* WDMA4_HEIGHT */
	{"WDMA4_C_STRIDE",			16,	14,	WRI,	0x00000020},	/* WDMA4_STRIDE */
	{"WDMA4_Y_STRIDE",			0,	15,	WRI,	0x00000020},	/* WDMA4_STRIDE */
	{"WDMA4_BASE_ADDR_EN1",			0,	1,	WRI,	0x00000001},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN2",			1,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN3",			2,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN4",			3,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN5",			4,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN6",			5,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN7",			6,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_BASE_ADDR_EN8",			7,	1,	WRI,	0x00000000},	/* WDMA4_BASE_ADDR_EN */
	{"WDMA4_FRAME_CNT_BEFORE",		0,	4,	RO,	0x00000000},	/* WDMA4_FRAME_CNT */
	{"WDMA4_FRAME_CNT_PRESENT",		4,	4,	RO,	0x00000000},	/* WDMA4_FRAME_CNT */
	{"WDMA_PRI_A_5",			20,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_4",			16,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_3",			12,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_2",			8,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_1",			4,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_0",			0,	4,	RW,	0x0},	/* WDMA_PRI_0 */
	{"WDMA_PRI_A_8",			8,	4,	RW,	0x0},	/* WDMA_PRI_1 */
	{"WDMA_PRI_A_7",			4,	4,	RW,	0x0},	/* WDMA_PRI_1 */
	{"WDMA_PRI_A_6",			0,	4,	RW,	0x0},	/* WDMA_PRI_1 */
	{"WDMA_PRI_B_6",			18,	3,	RW,	0x0},	/* WDMA_PRI_1 */
	{"WDMA_PRI_B_5",			15,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_PRI_B_4",			12,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_PRI_B_3",			9,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_PRI_B_2",			6,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_PRI_B_1",			3,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_PRI_B_0",			0,	3,	RW,	0x0},	/* WDMA_PRI_2 */
	{"WDMA_AXI_FIXEDPRITYP",		1,	1,	RW,	0x0},	/* WDMA_AXI_PRI */
	{"WDMA_AXI_PRITYP",			0,	1,	RW,	0x0},	/* WDMA_AXI_PRI */
	{"WDMA2_SRAM_BASE",			20,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_0 */
	{"WDMA1_SRAM_BASE",			10,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_0 */
	{"WDMA0_SRAM_BASE",			0,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_0 */
	{"WDMA5_SRAM_BASE",			20,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_1 */
	{"WDMA4_SRAM_BASE",			10,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_1 */
	{"WDMA3_SRAM_BASE",			0,	9,	RW,	0x000},	/* WDMA_SRAM_BASE_1 */
};

#endif
