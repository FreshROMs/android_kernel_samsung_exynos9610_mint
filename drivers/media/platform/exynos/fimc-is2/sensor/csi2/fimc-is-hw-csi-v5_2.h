/*
 * Samsung Exynos SoC series FIMC-IS2 driver
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_HW_CSIS_V5_2_H
#define FIMC_IS_HW_CSIS_V5_2_H

#include "fimc-is-hw-api-common.h"

#define CSIS_REG_DMA_1D_DMA			(1)
#define CSIS_REG_DMA_2D_DMA			(0)
#define CSIS_REG_DMA_PACK12			(1)
#define CSIS_REG_DMA_NORMAL			(0)
#define CSIS_REG_DMA_DUMP			(1)
#define CSIS_REG_DMA_STG_LEGACY_MODE		(0)
#define CSIS_REG_DMA_STG_PACKET_MODE		(1)
#define CSIS_REG_DMA_INPUT_OTF			(0)
#define CSIS_REG_DMA_INPUT_PRL			(1)

/*
 * 'b10 : Quad pixel mode (RAW8/10/12)
 * 'b01 : Dual pixel mode (RAW8/10/12, YUV422)
 * 'b00 : Single pixel mode
 */
#define CSIS_PIXEL_MODE_QUAD			(2)
#define CSIS_PIXEL_MODE_DUAL			(1)
#define CSIS_PIXEL_MODE_SING			(0)

#define CSIS_DMA_INPUT_PATH	CSIS_REG_DMA_INPUT_OTF

#ifdef DBG_CSIISR
#define CSIS_IRQ_MASK0 0x0FFFFF1F
#define CSIS_IRQ_MASK1 0x0000FFFF
#define CSIS_DMA_IRQ_MASK 0x00F11FF0
#define CSIS_ERR_MASK0 0x000FFF1F
#define CSIS_ERR_MASK1 0x0000FFF0
#define CSIS_DMA_ERR_MASK 0x00F11000
#else
/* Default Interrupt Masking */
#define CSIS_IRQ_MASK0 0x011FFF1F
#define CSIS_IRQ_MASK1 0x0000FFF0
#define CSIS_DMA_IRQ_MASK 0x00F11FF0
#define CSIS_ERR_MASK0 0x000FFF1F
#define CSIS_ERR_MASK1 0x0000FFF0
#define CSIS_DMA_ERR_MASK 0x00F11000
#endif /* DBG_CSIISR */

/* the total count of csis v5.0's regs */
enum fimc_is_hw_csi_reg_name {
	CSIS_R_CSIS_VERSION,
	CSIS_R_CSIS_CMN_CTRL,
	CSIS_R_CSIS_CLK_CTRL,
	CSIS_R_CSIS_INT_MSK0,
	CSIS_R_CSIS_INT_SRC0,
	CSIS_R_CSIS_INT_MSK1,
	CSIS_R_CSIS_INT_SRC1,
	CSIS_R_ISP_CONFIG_CH0,
	CSIS_R_ISP_RESOL_CH0,
	CSIS_R_ISP_SYNC_CH0,
	CSIS_R_ISP_CONFIG_CH1,
	CSIS_R_ISP_RESOL_CH1,
	CSIS_R_ISP_SYNC_CH1,
	CSIS_R_ISP_CONFIG_CH2,
	CSIS_R_ISP_RESOL_CH2,
	CSIS_R_ISP_SYNC_CH2,
	CSIS_R_ISP_CONFIG_CH3,
	CSIS_R_ISP_RESOL_CH3,
	CSIS_R_ISP_SYNC_CH3,
	CSIS_R_SDW_CONFIG_CH0,
	CSIS_R_SDW_RESOL_CH0,
	CSIS_R_SDW_SYNC_CH0,
	CSIS_R_SDW_CONFIG_CH1,
	CSIS_R_SDW_RESOL_CH1,
	CSIS_R_SDW_SYNC_CH1,
	CSIS_R_SDW_CONFIG_CH2,
	CSIS_R_SDW_RESOL_CH2,
	CSIS_R_SDW_SYNC_CH2,
	CSIS_R_SDW_CONFIG_CH3,
	CSIS_R_SDW_RESOL_CH3,
	CSIS_R_SDW_SYNC_CH3,
	CSIS_R_FRM_CNT_CH0,
	CSIS_R_FRM_CNT_CH1,
	CSIS_R_FRM_CNT_CH2,
	CSIS_R_FRM_CNT_CH3,
	CSIS_R_LINE_INTR_CH0,
	CSIS_R_LINE_INTR_CH1,
	CSIS_R_LINE_INTR_CH2,
	CSIS_R_LINE_INTR_CH3,
	CSIS_R_LRTE_CONFIG,
	CSIS_R_DEBUG_OPTION_SUITE,
	CSIS_R_PHY_STATUS,
	CSIS_R_PHY_CMN_CTRL,
	CSIS_REG_CNT
};

static struct fimc_is_reg csi_regs[CSIS_REG_CNT] = {
	{0x0000, "CSIS_VERSION"},
	{0x0004, "CSIS_CMN_CTRL"},
	{0x0008, "CSIS_CLK_CTRL"},
	{0x0010, "CSIS_INT_MSK0"},
	{0x0014, "CSIS_INT_SRC0"},
	{0x0018, "CSIS_INT_MSK1"},
	{0x001C, "CSIS_INT_SRC1"},
	{0x0040, "ISP_CONFIG_CH0"},
	{0x0044, "ISP_RESOL_CH0"},
	{0x0048, "ISP_SYNC_CH0"},
	{0x0050, "ISP_CONFIG_CH1"},
	{0x0054, "ISP_RESOL_CH1"},
	{0x0058, "ISP_SYNC_CH1"},
	{0x0060, "ISP_CONFIG_CH2"},
	{0x0064, "ISP_RESOL_CH2"},
	{0x0068, "ISP_SYNC_CH2"},
	{0x0070, "ISP_CONFIG_CH3"},
	{0x0074, "ISP_RESOL_CH3"},
	{0x0078, "ISP_SYNC_CH3"},
	{0x0080, "SDW_CONFIG_CH0"},
	{0x0084, "SDW_RESOL_CH0"},
	{0x0088, "SDW_SYNC_CH0"},
	{0x0090, "SDW_CONFIG_CH1"},
	{0x0094, "SDW_RESOL_CH1"},
	{0x0098, "SDW_SYNC_CH1"},
	{0x00A0, "SDW_CONFIG_CH2"},
	{0x00A4, "SDW_RESOL_CH2"},
	{0x00A8, "SDW_SYNC_CH2"},
	{0x00B0, "SDW_CONFIG_CH3"},
	{0x00b4, "SDW_RESOL_CH3"},
	{0x00B8, "SDW_SYNC_CH3"},
	{0x0100, "FRM_CNT_CH0"},
	{0x0104, "FRM_CNT_CH1"},
	{0x0108, "FRM_CNT_CH2"},
	{0x010C, "FRM_CNT_CH3"},
	{0x0110, "LINE_INTR_CH0"},
	{0x0114, "LINE_INTR_CH1"},
	{0x0118, "LINE_INTR_CH2"},
	{0x011C, "LINE_INTR_CH3"},
	{0x0120, "LRTE_CONFIG"},
	{0x0500, "DEBUG_OPTION_SUITE"},
	{0x0700, "PHY_STATUS"},
	{0x0704, "PHY_CMN_CTRL"},
};

/* the total count of the fields of csis v5.0's reg */
enum fimc_is_hw_csi_reg_field {
	CSIS_F_MAJOR,
	CSIS_F_MINOR,
	CSIS_F_REVISION,
	CSIS_F_DERIVATIVE,
	CSIS_F_PHY_SEL,
	CSIS_F_QCHANNEL_EN,
	CSIS_F_UPDATE_SHADOW,
	CSIS_F_DESKEW_LEVEL,
	CSIS_F_INTERLEAVE_MODE,
	CSIS_F_LANE_NUMBER,
	CSIS_F_DESCRAMBLE_EN,
	CSIS_F_UPDATE_SHADOW_CTRL,
	CSIS_F_SW_RESET,
	CSIS_F_CSI_EN,
	CSIS_F_CLKGATE_TRAIL,
	CSIS_F_CLKGATE_EN,
	CSIS_F_MSK_EVENBEFORE,
	CSIS_F_MSK_EVENAFTER,
	CSIS_F_MSK_ODDBEFORE,
	CSIS_F_MSK_ODDAFTER,
	CSIS_F_MSK_FRAMESTART,
	CSIS_F_MSK_FRAMEEND,
	CSIS_F_MSK_ERR_SOT_HS,
	CSIS_F_MSK_ERR_LOST_FS,
	CSIS_F_MSK_ERR_LOST_FE,
	CSIS_F_MSK_ERR_OVER,
	CSIS_F_MSK_ERR_WRONG_CFG,
	CSIS_F_MSK_ERR_ECC,
	CSIS_F_MSK_ERR_CRC_DPHY,
	CSIS_F_MSK_ERR_ID,
	CSIS_F_EVENBEFORE,
	CSIS_F_EVENAFTER,
	CSIS_F_ODDBEFORE,
	CSIS_F_ODDAFTER,
	CSIS_F_FRAMESTART,
	CSIS_F_FRAMEEND,
	CSIS_F_ERR_SOT_HS,
	CSIS_F_ERR_LOST_FS,
	CSIS_F_ERR_LOST_FE,
	CSIS_F_ERR_OVER,
	CSIS_F_ERR_WRONG_CFG,
	CSIS_F_ERR_ECC,
	CSIS_F_ERR_CRC_DPHY,
	CSIS_F_ERR_ID,
	CSIS_F_MSK_VRESOL_MISMATCH,
	CSIS_F_MSK_HRESOL_MISMATCH,
	CSIS_F_MSK_RXINVALIDCODEHS,
	CSIS_F_MSK_ERRSOTSYNCHS,
	CSIS_F_MSK_MAL_CRC,
	CSIS_F_MSK_ERR_CRC_CPHY,
	CSIS_F_MSK_LINE_END,
	CSIS_F_VRESOL_MISMATCH,
	CSIS_F_HRESOL_MISMATCH,
	CSIS_F_RXINVALIDCODEHS,
	CSIS_F_ERRSOTSYNCHS,
	CSIS_F_MAL_CRC,
	CSIS_F_ERR_CRC_CPHY,
	CSIS_F_LINE_END,
	CSIS_F_PIXEL_MODE,
	CSIS_F_POTF_ONLY,
	CSIS_F_RGB_SWAP,
	CSIS_F_DECOMP_PREDICT,
	CSIS_F_DECOMP_EN,
	CSIS_F_DATAFORMAT,
	CSIS_F_VIRTUAL_CHANNEL,
	CSIS_F_VRESOL,
	CSIS_F_HRESOL,
	CSIS_F_HSYNC_LINTV,
	CSIS_F_PIXEL_MODE_SDW,
	CSIS_F_POTF_ONLY_SDW,
	CSIS_F_RGB_SWAP_SDW,
	CSIS_F_DECOMP_PREDICT_SDW,
	CSIS_F_DECOMP_EN_SDW,
	CSIS_F_DATAFORMAT_SDW,
	CSIS_F_VIRTUAL_CHANNEL_SDW,
	CSIS_F_VRESOL_SDW,
	CSIS_F_HRESOL_SDW,
	CSIS_F_HSYNC_LINTV_SDW,
	CSIS_F_FRM_CNT_CH0,
	CSIS_F_FRM_CNT_CH1,
	CSIS_F_FRM_CNT_CH2,
	CSIS_F_FRM_CNT_CH3,
	CSIS_F_LINE_INTR_CH_N,
	CSIS_F_EPD_EN,
	CSIS_F_EPD_SP_SPACERS,
	CSIS_F_D_PHY_EPD_OPTION,
	CSIS_F_EPD_LP_SPACERS,
	CSIS_F_DISABLE_PIXEL_ALIGN_MODE,
	CSIS_F_ENABLE_PIXEL_ALIGN_MODE,
	CSIS_F_ULPSDAT,
	CSIS_F_STOPSTATEDAT,
	CSIS_F_ULPSCLK,
	CSIS_F_STOPSTATECLK,
	CSIS_F_ENABLE_DAT,
	CSIS_F_ENABLE_CLK,
	CSIS_REG_FIELD_CNT
};

static struct fimc_is_field csi_fields[CSIS_REG_FIELD_CNT] = {
/* field_name, start_bit, bit_width, type, reset */
	{"MAJOR", 24, 8, RW, 0},
	{"MINOR", 16, 8, RW, 0},
	{"REVISION", 8, 8, RW, 0},
	{"DERIVATIVE", 0, 8, RW, 0},
	{"PHY_SEL", 21, 1, RW, 0},
	{"QCHANNEL_EN", 20, 1, RW, 0},
	{"UPDATE_SHADOW", 16, 4, RW, 0},
	{"DESKEW_LEVEL", 13, 3, RW, 2},
	{"INTERLEAVE_MODE", 10, 2, RW, 0},
	{"LANE_NUMBER", 8, 2, RW, 0},
	{"DESCRAMBLE_EN", 3, 1, RW, 0},
	{"UPDATE_SHADOW_CTRL", 2, 1, RW, 0},
	{"SW_RESET", 1, 1, WO, 0},
	{"CSI_EN", 0, 1, RW, 0},
	{"CLKGATE_TRAIL", 16, 4, RW, 0},
	{"CLKGATE_EN", 4, 1, RW, 1},
	{"MSK_EVENBEFORE", 31, 1, RW, 0},
	{"MSK_EVENAFTER", 30, 1, RW, 0},
	{"MSK_ODDBEFORE", 29, 1, RW, 0},
	{"MSK_ODDAFTER", 28, 1, RW, 0},
	{"MSK_FRAMESTART", 24, 4, RW, 0},
	{"MSK_FRAMEEND", 20, 4, RW, 0},
	{"MSK_ERR_SOT_HS", 16, 4, RW, 0},
	{"MSK_ERR_LOST_FS", 12, 4, RW, 0},
	{"MSK_ERR_LOST_FE", 8, 4, RW, 0},
	{"MSK_ERR_OVER", 4, 1, RW, 0},
	{"MSK_ERR_WRONG_CFG", 3, 1, RW, 0},
	{"MSK_ERR_ECC", 2, 1, RW, 0},
	{"MSK_ERR_CRC_DPHY", 1, 1, RW, 0},
	{"MSK_ERR_ID", 0, 1, RW, 0},
	{"EVENBEFORE", 31, 1, RW, 0},
	{"EVENAFTER", 30, 1, RW, 0},
	{"ODDBEFORE", 29, 1, RW, 0},
	{"ODDAFTER", 28, 1, RW, 0},
	{"FRAMESTART", 24, 4, RW, 0},
	{"FRAMEEND", 20, 4, RW, 0},
	{"ERR_SOT_HS", 16, 4, RW, 0},
	{"ERR_LOST_FS", 12, 4, RW, 0},
	{"ERR_LOST_FE", 8, 4, RW, 0},
	{"ERR_OVER", 4, 1, RW, 0},
	{"ERR_WRONG_CFG", 3, 1, RW, 0},
	{"ERR_ECC", 2, 1, RW, 0},
	{"ERR_CRC_DPHY", 1, 1, RW, 0},
	{"ERR_ID", 0, 1, RW, 0},
	{"MSK_VREOSL_MISMATCH", 12, 4, RW, 0},
	{"MSK_HREOSL_MISMATCH", 8, 4, RW, 0},
	{"MSK_RXINVALIDCODEHS", 7, 1, RW, 0},
	{"MSK_ERRSOTSYNCHS", 6, 1, RW, 0},
	{"MSK_MAL_CRC", 5, 1, RW, 0},
	{"MSK_ERR_CRC_CPHY", 4, 1, RW, 0},
	{"MSK_LINE_END", 0, 4, RW, 0},
	{"VREOSL_MISMATCH", 12, 4, RW, 0},
	{"HREOSL_MISMATCH", 8, 4, RW, 0},
	{"RXINVALIDCODEHS", 7, 1, RW, 0},
	{"ERRSOTSYNCHS", 6, 1, RW, 0},
	{"MAL_CRC", 5, 1, RW, 0},
	{"ERR_CRC_CPHY", 4, 1, RW, 0},
	{"LINE_END", 0, 4, RW, 0},
	{"PIXEL_MODE", 12, 2, RW, 0},
	{"POTF_ONLY", 11, 1, RW, 0},
	{"RGB_SWAP", 10, 1, RW, 0},
	{"DECOMP_PREDICT", 9, 1, RW, 0},
	{"DECOMP_EN", 8, 1, RW, 0},
	{"DATAFORMAT", 2, 6, RW, 0x3F},
	{"VIRTUAL_CHANNEL", 0, 2, RW, 0},
	{"VRESOL", 16, 16, RW, 0x8000},
	{"HRESOL", 0, 16, RW, 0x8000},
	{"HSYNC_LINTV", 18, 6, RW, 0},
	{"PIXEL_MODE_SDW", 12, 2, RO, 0},
	{"POTF_ONLY_SDW", 11, 1, RO, 0},
	{"RGB_SWAP_SDW", 10, 1, RO, 0},
	{"DECOMP_PREDICT_SDW", 9, 1, RO, 0},
	{"DECOMP_EN_SDW", 8, 1, RO, 0},
	{"DATAFORMAT_SDW", 2, 6, RO, 0x3F},
	{"VIRTUAL_CHANNEL_SDW", 0, 2, RO, 0},
	{"VRESOL_SDW", 16, 16, RO, 0x8000},
	{"HRESOL_SDW", 0, 16, RO, 0x8000},
	{"HSYNC_LINTV_SDW", 18, 6, RO, 0},
	{"FRM_CNT_CH0", 0, 32, RW, 0},
	{"FRM_CNT_CH1", 0, 32, RW, 0},
	{"FRM_CNT_CH2", 0, 32, RW, 0},
	{"FRM_CNT_CH3", 0, 32, RW, 0},
	{"LINE_INTR_CH_N", 0, 32, RW, 0},
	{"EPD_EN", 31, 1, RW, 0},
	{"EPD_SP_SPACERS", 16, 15, RW, 0},
	{"D_PHY_EPD_OPTION", 15, 1, RW, 0},
	{"EPD_LP_SPACERS", 0, 15, RW, 0},
	{"DISABLE_PIXEL_ALIGN_MODE", 25, 1, RW, 0},
	{"ENABLE_PIXEL_ALIGN_MODE", 0, 1, RW, 0},
	{"ULPSDAT", 8, 4, RO, 0},
	{"STOPSTATEDAT", 4, 4, RO, 0xF},
	{"ULPSCLK", 1, 1, RO, 0},
	{"STOPSTATECLK", 0, 1, RO, 1},
	{"ENABLE_DAT", 1, 4, RW, 0},
	{"ENABLE_CLK", 0, 1, RW, 0},
};

/* CSISx4 VC DMA */
enum fimc_is_hw_csi_vcdma_reg_name {
	CSIS_R_DMA0_CTRL,
	CSIS_R_DMA0_FMT,
	CSIS_R_DMA0_SKIP,
	CSIS_R_DMA0_SKIP_SEQ,
	CSIS_R_DMA0_ADDR1,
	CSIS_R_DMA0_ADDR2,
	CSIS_R_DMA0_ADDR3,
	CSIS_R_DMA0_ADDR4,
	CSIS_R_DMA0_ADDR5,
	CSIS_R_DMA0_ADDR6,
	CSIS_R_DMA0_ADDR7,
	CSIS_R_DMA0_ADDR8,
	CSIS_R_DMA0_ADDR9,
	CSIS_R_DMA0_ADDR10,
	CSIS_R_DMA0_ADDR11,
	CSIS_R_DMA0_ADDR12,
	CSIS_R_DMA0_ADDR13,
	CSIS_R_DMA0_ADDR14,
	CSIS_R_DMA0_ADDR15,
	CSIS_R_DMA0_ADDR16,
	CSIS_R_DMA0_ADDR17,
	CSIS_R_DMA0_ADDR18,
	CSIS_R_DMA0_ADDR19,
	CSIS_R_DMA0_ADDR20,
	CSIS_R_DMA0_ADDR21,
	CSIS_R_DMA0_ADDR22,
	CSIS_R_DMA0_ADDR23,
	CSIS_R_DMA0_ADDR24,
	CSIS_R_DMA0_ADDR25,
	CSIS_R_DMA0_ADDR26,
	CSIS_R_DMA0_ADDR27,
	CSIS_R_DMA0_ADDR28,
	CSIS_R_DMA0_ADDR29,
	CSIS_R_DMA0_ADDR30,
	CSIS_R_DMA0_ADDR31,
	CSIS_R_DMA0_ADDR32,
	CSIS_R_DMA0_ACT_CTRL,
	CSIS_R_DMA0_ACT_FCNTSEQ,
	CSIS_R_DMA0_ACT_FMT,
	CSIS_R_DMA0_ACT_SKIP,
	CSIS_R_DMA0_ACT_SKIP_SEQ,
	CSIS_R_DMA0_RESOL,
	CSIS_R_DMA0_FCNTSEQ,
	CSIS_R_DMA0_FCNTSEQ_STAT,
	CSIS_VCDMA_REG_CNT
};

static struct fimc_is_reg csi_vcdma_regs[CSIS_VCDMA_REG_CNT] = {
	{0x0000, "DMA0_CTRL"},
	{0x0004, "DMA0_FMT"},
	{0x0008, "DMA0_SKIP"},
	{0x000C, "DMA0_SKIP_SEQ"},
	{0x0010, "DMA0_ADDR1"},
	{0x0014, "DMA0_ADDR2"},
	{0x0018, "DMA0_ADDR3"},
	{0x001C, "DMA0_ADDR4"},
	{0x0020, "DMA0_ADDR5"},
	{0x0024, "DMA0_ADDR6"},
	{0x0028, "DMA0_ADDR7"},
	{0x002C, "DMA0_ADDR8"},
	{0x0030, "DMA0_ADDR9"},
	{0x0034, "DMA0_ADDR10"},
	{0x0038, "DMA0_ADDR11"},
	{0x003C, "DMA0_ADDR12"},
	{0x0040, "DMA0_ADDR13"},
	{0x0044, "DMA0_ADDR14"},
	{0x0048, "DMA0_ADDR15"},
	{0x004C, "DMA0_ADDR16"},
	{0x0050, "DMA0_ADDR17"},
	{0x0054, "DMA0_ADDR18"},
	{0x0058, "DMA0_ADDR19"},
	{0x005C, "DMA0_ADDR20"},
	{0x0060, "DMA0_ADDR21"},
	{0x0064, "DMA0_ADDR22"},
	{0x0068, "DMA0_ADDR23"},
	{0x006C, "DMA0_ADDR24"},
	{0x0070, "DMA0_ADDR25"},
	{0x0074, "DMA0_ADDR26"},
	{0x0078, "DMA0_ADDR27"},
	{0x007C, "DMA0_ADDR28"},
	{0x0080, "DMA0_ADDR29"},
	{0x0084, "DMA0_ADDR30"},
	{0x0088, "DMA0_ADDR31"},
	{0x008C, "DMA0_ADDR32"},
	{0x0090, "DMA0_ACT_CTRL"},
	{0x0094, "DMA0_ACT_FCNTSEQ"},
	{0x0098, "DMA0_ACT_FMT"},
	{0x009C, "DMA0_ACT_SKIP"},
	{0x00A0, "DMA0_ACT_SKIP_SEQ"},
	{0x00A4, "DMA0_RESOL"},
	{0x00B0, "DMA0_FCNTSEQ"},
	{0x00B4, "DMA0_FCNTSEQ_STAT"},
};

enum fimc_is_hw_csi_vcdma_reg_field {
	CSIS_F_DMA_N_UPDT_SKIPPTR,
	CSIS_F_DMA_N_UPDT_FRAMEPTR,
	CSIS_F_DMA_N_UPDT_PTR_EN,
	CSIS_F_DMA_N_ENABLE,
	CSIS_F_DMA_N_DIM,
	CSIS_F_DMA_N_STORAGE_MODE,
	CSIS_F_DMA_N_PACK12,
	CSIS_F_DMA_N_BYTESWAP,
	CSIS_F_DMA_N_DATAFORMAT,
	CSIS_F_DMA_N_SKIP_EN,
	CSIS_F_DMA_N_SKIP_TURNPTR,
	CSIS_F_DMA_N_SKIP_SEQ,
	CSIS_F_DMA_N_ADDR1,
	CSIS_F_DMA_N_ADDR2,
	CSIS_F_DMA_N_ADDR3,
	CSIS_F_DMA_N_ADDR4,
	CSIS_F_DMA_N_ADDR5,
	CSIS_F_DMA_N_ADDR6,
	CSIS_F_DMA_N_ADDR7,
	CSIS_F_DMA_N_ADDR8,
	CSIS_F_DMA_N_ADDR9,
	CSIS_F_DMA_N_ADDR10,
	CSIS_F_DMA_N_ADDR11,
	CSIS_F_DMA_N_ADDR12,
	CSIS_F_DMA_N_ADDR13,
	CSIS_F_DMA_N_ADDR14,
	CSIS_F_DMA_N_ADDR15,
	CSIS_F_DMA_N_ADDR16,
	CSIS_F_DMA_N_ADDR17,
	CSIS_F_DMA_N_ADDR18,
	CSIS_F_DMA_N_ADDR19,
	CSIS_F_DMA_N_ADDR20,
	CSIS_F_DMA_N_ADDR21,
	CSIS_F_DMA_N_ADDR22,
	CSIS_F_DMA_N_ADDR23,
	CSIS_F_DMA_N_ADDR24,
	CSIS_F_DMA_N_ADDR25,
	CSIS_F_DMA_N_ADDR26,
	CSIS_F_DMA_N_ADDR27,
	CSIS_F_DMA_N_ADDR28,
	CSIS_F_DMA_N_ADDR29,
	CSIS_F_DMA_N_ADDR30,
	CSIS_F_DMA_N_ADDR31,
	CSIS_F_DMA_N_ADDR32,
	CSIS_F_ACTIVE_DMA_N_ABORTED,
	CSIS_F_ACTIVE_DMA_N_SKIPPTR,
	CSIS_F_ACTIVE_DMA_N_FRAMEPTR,
	CSIS_F_ACTIVE_DMA_N_ENABLE,
	CSIS_F_ACTIVE_DMA_N_FRAMECNT_SEQ,
	CSIS_F_ACTIVE_DMA_N_DIM,
	CSIS_F_ACTIVE_DMA_N_STORAGE_MODE,
	CSIS_F_ACTIVE_DMA_N_PACK12,
	CSIS_F_ACTIVE_DMA_N_BYTESWAP,
	CSIS_F_ACTIVE_DMA_N_DATAFORMAT,
	CSIS_F_ACTIVE_DMA_N_SKIP_EN,
	CSIS_F_ACTIVE_DMA_N_SKIP_TURNPTR,
	CSIS_F_ACTIVE_DMA_N_SKIP_SEQ,
	CSIS_F_DMA_N_RESOL,
	CSIS_F_DMA_N_FRAMECNT_SEQ,
	CSIS_F_DMA_N_FRAMECNT_BEFORE,
	CSIS_F_DMA_N_FRAMECNT_PRESENT,
	CSIS_VCDMA_REG_FIELD_CNT
};

static struct fimc_is_field csi_vcdma_fields[CSIS_VCDMA_REG_FIELD_CNT] = {
/* field_name, start_bit, bit_width, type, reset */
	{"DMA_N_UPDT_SKIPPTR", 7, 5, WO, 0},
	{"DMA_N_UPDT_FRAMEPTR", 2, 5, WO, 0},
	{"DMA_N_UPDT_PTR_EN", 1, 1, WO, 0},
	{"DMA_N_ENABLE", 0, 1, RW, 0},
	{"DMA_N_DIM", 5, 1, RW, 0},
	{"DMA_N_STORAGE_MODE", 4, 1, RW, 0},
	{"DMA_N_PACK12", 3, 1, RW, 0},
	{"DMA_N_BYTESWAP", 2, 1, RW, 0},
	{"DMA_N_DATAFORMAT", 0, 2, RW, 0},
	{"DMA_N_SKIP_EN", 31, 1, RW, 0},
	{"DMA_N_SKIP_TURNPTR", 16, 3, RW, 0},
	{"DMA_N_SKIP_SEQ", 0, 32, RW, 0},
	{"DMA_N_ADDR1", 0, 32, RW, 0},
	{"DMA_N_ADDR2", 0, 32, RW, 0},
	{"DMA_N_ADDR3", 0, 32, RW, 0},
	{"DMA_N_ADDR4", 0, 32, RW, 0},
	{"DMA_N_ADDR5", 0, 32, RW, 0},
	{"DMA_N_ADDR6", 0, 32, RW, 0},
	{"DMA_N_ADDR7", 0, 32, RW, 0},
	{"DMA_N_ADDR8", 0, 32, RW, 0},
	{"DMA_N_ADDR9", 0, 32, RW, 0},
	{"DMA_N_ADDR10", 0, 32, RW, 0},
	{"DMA_N_ADDR11", 0, 32, RW, 0},
	{"DMA_N_ADDR12", 0, 32, RW, 0},
	{"DMA_N_ADDR13", 0, 32, RW, 0},
	{"DMA_N_ADDR14", 0, 32, RW, 0},
	{"DMA_N_ADDR15", 0, 32, RW, 0},
	{"DMA_N_ADDR16", 0, 32, RW, 0},
	{"DMA_N_ADDR17", 0, 32, RW, 0},
	{"DMA_N_ADDR18", 0, 32, RW, 0},
	{"DMA_N_ADDR19", 0, 32, RW, 0},
	{"DMA_N_ADDR20", 0, 32, RW, 0},
	{"DMA_N_ADDR21", 0, 32, RW, 0},
	{"DMA_N_ADDR22", 0, 32, RW, 0},
	{"DMA_N_ADDR23", 0, 32, RW, 0},
	{"DMA_N_ADDR24", 0, 32, RW, 0},
	{"DMA_N_ADDR25", 0, 32, RW, 0},
	{"DMA_N_ADDR26", 0, 32, RW, 0},
	{"DMA_N_ADDR27", 0, 32, RW, 0},
	{"DMA_N_ADDR28", 0, 32, RW, 0},
	{"DMA_N_ADDR29", 0, 32, RW, 0},
	{"DMA_N_ADDR30", 0, 32, RW, 0},
	{"DMA_N_ADDR31", 0, 32, RW, 0},
	{"DMA_N_ADDR32", 0, 32, RW, 0},
	{"ACTIVE_DMA_N_ABORTED", 16, 1, RO, 0},
	{"ACTIVE_DMA_N_SKIPPTR", 7, 5, RO, 0},
	{"ACTIVE_DMA_N_FRAMEPTR", 2, 5, RO, 0x1F},
	{"ACTIVE_DMA_N_ENABLE", 0, 1, RO, 0},
	{"ACTIVE_DMA_N_FRAMECNT_SEQ", 0, 32, RO, 0xFFFFFFFF},
	{"ACTIVE_DMA_N_DIM", 5, 1, RO, 0},
	{"ACTIVE_DMA_N_STORAGE_MODE", 4, 1, RO, 0},
	{"ACTIVE_DMA_N_PACK12", 3, 1, RO, 0},
	{"ACTIVE_DMA_N_BYTESWAP", 2, 1, RO, 0},
	{"ACTIVE_DMA_N_DATAFORMAT", 0, 2, RO, 0},
	{"ACTIVE_DMA_N_SKIP_EN", 31, 1, RO, 0},
	{"ACTIVE_DMA_N_SKIP_TURNPTR", 16, 5, RO, 0},
	{"ACTIVE_DMA_N_SKIP_SEQ", 0, 32, RO, 0},
	{"DMA_N_RESOL", 0, 14, RW, 0},
	{"DMA_N_FRAMECNT_SEQ", 0, 32, RW, 0xFFFFFF},
	{"DMA_N_FRAMECNT_BEFORE", 8, 6, RO, 0},
	{"DMA_N_FRAMECNT_PRESENT", 0, 6, RO, 0},
};

/* CSISx4 VC DMA Common */
enum fimc_is_hw_csi_vcdma_cmn_reg_name {
	CSIS_R_DMA_DATA_CTRL,
	CSIS_R_DMA_INT_MASK,
	CSIS_R_DMA_INT_SRC,
	CSIS_R_DMA_CRC_RESULT,
	CSIS_R_DMA_CRC_SEL,
	CSIS_R_DMA_CMN_CTRL,
	CSIS_R_DMA_ERR_CODE,
	CSIS_R_OTF_FORMAT,
	FRO_INT_FRAME_NUM,
	FRO_DMA0_OVERLAP_FRAME,
	FRO_DMA1_OVERLAP_FRAME,
	FRO_DMA2_OVERLAP_FRAME,
	FRO_DMA3_OVERLAP_FRAME,
	FRO_ABORTED_FRAME,
	CSIS_VCDMA_CMN_REG_CNT
};

static struct fimc_is_reg csi_vcdma_cmn_regs[CSIS_VCDMA_CMN_REG_CNT] = {
	{0x0000, "DMA_DATA_CTRL"},
	{0x0004, "DMA_INT_MASK"},
	{0x0008, "DMA_INT_SRC"},
	{0x000C, "DMA_CRC_RESULT"},
	{0x0010, "DMA_CRC_SEL"},
	{0x0014, "DMA_CMN_CTRL"},
	{0x0018, "DMA_ERR_CODE"},
	{0x001C, "OTF_FORMAT"},
	{0x0020, "FRO_INT_FRAME_NUM"},
	{0x0024, "FRO_DMA0_OVERLAP_FRAME"},
	{0x0028, "FRO_DMA1_OVERLAP_FRAME"},
	{0x002C, "FRO_DMA2_OVERLAP_FRAME"},
	{0x0030, "FRO_DMA3_OVERLAP_FRAME"},
	{0x0034, "FRO_ABORTED_FRAME"},
};

enum fimc_is_hw_csi_vcdma_cmn_reg_field {
	CSIS_F_DMA_INPUT_PATH_CH0,
	CSIS_F_MSK_QSTOP_ALL,
	CSIS_F_MSK_DMA_OTF_OVERLAP,
	CSIS_F_MSK_DMA_ABORT_DONE,
	CSIS_F_MSK_DMA_ERROR,
	CSIS_F_MSK_DMA_FRM_END,
	CSIS_F_MSK_DMA_FRM_START,
	CSIS_F_MSK_DMA_LINE_END,
	CSIS_F_QSTOP_ALL,
	CSIS_F_DMA_OTF_OVERLAP,
	CSIS_F_DMA_ABORT_DONE,
	CSIS_F_DMA_ERROR,
	CSIS_F_DMA_FRM_END,
	CSIS_F_DMA_FRM_START,
	CSIS_F_DMA_LINE_END,
	CSIS_F_DMA_CRC_RESULT,
	CSIS_F_DMA_CRC_SEL,
	CSIS_F_DMA_ABORT_REQ,
	CSIS_F_DMAFIFO_FULL,
	CSIS_F_OTF_FORMAT,
	DMA3_FRAME_NUM,
	DMA2_FRAME_NUM,
	DMA1_FRAME_NUM,
	DMA0_FRAME_NUM,
	OVERLAP_FRAME_PTR,
	CSIS_VCDMA_CMN_REG_FIELD_CNT
};

static struct fimc_is_field csi_vcdma_cmn_fields[CSIS_VCDMA_CMN_REG_FIELD_CNT] = {
/* field_name, start_bit, bit_width, type, reset */
	{"DMA_INPUT_PATH_CH0", 0, 1, RW, 0},
	{"MSK_QSTOP_ALL", 31, 1, RW, 0},
	{"MSK_DMA_OTF_OVERLAP", 20, 4, RW, 0},
	{"MSK_DMA_ABORT_DONE", 16, 1, RW, 0},
	{"MSK_DMA_ERROR", 12, 1, RW, 0},
	{"MSK_DMA_FRM_END", 8, 4, RW, 0},
	{"MSK_DMA_FRM_START", 4, 4, RW, 0},
	{"MSK_DMA_LINE_END", 0, 4, RW, 0},
	{"QSTOP_ALL", 31, 1, RW, 0},
	{"DMA_OTF_OVERLAP", 20, 4, RW, 0},
	{"DMA_ABORT_DONE", 16, 1, RW, 0},
	{"DMA_ERROR", 12, 1, RW, 0},
	{"DMA_FRM_END", 8, 4, RW, 0},
	{"DMA_FRM_START", 4, 4, RW, 0},
	{"DMA_LINE_END", 0, 4, RW, 0},
	{"DMA_CRC_RESULT", 0, 32, RW, 0},
	{"DMA_CRC_SEL", 0, 2, RW, 0},
	{"DMA_ABORT_REQ", 0, 1, RW, 0},
	{"DMAFIFO_FULL", 0, 1, RW, 0},
	{"OTF_FORMAT", 0, 2, RW, 0},
	{"DMA3_FRAME_NUM", 12, 4, RW, 0},
	{"DMA2_FRAME_NUM", 8, 4, RW, 0},
	{"DMA1_FRAME_NUM", 4, 4, RW, 0},
	{"DMA0_FRAME_NUM", 0, 4, RW, 0},
	{"OVERLAP_FRAME_PTR", 0, 16, RW, 0},
};

enum fimc_is_hw_csi_phy_reg_name {
	PHY_R_SC_GNR_CON1,
	PHY_R_SC_ANA_CON1,
	PHY_R_SC_ANA_CON2,
	PHY_R_SC_ANA_CON3,
	PHY_R_SC_TIME_CON0,

	PHY_R_SD0_GNR_CON1,
	PHY_R_SD0_ANA_CON1,
	PHY_R_SD0_ANA_CON2,
	PHY_R_SD0_ANA_CON3,
	PHY_R_SD0_ANA_CON7,
	PHY_R_SD0_TIME_CON0,
	PHY_R_SD0_TIME_CON1,
	PHY_R_SD0_DESKEW_CON4,

	PHY_R_SD1_GNR_CON1,
	PHY_R_SD1_ANA_CON1,
	PHY_R_SD1_ANA_CON2,
	PHY_R_SD1_ANA_CON3,
	PHY_R_SD1_ANA_CON7,
	PHY_R_SD1_TIME_CON0,
	PHY_R_SD1_TIME_CON1,
	PHY_R_SD1_DESKEW_CON4,

	PHY_R_SD2_GNR_CON1,
	PHY_R_SD2_ANA_CON1,
	PHY_R_SD2_ANA_CON2,
	PHY_R_SD2_ANA_CON3,
	PHY_R_SD2_ANA_CON7,
	PHY_R_SD2_TIME_CON0,
	PHY_R_SD2_TIME_CON1,
	PHY_R_SD2_DESKEW_CON4,

	PHY_R_SD3_GNR_CON1,
	PHY_R_SD3_ANA_CON1,
	PHY_R_SD3_ANA_CON2,
	PHY_R_SD3_ANA_CON3,
	PHY_R_SD3_ANA_CON7,
	PHY_R_SD3_TIME_CON0,
	PHY_R_SD3_TIME_CON1,
	PHY_R_SD3_DESKEW_CON4,

	PHY_REG_CNT
};

static struct fimc_is_reg csi_phy_regs[CSI_ID_MAX][PHY_REG_CNT] = {
	/* TOP_M4[S4] --> CSI #0 */
	{
		{0x0B04, "SC_GNR_CON1"},
		{0x0B0C, "SC_ANA_CON1"},
		{0x0B10, "SC_ANA_CON2"},
		{0x0B14, "SC_ANA_CON3"},
		{0x0B30, "SC_TIME_CON0"},

		{0x0C04, "SD0_GNR_CON1"},
		{0x0C0C, "SD0_ANA_CON1"},
		{0x0C10, "SD0_ANA_CON2"},
		{0x0C14, "SD0_ANA_CON3"},
		{0x0C24, "SD0_ANA_CON7"},
		{0x0C30, "SD0_TIME_CON0"},
		{0x0C34, "SD0_TIME_CON1"},
		{0x0C50, "SD0_DESKEW_CON4"},

		{0x0D04, "SD1_GNR_CON1"},
		{0x0D0C, "SD1_ANA_CON1"},
		{0x0D10, "SD1_ANA_CON2"},
		{0x0D14, "SD1_ANA_CON3"},
		{0x0D24, "SD1_ANA_CON7"},
		{0x0D30, "SD1_TIME_CON0"},
		{0x0D34, "SD1_TIME_CON1"},
		{0x0D50, "SD1_DESKEW_CON4"},

		{0x0E04, "SD2_GNR_CON1"},
		{0x0E0C, "SD2_ANA_CON1"},
		{0x0E10, "SD2_ANA_CON2"},
		{0x0E14, "SD2_ANA_CON3"},
		{0x0E24, "SD2_ANA_CON7"},
		{0x0E30, "SD2_TIME_CON0"},
		{0x0E34, "SD2_TIME_CON1"},
		{0x0E50, "SD2_DESKEW_CON4"},

		{0x0F04, "SD3_GNR_CON1"},
		{0x0F0C, "SD3_ANA_CON1"},
		{0x0F10, "SD3_ANA_CON2"},
		{0x0F14, "SD3_ANA_CON3"},
		{0x0F24, "SD3_ANA_CON7"},
		{0x0F30, "SD3_TIME_CON0"},
		{0x0F34, "SD3_TIME_CON1"},
		{0x0F50, "SD3_DESKEW_CON4"},
	},

	/* MOD_M0[S4]S4S4(S2+S2) --> CSI #1 */
	{
		{0x2304, "SC_GNR_CON1"},
		{0x230C, "SC_ANA_CON1"},
		{0x2310, "SC_ANA_CON2"},
		{0x2314, "SC_ANA_CON3"},
		{0x2330, "SC_TIME_CON0"},

		{0x2404, "SD0_GNR_CON1"},
		{0x240C, "SD0_ANA_CON1"},
		{0x2410, "SD0_ANA_CON2"},
		{0x2414, "SD0_ANA_CON3"},
		{0x2424, "SD0_ANA_CON7"},
		{0x2430, "SD0_TIME_CON0"},
		{0x2434, "SD0_TIME_CON1"},
		{0x2450, "SD0_DESKEW_CON4"},

		{0x2504, "SD1_GNR_CON1"},
		{0x250C, "SD1_ANA_CON1"},
		{0x2510, "SD1_ANA_CON2"},
		{0x2514, "SD1_ANA_CON3"},
		{0x2524, "SD1_ANA_CON7"},
		{0x2530, "SD1_TIME_CON0"},
		{0x2534, "SD1_TIME_CON1"},
		{0x2550, "SD1_DESKEW_CON4"},

		{0x2604, "SD2_GNR_CON1"},
		{0x260C, "SD2_ANA_CON1"},
		{0x2610, "SD2_ANA_CON2"},
		{0x2614, "SD2_ANA_CON3"},
		{0x2624, "SD2_ANA_CON7"},
		{0x2630, "SD2_TIME_CON0"},
		{0x2634, "SD2_TIME_CON1"},
		{0x2650, "SD2_DESKEW_CON4"},

		{0x2704, "SD3_GNR_CON1"},
		{0x270C, "SD3_ANA_CON1"},
		{0x2710, "SD3_ANA_CON2"},
		{0x2714, "SD3_ANA_CON3"},
		{0x2724, "SD3_ANA_CON7"},
		{0x2730, "SD3_TIME_CON0"},
		{0x2734, "SD3_TIME_CON1"},
		{0x2750, "SD3_DESKEW_CON4"},
	},

	/* MOD_M0S4[S4]S4(S2+S2) --> CSI #2 */
	{
		{0x2B04, "SC_GNR_CON1"},
		{0x2B0C, "SC_ANA_CON1"},
		{0x2B10, "SC_ANA_CON2"},
		{0x2B14, "SC_ANA_CON3"},
		{0x2B30, "SC_TIME_CON0"},

		{0x2C04, "SD0_GNR_CON1"},
		{0x2C0C, "SD0_ANA_CON1"},
		{0x2C10, "SD0_ANA_CON2"},
		{0x2C14, "SD0_ANA_CON3"},
		{0x2C24, "SD0_ANA_CON7"},
		{0x2C30, "SD0_TIME_CON0"},
		{0x2C34, "SD0_TIME_CON1"},
		{0x2C50, "SD0_DESKEW_CON4"},

		{0x2D04, "SD1_GNR_CON1"},
		{0x2D0C, "SD1_ANA_CON1"},
		{0x2D10, "SD1_ANA_CON2"},
		{0x2D14, "SD1_ANA_CON3"},
		{0x2D24, "SD1_ANA_CON7"},
		{0x2D30, "SD1_TIME_CON0"},
		{0x2D34, "SD1_TIME_CON1"},
		{0x2D50, "SD1_DESKEW_CON4"},

		{0x2E04, "SD2_GNR_CON1"},
		{0x2E0C, "SD2_ANA_CON1"},
		{0x2E10, "SD2_ANA_CON2"},
		{0x2E14, "SD2_ANA_CON3"},
		{0x2E24, "SD2_ANA_CON7"},
		{0x2E30, "SD2_TIME_CON0"},
		{0x2E34, "SD2_TIME_CON1"},
		{0x2E50, "SD2_DESKEW_CON4"},

		{0x2F04, "SD3_GNR_CON1"},
		{0x2F0C, "SD3_ANA_CON1"},
		{0x2F10, "SD3_ANA_CON2"},
		{0x2F14, "SD3_ANA_CON3"},
		{0x2F24, "SD3_ANA_CON7"},
		{0x2F30, "SD3_TIME_CON0"},
		{0x2F34, "SD3_TIME_CON1"},
		{0x2F50, "SD3_DESKEW_CON4"},
	},

	/* MOD_M0S4S4[S4]([S2]+S2) --> CSI #3 */
	{
		{0x3304, "SC_GNR_CON1"},
		{0x330C, "SC_ANA_CON1"},
		{0x3310, "SC_ANA_CON2"},
		{0x3314, "SC_ANA_CON3"},
		{0x3330, "SC_TIME_CON0"},

		{0x3404, "SD0_GNR_CON1"},
		{0x340C, "SD0_ANA_CON1"},
		{0x3410, "SD0_ANA_CON2"},
		{0x3414, "SD0_ANA_CON3"},
		{0x3424, "SD0_ANA_CON7"},
		{0x3430, "SD0_TIME_CON0"},
		{0x3434, "SD0_TIME_CON1"},
		{0x3450, "SD0_DESKEW_CON4"},

		{0x3504, "SD1_GNR_CON1"},
		{0x350C, "SD1_ANA_CON1"},
		{0x3510, "SD1_ANA_CON2"},
		{0x3514, "SD1_ANA_CON3"},
		{0x3524, "SD1_ANA_CON7"},
		{0x3530, "SD1_TIME_CON0"},
		{0x3534, "SD1_TIME_CON1"},
		{0x3550, "SD1_DESKEW_CON4"},

		{0x3604, "SD2_GNR_CON1"},
		{0x360C, "SD2_ANA_CON1"},
		{0x3610, "SD2_ANA_CON2"},
		{0x3614, "SD2_ANA_CON3"},
		{0x3624, "SD2_ANA_CON7"},
		{0x3630, "SD2_TIME_CON0"},
		{0x3634, "SD2_TIME_CON1"},
		{0x3650, "SD2_DESKEW_CON4"},

		{0x3704, "SD3_GNR_CON1"},
		{0x370C, "SD3_ANA_CON1"},
		{0x3710, "SD3_ANA_CON2"},
		{0x3714, "SD3_ANA_CON3"},
		{0x3724, "SD3_ANA_CON7"},
		{0x3730, "SD3_TIME_CON0"},
		{0x3734, "SD3_TIME_CON1"},
		{0x3750, "SD3_DESKEW_CON4"},
	},

	/* MOD_M0S4S4S4(S2+[S2]) --> CSI #3_1 */
	{
		{0x3B04, "SC_GNR_CON1"},
		{0x3B0C, "SC_ANA_CON1"},
		{0x3B10, "SC_ANA_CON2"},
		{0x3B14, "SC_ANA_CON3"},
		{0x3B30, "SC_TIME_CON0"},

		{0x3604, "SD0_GNR_CON1"},
		{0x360C, "SD0_ANA_CON1"},
		{0x3610, "SD0_ANA_CON2"},
		{0x3614, "SD0_ANA_CON3"},
		{0x3624, "SD0_ANA_CON7"},
		{0x3630, "SD0_TIME_CON0"},
		{0x3634, "SD0_TIME_CON1"},
		{0x3650, "SD0_DESKEW_CON4"},

		{0x3704, "SD1_GNR_CON1"},
		{0x370C, "SD1_ANA_CON1"},
		{0x3710, "SD1_ANA_CON2"},
		{0x3714, "SD1_ANA_CON3"},
		{0x3724, "SD1_ANA_CON7"},
		{0x3730, "SD1_TIME_CON0"},
		{0x3734, "SD1_TIME_CON1"},
		{0x3750, "SD1_DESKEW_CON4"},
	},
};

enum fimc_is_hw_csi_phy_reg_field {
	/* SLAVE_CLOCK_LANE */
	PHY_F_SC_T_PHY_READY,
	PHY_F_SC_HS_RX_BIAS_CON,
	PHY_F_SC_RX_TERM_SW,
	PHY_F_SC_ULPS_HYS_SW_DPHY,
	PHY_F_SC_T_CLK_MISS,
	PHY_F_SC_T_CLK_SETTLE,

	/* SLAVE_DATA_LANE */
	PHY_F_SD_T_PHY_READY,
	PHY_F_SD_HS_RX_BIAS_CON,
	PHY_F_SD_SKEW_DLYSEL,
	PHY_F_SD_RX_TERM_SW,
	PHY_F_SD_ULPS_HYS_SW_DPHY,
	PHY_F_SD_CLK_DBL_CTRL,
	PHY_F_SD_SETTLE_CLK_SEL,
	PHY_F_SD_T_HS_SETTLE,
	PHY_F_SD_T_ERR_SOT_SYNC,
	PHY_F_SD_SKEW_CAL_FINE_MAX_SET,
	PHY_F_SD_SKEW_CAL_COARSE_MAX_SET,

	CSIS_PHY_REG_FIELD_CNT
};

#if 0
static struct fimc_is_field csi_phy_fields[CSIS_PHY_REG_FIELD_CNT] = {
	/* field_name, start_bit, bit_width, type, reset */
	{"T_PHY_READY", 0, 16, RW, 0},		/* SC_GNR_CON1 */
	{"HS_RX_BIAS_CON", 11, 5, RW, 0},	/* SC_ANA_CON1 */
	{"RX_TERM_SW", 0, 3, RW, 0},		/* SC_ANA_CON2 */
	{"ULPS_HYS_SW_DPHY", 8, 3, RW, 0},	/* SC_ANA_CON3 */
	{"T_CLK_MISS", 8, 4, RW, 0},		/* SC_TIME_CON0 */
	{"T_CLK_SETTLE", 0, 8, RW, 0},		/* SC_TIME_CON0 */

	{"T_PHY_READY", 0, 16, RW, 0},		/* SD_GNR_CON1 */
	{"HS_RX_BIAS_CON", 11, 5, RW, 0},	/* SD_ANA_CON1 */
	{"SKEW_DLYSEL", 8, 2, RW, 0},		/* SD_ANA_CON2 */
	{"RX_TERM_SW", 0, 3, RW, 0},		/* SD_ANA_CON2 */
	{"ULPS_HYS_SW_DPHY", 8, 3, RW, 0},	/* SD_ANA_CON3 */
	{"CLK_DBL_CTRL", 6, 2, RW, 0},		/* SD_ANA_CON7 */
	{"SETTLE_CLK_SEL", 8, 1, RW, 0},	/* SD_TIME_CON0 */
	{"T_HS_SETTLE", 0, 8, RW, 0},		/* SD_TIME_CON0 */
	{"T_ERR_SOT_SYNC", 0, 8, RW, 0},	/* SD_TIME_CON1 */
	{"SKEW_CAL_FINE_MAX_SET", 8, 4, RW, 0},	/* SD_DESKEW_CON4 */
	{"SKEW_CAL_COARSE_MAX_SET", 0, 5, RW, 0},	/* SD_DESKEW_CON4 */
};
#endif

/* CSISx4 Common DMA */
enum fimc_is_hw_csi_dma_reg_name {
	CSIS_DMA_R_COMMON_DMA_ARB_PRI,
	CSIS_DMA_R_COMMON_DMA_AXI_ARB_PRI,
	CSIS_DMA_R_COMMON_DMA_CTRL,
	CSIS_DMA_R_COMMON_DMA_SRAM_SPLIT,
	CSIS_DMA_R_COMMON_DMA_MATRIX,
	CSIS_DMA_R_COMMON_DMA_CLK_CTRL,
	CSIS_DMA_R_TEST_PATTERN_ENABLE,
	CSIS_DMA_R_TEST_PATTERN_CTRL,
	CSIS_DMA_R_TEST_PATTERN_RESOL,
	CSIS_DMA_REG_CNT,
};

static struct fimc_is_reg csi_dma_regs[CSIS_DMA_REG_CNT] = {
	{0x0000, "COMMON_DMA_ARB_PRI"},
	{0x0004, "COMMON_DMA_AXI_ARB_PRI"},
	{0x0008, "COMMON_DMA_CTRL"},
	{0x000C, "COMMON_DMA_SRAM_SPLIT"},
	{0x0010, "COMMON_DMA_MATRIX"},
	{0x0014, "COMMON_DMA_CLK_CTRL"},
	{0x0020, "TEST_PATTERN_ENABLE"},
	{0x0024, "TEST_PATTERN_CTRL"},
	{0x0028, "TEST_PATTERN_RESOL"},
};

enum fimc_is_hw_csi_dma_reg_field {
	CSIS_DMA_F_DMA_ARB_PRI_1,
	CSIS_DMA_F_DMA_ARB_PRI_0,
	CSIS_DMA_F_WDMA_AXI_FIXED_PRIOR,
	CSIS_DMA_F_DMA_AXI_FIXED_PRIOR_TYPE,
	CSIS_DMA_F_Q_CHANNEL_EN,
	CSIS_DMA_F_IP_PROCESSING,
	CSIS_DMA_F_SW_RESET,
	CSIS_DMA_F_DMA_SRAM1_SPLIT,
	CSIS_DMA_F_DMA_SRAM0_SPLIT,
	CSIS_DMA_F_DMA_MATRIX,
	CSIS_DMA_F_CLKGATE_OFF,
	CSIS_DMA_F_TESTPATTERN,
	CSIS_DMA_F_PPC_MODE,
	CSIS_DMA_F_VBLANK,
	CSIS_DMA_F_VTOHBLANK,
	CSIS_DMA_F_HBLANK,
	CSIS_DMA_F_HTOVBALNK,
	CSIS_DMA_F_TP_VSIZE,
	CSIS_DMA_F_TP_HSIZE,
	CSIS_DMA_FIELD_CNT,
};

static struct fimc_is_field csi_dma_fields[CSIS_DMA_FIELD_CNT] = {
/* field_name, start_bit, bit_width, type, reset */
	{"DMA_ARB_PRI_1", 2, 2, RW, 0},
	{"DMA_ARB_PRI_0", 0, 2, RW, 0},
	{"WDMA_AXI_FIXED_PRIOR", 1, 1, RW, 0},
	{"DMA_AXI_FIXED_PRIOR_TYPE", 0, 1, RW, 0},
	{"Q_CHANNEL_EN", 2, 1, RW, 1},
	{"IP_PROCESSING", 1, 1, RW, 0},
	{"SW_RESET", 0, 1, RW, 0},
	{"DMA_SRAM1_SPLIT", 16, 12, RW, 0},
	{"DMA_SRAM0_SPLIT", 0, 12, RW, 0},
	{"DMA_MATRIX", 0, 5, RW, 0},
	{"CLKGATE_OFF", 0, 1, RW, 0},
	{"TESTPATTERN", 31, 1, RW, 0},
	{"PPC_MODE", 30, 1, RW, 1},
	{"VBLANK", 0, 30, RW, 0x3FFF},
	{"VTOHBLANK", 16, 8, RW, 0x40},
	{"HBLANK", 8, 8, RW, 0x40},
	{"HTOVBALNK", 0, 8, RW, 0x40},
	{"TP_VSIZE", 16, 14, RW, 0x10},
	{"TP_HSIZE", 0, 14, RW, 0x10},
};

#endif
