/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2018 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_CIS_IMX586_SET_B_H
#define FIMC_IS_CIS_IMX586_SET_B_H

#include "fimc-is-cis.h"
#include "fimc-is-cis-imx586.h"

/*
 * [Mode Information]
 *
 * Reference File : IMX586_SAM-DPHY-26MHz_RegisterSetting_ver3.00-10.00_MP_b3_190222.xlsx
 * Update Data    : 2019-03-07
 * Author         : takkyoum.kim
 *
 * - Global Setting -
 *
 * - 2x2 BIN For Single Still Preview / Capture -
 *    [  0 ] REG_C2 : 2x2 Binning Full 4000x3000 30fps    : Single Still Preview (4:3)    ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  1 ] REG_G1 : 2x2 Binning Crop 4000x2268 30fps    : Single Still Preview (16:9)   ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  2 ] REG_I1 : 2x2 Binning Crop 4000x1968 30fps    : Single Still Preview (18.5:9) ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  3 ] REG_J1 : 2x2 Binning Crop 4000x1860 30fps    : Single Still Preview (19.5:9) ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  4 ] REG_K1 : 2x2 Binning Crop 4000x1816 30fps    : Single Still Preview (20:9)   ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  5 ] REG_L1 : 2x2 Binning Crop 3000x3000 30fps    : Single Still Preview (1:1)    ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 * 
 * - 2x2 BIN For Bokeh Preview / Capture -
 *    [  6 ] REG_C4 : 2x2 Binning Full 4000x3000 24fps    : Bokeh Preview (4:3)           ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  7 ] REG_G2 : 2x2 Binning Crop 4000x2268 24fps    : Bokeh Preview (16:9)          ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  8 ] REG_I2 : 2x2 Binning Crop 4000x1968 24fps    : Bokeh Preview (18.5:9)        ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [  9 ] REG_J2 : 2x2 Binning Crop 4000x1860 24fps    : Bokeh Preview (19.5:9)        ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [ 10 ] REG_K2 : 2x2 Binning Crop 4000x1816 24fps    : Bokeh Preview (20:9)          ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *    [ 11 ] REG_L2 : 2x2 Binning Crop 3000x3000 24fps    : Bokeh Preview (1:1)           ,  MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *
 * - FULL Remosaic For Single Still Remosaic Capture -
 *    [ 12 ] REG_A  : Full Remosaic 8000x6000 18fps       : Single Still Remosaic Capture (4:3) , MIPI lane: 4, MIPI data rate(Mbps/lane): 2496
 *
 */


const u32 sensor_imx586_setfile_B_Global[] = {
	//External Clock Setting
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	//Register version
	0x3C7E, 0x03, 0x01,
	0x3C7F, 0x0A, 0x01,
	//Signaling mode setting
	0x0111, 0x02, 0x01,
	//Global Setting
	0x380C, 0x00, 0x01,
	0x3C00, 0x10, 0x01,
	0x3C01, 0x10, 0x01,
	0x3C02, 0x10, 0x01,
	0x3C03, 0x10, 0x01,
	0x3C04, 0x10, 0x01,
	0x3C05, 0x01, 0x01,
	0x3C06, 0x00, 0x01,
	0x3C07, 0x00, 0x01,
	0x3C08, 0x03, 0x01,
	0x3C09, 0xFF, 0x01,
	0x3C0A, 0x01, 0x01,
	0x3C0B, 0x00, 0x01,
	0x3C0C, 0x00, 0x01,
	0x3C0D, 0x03, 0x01,
	0x3C0E, 0xFF, 0x01,
	0x3C0F, 0x20, 0x01,
	0x3F88, 0x00, 0x01,
	0x3F8E, 0x00, 0x01,
	0x5282, 0x01, 0x01,
	0x9004, 0x14, 0x01,
	0x9200, 0xF4, 0x01,
	0x9201, 0xA7, 0x01,
	0x9202, 0xF4, 0x01,
	0x9203, 0xAA, 0x01,
	0x9204, 0xF4, 0x01,
	0x9205, 0xAD, 0x01,
	0x9206, 0xF4, 0x01,
	0x9207, 0xB0, 0x01,
	0x9208, 0xF4, 0x01,
	0x9209, 0xB3, 0x01,
	0x920A, 0xB7, 0x01,
	0x920B, 0x34, 0x01,
	0x920C, 0xB7, 0x01,
	0x920D, 0x36, 0x01,
	0x920E, 0xB7, 0x01,
	0x920F, 0x37, 0x01,
	0x9210, 0xB7, 0x01,
	0x9211, 0x38, 0x01,
	0x9212, 0xB7, 0x01,
	0x9213, 0x39, 0x01,
	0x9214, 0xB7, 0x01,
	0x9215, 0x3A, 0x01,
	0x9216, 0xB7, 0x01,
	0x9217, 0x3C, 0x01,
	0x9218, 0xB7, 0x01,
	0x9219, 0x3D, 0x01,
	0x921A, 0xB7, 0x01,
	0x921B, 0x3E, 0x01,
	0x921C, 0xB7, 0x01,
	0x921D, 0x3F, 0x01,
	0x921E, 0x77, 0x01,
	0x921F, 0x77, 0x01,
	0x9222, 0xC4, 0x01,
	0x9223, 0x4B, 0x01,
	0x9224, 0xC4, 0x01,
	0x9225, 0x4C, 0x01,
	0x9226, 0xC4, 0x01,
	0x9227, 0x4D, 0x01,
	0x9810, 0x14, 0x01,
	0x9814, 0x14, 0x01,
	0x99B2, 0x20, 0x01,
	0x99B3, 0x0F, 0x01,
	0x99B4, 0x0F, 0x01,
	0x99B5, 0x0F, 0x01,
	0x99B6, 0x0F, 0x01,
	0x99E4, 0x0F, 0x01,
	0x99E5, 0x0F, 0x01,
	0x99E6, 0x0F, 0x01,
	0x99E7, 0x0F, 0x01,
	0x99E8, 0x0F, 0x01,
	0x99E9, 0x0F, 0x01,
	0x99EA, 0x0F, 0x01,
	0x99EB, 0x0F, 0x01,
	0x99EC, 0x0F, 0x01,
	0x99ED, 0x0F, 0x01,
	0xA569, 0x06, 0x01,
	0xA56A, 0x13, 0x01,
	0xA56B, 0x13, 0x01,
	0xA679, 0x20, 0x01,
	0xA830, 0x68, 0x01,
	0xA831, 0x56, 0x01,
	0xA832, 0x2B, 0x01,
	0xA833, 0x55, 0x01,
	0xA834, 0x55, 0x01,
	0xA835, 0x16, 0x01,
	0xA837, 0x51, 0x01,
	0xA838, 0x34, 0x01,
	0xA854, 0x4F, 0x01,
	0xA855, 0x48, 0x01,
	0xA856, 0x45, 0x01,
	0xA857, 0x02, 0x01,
	0xA85A, 0x23, 0x01,
	0xA85B, 0x16, 0x01,
	0xA85C, 0x12, 0x01,
	0xA85D, 0x02, 0x01,
	0xAC72, 0x01, 0x01,
	0xAC73, 0x26, 0x01,
	0xAC74, 0x01, 0x01,
	0xAC75, 0x26, 0x01,
	0xAC76, 0x00, 0x01,
	0xAC77, 0xC4, 0x01,
	0xB051, 0x02, 0x01,
	0xC020, 0x01, 0x01,
	0xC61D, 0x00, 0x01,
	0xC625, 0x00, 0x01,
	0xC638, 0x03, 0x01,
	0xC63B, 0x01, 0x01,
	0xE286, 0x31, 0x01,
	0xE2A6, 0x32, 0x01,
	0xE2C6, 0x33, 0x01,
	0xEA4B, 0x00, 0x01,
	0xEA4C, 0x00, 0x01,
	0xEA4D, 0x00, 0x01,
	0xEA4E, 0x00, 0x01,
	0xF000, 0x00, 0x01,
	0xF001, 0x10, 0x01,
	0xF00C, 0x00, 0x01,
	0xF00D, 0x40, 0x01,
	0xF030, 0x00, 0x01,
	0xF031, 0x10, 0x01,
	0xF03C, 0x00, 0x01,
	0xF03D, 0x40, 0x01,
	0xF44B, 0x80, 0x01,
	0xF44C, 0x10, 0x01,
	0xF44D, 0x06, 0x01,
	0xF44E, 0x80, 0x01,
	0xF44F, 0x10, 0x01,
	0xF450, 0x06, 0x01,
	0xF451, 0x80, 0x01,
	0xF452, 0x10, 0x01,
	0xF453, 0x06, 0x01,
	0xF454, 0x80, 0x01,
	0xF455, 0x10, 0x01,
	0xF456, 0x06, 0x01,
	0xF457, 0x80, 0x01,
	0xF458, 0x10, 0x01,
	0xF459, 0x06, 0x01,
	0xF478, 0x20, 0x01,
	0xF479, 0x80, 0x01,
	0xF47A, 0x80, 0x01,
	0xF47B, 0x20, 0x01,
	0xF47C, 0x80, 0x01,
	0xF47D, 0x80, 0x01,
	0xF47E, 0x20, 0x01,
	0xF47F, 0x80, 0x01,
	0xF480, 0x80, 0x01,
	0xF481, 0x20, 0x01,
	0xF482, 0x60, 0x01,
	0xF483, 0x80, 0x01,
	0xF484, 0x20, 0x01,
	0xF485, 0x60, 0x01,
	0xF486, 0x80, 0x01,

	//Temp : disable Embedded Data
	0xBCF1, 0x00, 0x01,

	//Image Quality adjustment setting
	0x9852, 0x00, 0x01,
	0x9954, 0x0F, 0x01,
	0xA7AD, 0x01, 0x01,
	0xA7CB, 0x01, 0x01,
	0xAE09, 0x04, 0x01,
	0xAE0A, 0x16, 0x01,
	0xAE12, 0x58, 0x01,
	0xAE13, 0x58, 0x01,
	0xAE15, 0x10, 0x01,
	0xAE16, 0x10, 0x01,
	0xAF05, 0x48, 0x01,
	0xB07C, 0x02, 0x01,
};

const u32 sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0xB8, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0xB8, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x01, 0x01,
	0x040B, 0x6C, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x08, 0x01,
	0x040F, 0xDC, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0xDC, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x04, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0xB0, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0xB0, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x38, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0x44, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0x44, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x50, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0x18, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0x18, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_30FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0C, 0x01,
	0x0341, 0x84, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x01, 0x01,
	0x0409, 0xF4, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0B, 0x01,
	0x040D, 0xB8, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0xB8, 0x01,
	//Output Size Setting
	0x034C, 0x0B, 0x01,
	0x034D, 0xB8, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0xB8, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0C, 0x01,
	0x0203, 0x54, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0x74, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0xB8, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0xB8, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x01, 0x01,
	0x040B, 0x6C, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x08, 0x01,
	0x040F, 0xDC, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0xDC, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x04, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0xB0, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0xB0, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x38, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0x44, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0x44, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x02, 0x01,
	0x040B, 0x50, 0x01,
	0x040C, 0x0F, 0x01,
	0x040D, 0xA0, 0x01,
	0x040E, 0x07, 0x01,
	0x040F, 0x18, 0x01,
	//Output Size Setting
	0x034C, 0x0F, 0x01,
	0x034D, 0xA0, 0x01,
	0x034E, 0x07, 0x01,
	0x034F, 0x18, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0xF0, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_24FPS[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x46, 0x01,
	0x0343, 0x20, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x0F, 0x01,
	0x0341, 0xA6, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x22, 0x01,
	0x0902, 0x08, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x81, 0x01,
	0x3247, 0x81, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x01, 0x01,
	0x0409, 0xF4, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x0B, 0x01,
	0x040D, 0xB8, 0x01,
	0x040E, 0x0B, 0x01,
	0x040F, 0xB8, 0x01,
	//Output Size Setting
	0x034C, 0x0B, 0x01,
	0x034D, 0xB8, 0x01,
	0x034E, 0x0B, 0x01,
	0x034F, 0xB8, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x00, 0x01,
	0x3621, 0x00, 0x01,
	0x3C11, 0x04, 0x01,
	0x3C12, 0x03, 0x01,
	0x3C13, 0x2D, 0x01,
	0x3F0C, 0x01, 0x01,
	0x3F14, 0x00, 0x01,
	0x3F80, 0x00, 0x01,
	0x3F81, 0x14, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x01, 0x01,
	0x3FF9, 0x18, 0x01,
	0x3FFE, 0x01, 0x01,
	0x3FFF, 0xE0, 0x01,
	//Integration Setting
	0x0202, 0x0F, 0x01,
	0x0203, 0x76, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x00, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x01, 0x01,
	0x4435, 0x74, 0x01,
#endif
};

const u32 sensor_imx586_setfile_B_FULL_REMOSAIC_8000x6000[] = {
	//MIPI output setting
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x03, 0x01,
	//Line Length PCK Setting
	0x0342, 0x3C, 0x01,
	0x0343, 0x90, 0x01,
	//Frame Length Lines Setting
	0x0340, 0x18, 0x01,
	0x0341, 0x2A, 0x01,
	//ROI Setting
	0x0344, 0x00, 0x01,
	0x0345, 0x00, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x00, 0x01,
	0x0348, 0x1F, 0x01,
	0x0349, 0x3F, 0x01,
	0x034A, 0x17, 0x01,
	0x034B, 0x6F, 0x01,
	//Mode Setting
	0x0220, 0x62, 0x01,
	0x0222, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x11, 0x01,
	0x0902, 0x0A, 0x01,
	0x3140, 0x00, 0x01,
	0x3246, 0x01, 0x01,
	0x3247, 0x01, 0x01,
	0x3F15, 0x00, 0x01,
	//Digital Crop & Scaling
	0x0401, 0x00, 0x01,
	0x0404, 0x00, 0x01,
	0x0405, 0x10, 0x01,
	0x0408, 0x00, 0x01,
	0x0409, 0x00, 0x01,
	0x040A, 0x00, 0x01,
	0x040B, 0x00, 0x01,
	0x040C, 0x1F, 0x01,
	0x040D, 0x40, 0x01,
	0x040E, 0x17, 0x01,
	0x040F, 0x70, 0x01,
	//Output Size Setting
	0x034C, 0x1F, 0x01,
	0x034D, 0x40, 0x01,
	0x034E, 0x17, 0x01,
	0x034F, 0x70, 0x01,
	//Clock Setting
	0x0301, 0x05, 0x01,
	0x0303, 0x02, 0x01,
	0x0305, 0x04, 0x01,
	0x0306, 0x01, 0x01,
	0x0307, 0x4C, 0x01,
	0x030B, 0x01, 0x01,
	0x030D, 0x03, 0x01,
	0x030E, 0x01, 0x01,
	0x030F, 0x20, 0x01,
	0x0310, 0x01, 0x01,
	//Other Setting
	0x3620, 0x01, 0x01,
	0x3621, 0x01, 0x01,
	0x3C11, 0x08, 0x01,
	0x3C12, 0x08, 0x01,
	0x3C13, 0x2A, 0x01,
	0x3F0C, 0x00, 0x01,
	0x3F14, 0x01, 0x01,
	0x3F80, 0x08, 0x01,
	0x3F81, 0x76, 0x01,
	0x3F8C, 0x00, 0x01,
	0x3F8D, 0x14, 0x01,
	0x3FF8, 0x00, 0x01,
	0x3FF9, 0x00, 0x01,
	0x3FFE, 0x03, 0x01,
	0x3FFF, 0xA5, 0x01,
	//Integration Setting
	0x0202, 0x17, 0x01,
	0x0203, 0xFA, 0x01,
	0x0224, 0x01, 0x01,
	0x0225, 0xF4, 0x01,
	0x3FE0, 0x01, 0x01,
	0x3FE1, 0xF4, 0x01,
	//Gain Setting
	0x0204, 0x00, 0x01,
	0x0205, 0x70, 0x01,
	0x0216, 0x00, 0x01,
	0x0217, 0x70, 0x01,
	0x0218, 0x01, 0x01,
	0x0219, 0x00, 0x01,
	0x020E, 0x01, 0x01,
	0x020F, 0x00, 0x01,
	0x0210, 0x01, 0x01,
	0x0211, 0x00, 0x01,
	0x0212, 0x01, 0x01,
	0x0213, 0x00, 0x01,
	0x0214, 0x01, 0x01,
	0x0215, 0x00, 0x01,
	0x3FE2, 0x00, 0x01,
	0x3FE3, 0x70, 0x01,
	0x3FE4, 0x01, 0x01,
	0x3FE5, 0x00, 0x01,
	//HDR output ctrl Setting
	0x3141, 0x05, 0x01,
	//LSC Setting
	0x0B00, 0x00, 0x01,
	//AE-Hist Setting
	0x323B, 0x00, 0x01,
	//Flicker Setting
	0x323C, 0x00, 0x01,
	//DPC output ctrl Setting
	0x0B06, 0x01, 0x01,

#ifdef USE_AP_PDAF  // Temp. untill enalbe the PDAF
	//PDAF TYPE2 Setting
	0x3E20, 0x02, 0x01,
	0x3E3B, 0x01, 0x01,
	0x4434, 0x00, 0x01,
	0x4435, 0xF8, 0x01,
#endif
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_FULL_4000x3000_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x2268_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1968_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1860_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1816_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_3000x3000_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	3204,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_FULL_4000x3000_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x2268_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1968_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1860_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1816_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_2X2BIN_CROP_3000x3000_24FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	4006,                        /* frame_length_lines */
	17952,                       /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_imx586_pllinfo_B_FULL_REMOSAIC_8000x6000 = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2496000000,                  /* mipi_datarate = OPSYCK */
	215800000,                   /* pclk = VTPXCK of Clock Information */
	6186,                        /* frame_length_lines */
	15504,                       /* line_length_pck */
};


static const u32 *sensor_imx586_setfiles_B[] = {
	sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_30FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_30FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_30FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_30FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_30FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_30FPS,

	sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_24FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_24FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_24FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_24FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_24FPS,
	sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_24FPS,

	sensor_imx586_setfile_B_FULL_REMOSAIC_8000x6000,
};

static const u32 sensor_imx586_setfile_B_sizes[] = {
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_30FPS),

	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_FULL_4000x3000_24FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x2268_24FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1968_24FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1860_24FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_4000x1816_30FPS),
	ARRAY_SIZE(sensor_imx586_setfile_B_2X2BIN_CROP_3000x3000_24FPS),
	
	ARRAY_SIZE(sensor_imx586_setfile_B_FULL_REMOSAIC_8000x6000),
};

static const struct sensor_pll_info_compact *sensor_imx586_pllinfos_B[] = {
	&sensor_imx586_pllinfo_B_2X2BIN_FULL_4000x3000_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x2268_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1968_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1860_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1816_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_3000x3000_30FPS,

	&sensor_imx586_pllinfo_B_2X2BIN_FULL_4000x3000_24FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x2268_24FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1968_24FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1860_24FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_4000x1816_30FPS,
	&sensor_imx586_pllinfo_B_2X2BIN_CROP_3000x3000_24FPS,

	&sensor_imx586_pllinfo_B_FULL_REMOSAIC_8000x6000,
};

#endif
