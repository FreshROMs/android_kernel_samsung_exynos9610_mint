name: Build FreshCore (Staging)

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2
    - uses: JantHsueh/get-git-log-action@1.0
      id: log
      
    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install build-essential libelf-dev kernel-package bzip2 lib32stdc++6 libc6-dev-i386 git -y
      
    - name: Install Toolchain
      run: |
          set -eo pipefail
          git clone https://github.com/arter97/arm64-gcc.git ${HOME}/toolchain
        
    - name: Build FreshCore Kernel
      run: |
          set -eo pipefail
          echo "  I: Building FreshCore CI $GITHUB_RUN_NUMBER"
          ./build.sh ci
          
    - name: Prepare Release
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname FRSH_CORE_*.zip` ./release/
          cp .config ./release/kernel_config.txt

    - name: Upload image artifact
      uses: actions/upload-artifact@v2
      with:
        name: Kernel Image (staging-${{ github.run_number }})
        path: 'tools/package/boot.img'
        if-no-files-found: error

    - name: Upload config artifact
      uses: actions/upload-artifact@v2
      with:
        name: Kernel Config (staging-${{ github.run_number }})
        path: 'release/kernel_config.txt'
        if-no-files-found: error
        
    - name: Upload release
      uses: Hs1r1us/Release-AIO@v1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag
        tag_name: ci_${{ github.run_number }}
        release_name: ci_staging-${{ github.run_number }}
        body: ${{ steps.log.outputs.log }}
        asset_files: './release'
        prerelease: true
