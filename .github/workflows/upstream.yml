name: Build FreshCore (Upstream)

on:
  push:
    branches: [ upstream ]
  pull_request:
    branches: [ upstream ]

jobs:
  a50:
    name: Build Galaxy A50
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2
    - uses: JantHsueh/get-git-log-action@1.0
      id: log
      
    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install build-essential libelf-dev kernel-package bzip2 lib32stdc++6 libc6-dev-i386 git -y
      
    - name: Install Toolchain
      run: |
          set -eo pipefail
          git clone https://github.com/arter97/arm64-gcc.git ${HOME}/toolchain
        
    - name: Build FreshCore Kernel
      run: |
          set -eo pipefail
          echo "  I: Building FreshCore CI $GITHUB_RUN_NUMBER"
          export KBUILD_BUILD_VERSION=$GITHUB_RUN_NUMBER
          ./build.sh a50 ci
          
    - name: Prepare Release
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname FRSH_CORE_*.zip` ./release/
          cp .config ./release/kernel_config_a50.txt

    - name: Upload image artifact
      uses: actions/upload-artifact@v2
      with:
        name: Galaxy A50 Kernel Image (upstream-${{ github.run_number }})
        path: 'tools/package/boot.img'
        if-no-files-found: error

    - name: Upload config artifact
      uses: actions/upload-artifact@v2
      with:
        name: Galaxy A50 Kernel Config (upstream-${{ github.run_number }})
        path: 'release/kernel_config_a50.txt'
        if-no-files-found: error
        
    - name: Upload release
      uses: Hs1r1us/Release-AIO@v1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag
        tag_name: ci_${{ github.run_number }}-upstream
        release_name: ci_upstream-${{ github.run_number }}
        body: "Atomic! Do not install on a daily-driver!\n${{ steps.log.outputs.log }}"
        asset_files: './release'

  m30s:
    name: Build Galaxy M30s
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2
    - uses: JantHsueh/get-git-log-action@1.0
      id: log-m30s
      
    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install build-essential libelf-dev kernel-package bzip2 lib32stdc++6 libc6-dev-i386 git -y
      
    - name: Install Toolchain
      run: |
          set -eo pipefail
          git clone https://github.com/arter97/arm64-gcc.git ${HOME}/toolchain
        
    - name: Build FreshCore Kernel
      run: |
          set -eo pipefail
          echo "  I: Building FreshCore CI $GITHUB_RUN_NUMBER"
          export KBUILD_BUILD_VERSION=$GITHUB_RUN_NUMBER
          ./build.sh m30s ci
          
    - name: Prepare Release
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname FRSH_CORE_*.zip` ./release/
          cp .config ./release/kernel_config_m30s.txt

    - name: Upload image artifact
      uses: actions/upload-artifact@v2
      with:
        name: Galaxy M30s Kernel Image (upstream-${{ github.run_number }})
        path: 'tools/package/boot.img'
        if-no-files-found: error

    - name: Upload config artifact
      uses: actions/upload-artifact@v2
      with:
        name: Galaxy M30s Kernel Config (upstream-${{ github.run_number }})
        path: 'release/kernel_config_m30s.txt'
        if-no-files-found: error
        
    - name: Upload release
      uses: Hs1r1us/Release-AIO@v1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag
        tag_name: ci_${{ github.run_number }}-upstream
        release_name: ci_upstream-${{ github.run_number }}
        body: "Atomic! Do not install on a daily-driver!\n${{ steps.log-m30s.outputs.log }}"
        asset_files: './release'

