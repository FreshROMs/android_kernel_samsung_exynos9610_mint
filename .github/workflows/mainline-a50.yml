name: Mainline Build (Galaxy A50)

on:
  push:
    branches:
      - 'android-*'

jobs:
  oneui:
    name: Build One UI
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --magisk --automated --device a50 --variant oneui

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: oneui_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  aosp:
    name: Build Lineage/AOSP 11
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --magisk --automated --device a50 --variant aosp

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: aosp_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  snowcone:
    name: Build Lineage/AOSP 12
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --magisk --automated --device a50 --variant aosp --android 12

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: snowcone_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  oneui_nonroot:
    name: Build One UI - Non-root
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --automated --device a50 --variant oneui

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: oneui-noroot_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  aosp_nonroot:
    name: Build Lineage/AOSP 11 - Non-root
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --automated --device a50 --variant aosp

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: aosp-noroot_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  snowcone_nonroot:
    name: Build Lineage/AOSP 12 - Non-root
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --automated --device a50 --variant aosp --android 12

    - name: Prepare release package
      run: |
          mkdir -p ./release
          mv -f `find ./ -iname Mint-*.zip` ./release/

    - name: Upload release package
      uses: actions/upload-artifact@v2
      with:
        name: snowcone-noroot_mainline-${{ github.run_number }}
        path: 'release'
        if-no-files-found: error

  recovery:
    name: Build Recovery Kernel
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Export build branch
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: branch_name

    - name: Install Debian/Ubuntu dependencies
      run: sudo apt-get install bzip2 lib32stdc++6 libc6-dev-i386 libncurses5 -y

    - name: Build Mint kernel
      run: |
          set -eo pipefail
          echo "  I: Building Mint kernel ${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER}"
          export KBUILD_BUILD_VERSION=${GITHUB_RUN_NUMBER}
          ./build.sh --automated --device a50 --variant recovery

    - name: Upload kernel image artifact
      uses: actions/upload-artifact@v2
      with:
        name: Recovery Kernel (mainline-${{ github.run_number }}
        path: './Image'
        if-no-files-found: error

  release:
    name: Release files and configs
    if: always()
    needs: [oneui, aosp, oneui_nonroot, aosp_nonroot, snowcone, snowcone_nonroot]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
    - uses: actions/checkout@v2

    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Manila"
        timezoneMacos: "Asia/Manila"
        timezoneWindows: "Philippine Standard Time"

    - name: Merge One UI Release
      uses: actions/download-artifact@v2
      with:
        name: oneui_mainline-${{ github.run_number }}
        path: release
      
    - name: Merge Lineage/AOSP 11 release
      uses: actions/download-artifact@v2
      with:
        name: aosp_mainline-${{ github.run_number }}
        path: release

    - name: Merge Lineage/AOSP 12 release
      uses: actions/download-artifact@v2
      with:
        name: snowcone_mainline-${{ github.run_number }}
        path: release
      
    - name: Merge One UI (nonroot) release
      uses: actions/download-artifact@v2
      with:
        name: oneui-noroot_mainline-${{ github.run_number }}
        path: release
      
    - name: Merge Lineage/AOSP (nonroot) release
      uses: actions/download-artifact@v2
      with:
        name: aosp-noroot_mainline-${{ github.run_number }}
        path: release
      
    - name: Merge Lineage/AOSP 12 (nonroot) release
      uses: actions/download-artifact@v2
      with:
        name: snowcone-noroot_mainline-${{ github.run_number }}
        path: release

    - name: Delete older release
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tag_pattern: "a50dx"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload release
      uses: Hs1r1us/Release-AIO@v1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag
        tag_name: mainline-${{ github.run_number }}_a50dx
        release_name: Galaxy A50 (mainline-${{ github.run_number }})
        body_path: "./tools/make/release/a50.md"
        asset_files: './release'